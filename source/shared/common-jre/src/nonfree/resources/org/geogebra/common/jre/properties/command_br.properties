# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Rollad>, <Rollad>, ... ]
AffineRatio.Syntax=[ <Point>, <Point>, <Point> ]
Angle.Syntax=[ <Object> ]\n[ <Vector>, <Vector> ]\n[ <Eeunenn>, <Eeunenn> ]\n[ <Point>, <Apex>, <Point> ]\n[ <Point>, <Apex>, <Ankl> ]
Angle.Syntax3D=[ <Object> ]\n[ <Vector>, <Vector> ]\n[ <Eeunenn>, <Eeunenn> ]\n[ <Eeunenn>, <Plane> ]\n[ <Plane>, <Plane> ]\n[ <Point>, <Apex>, <Point> ]\n[ <Point>, <Apex>, <Ankl> ]\n[ <Point>, <Point>, <Point>, <Direction> ]
AngularBisector.Syntax=[ <Eeunenn>, <Eeunenn> ]\n[ <Point>, <Point>, <Point> ]
Append=Sammañ
Append.Syntax=[ <Rollad>, <Object> ]\n[ <Object>, <Rollad> ]
ApplyMatrix.Syntax=[ <Matrix>, <Object> ]
Arc.Syntax=[ <Kelc’h>, <Point>, <Point> ]\n[ <Elipsenn>, <Point>, <Point> ]\n[ <Kelc’h>, <Talvoud Arventenn>, <Talvoud Arventenn> ]\n[ <Elipsenn>, <Talvoud Arventenn>, <Talvoud Arventenn> ]
AreCollinear.Syntax=[ <Point>, <Point>, <Point> ]
AreConcurrent.Syntax=[ <Eeunenn>, <Eeunenn>, <Eeunenn> ]
AreConcyclic.Syntax=[ <Point>, <Point>, <Point>, <Point> ]
AreCongruent.Syntax=[ <Object>, <Object> ]
AreEqual.Syntax=[ <Object>, <Object> ]
AreParallel.Syntax=[ <Eeunenn>, <Eeunenn> ]
ArePerpendicular.Syntax=[ <Eeunenn>, <Eeunenn> ]
Area.Syntax=[ <Konikenn> ]\n[ <Poligon> ]\n[ <Point>, ..., <Point> ]
Assume.SyntaxCAS=[ <Condition>, <Expression> ]
Asymptote.Syntax=[ <Object> ]
AttachCopyToView.Syntax=[ <Object>, <Diskouez 0|1|2> ]\n[ <Object>, <Diskouez 0|1|2>, <Poent 1>, <Point 2>, <Screen Point 1>, <Skramm Poent 2> ]
Axes.Syntax=[ <Konikenn> ]
Axes.Syntax3D=[ <Konikenn> ]\n[ <Quadric> ]
AxisStepX.Syntax=[ ]
AxisStepY.Syntax=[ ]
BarChart.Syntax=[ <Rollad Data>, <List of Frequencies> ]\n[ <Rollad Data Diaoz>, <Ledander Barrennoù>, <Vertical Scale Factor (optional)> ]\n[ <Rollad Data>, <List of Frequencies>, <Ledander Barrennoù> ]\n[ <Talvoud Kentañ>, <Talvoud Echuiñ>, <List of Heights> ]\n[ <Talvoud Kentañ>, <Talvoud Echuiñ>, <Expression>, <Varienn>, <diwar>, <To Number> ]\n[ <Talvoud Kentañ>, <Talvoud Echuiñ>, <Expression>, <Varienn>, <diwar>, <To Number>, <Step Width> ]
Barycenter.Syntax=[ <List of Points>, <List of Weights> ]
Bernoulli.Syntax=[ <Probability>, <Boolean Cumulative> ]
BetaDist.Syntax=[ <Alfa>, <Beta>, <Variable Value> ]\n[ <Alfa>, <Beta>, <Variable Value>, <Boolean Cumulative>  ]\n[ <Alfa>, <Beta>, x, <Boolean Cumulative> ]
Binomial.Syntax=[ <Number n>, <Niver r> ]
BinomialDist.Syntax=[ <Number of Trials>, <Probapterioù> ]\n[ <Number of Trials>, <Probapterioù>, <Boolean Cumulative> ]\n[ <Number of Trials>, <Probapterioù>, <List of Values> ]\n[ <Number of Trials>, <Probapterioù>, <Variable Value>, <Boolean Cumulative> ]
BinomialDist.SyntaxCAS=[ <Number of Trials>, <Probapterioù>, <Variable Value>, <Boolean Cumulative> ]\n[ <Number of Trials>, <Probapterioù>, <List of Values> ]
Bottom.Syntax=[ <Quadric> ]
BoxPlot.Syntax=[ <Urzhienn>, <Hanter uhelder>, <Rollad Data Diaoz> ]\n[ <Urzhienn>, <Hanter uhelder>, <Rollad Data Diaoz>, <Boolean Outliers> ]\n[ <Urzhienn>, <Hanter uhelder>, <Rollad Data>, <List of Frequencies>, <Boolean Outliers> ]\n[ <Urzhienn>, <Hanter uhelder>, <Talvoud Kentañ>, <Q1>, <Median>, <Q3>, <Talvoud Echuiñ> ]
Button.Syntax=[ ]\n[ <Caption> ]
CASLoaded.Syntax=[]
CFactor.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Varienn> ]
CIFactor.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Varienn> ]
CSolutions.SyntaxCAS=[ <Kevatalenn> ]\n[ <Kevatalenn>, <Varienn> ]\n[ <List of Equations>, <List of Variables> ]
CSolve.SyntaxCAS=[ <Kevatalenn> ]\n[ <Kevatalenn>, <Varienn> ]\n[ <List of Equations>, <List of Variables> ]
Cauchy.Syntax=[ <Median>, <Scale>, <Variable Value> ]\n[ <Median>, <Scale>, <Variable Value>, <Boolean Cumulative>  ]\n[ <Median>, <Scale>, x, <Boolean Cumulative> ]
Cauchy.SyntaxCAS=[ <Median>, <Scale>, <Variable Value> ]
Cell.Syntax=[ <Kolonenn>, <Linenn> ]
CellRange.Syntax=[ <Log kentañ>, <End Cell> ]
Center.Syntax=[ <Konikenn> ]
Center.Syntax3D=[ <Konikenn> ]\n[ <Quadric> ]
CenterView.Syntax=[ <Center Point> ]
Centroid.Syntax=[ <Poligon> ]
CharacteristicPolynomial.Syntax=[ <Matrix> ]
Checkbox.Syntax=[ ]\n[ <Caption> ]\n[ <Rollad> ]\n[ <Caption>, <Rollad> ]
ChiSquared.Syntax=[ <Degrees of Freedom>, <Variable Value> ]\n[ <Degrees of Freedom>, <Variable Value>, <Boolean Cumulative> ]\n[ <Degrees of Freedom>, x, <Boolean Cumulative> ]
ChiSquared.SyntaxCAS=[ <Degrees of Freedom>, <Varienn> ]
ChiSquaredTest.Syntax=[ <Matrix> ]\n[ <Rollad>, <Rollad> ]\n[ <Matrix>, <Matrix> ]\n[ <Rollad>, <Rollad>, <Degrees of Freedom> ]
Circle.Syntax=[ <Point>, <Radius> ]\n[ <Point>, <Segmant> ]\n[ <Point>, <Point> ]\n[ <Point>, <Point>, <Point> ]
Circle.Syntax3D=[ <Point>, <Radius> ]\n[ <Point>, <Segmant> ]\n[ <Point>, <Point> ]\n[ <Point>, <Point>, <Point> ]\n[ <Eeunenn>, <Point> ]\n[ <Point>, <Radius (skin)>, <Direction> ]\n[ <Point>, <Point>, <Direction> ]
CircleArc.Syntax=[ <Poent-kreiz>, <Point>, <Point> ]
CircleSector.Syntax=[ <Poent-kreiz>, <Point>, <Point> ]
CircumcircleArc.Syntax=[ <Point>, <Point>, <Point> ]
CircumcircleSector.Syntax=[ <Point>, <Point>, <Point> ]
Circumference.Syntax=[ <Konikenn> ]
Classes.Syntax=[ <Rollad Data>, <Niver Klasadoù> ]\n[ <Rollad Data>, <Kregiñ e-barzh>, <Width of Classes> ]
ClosestPoint.Syntax=[ <Hent>, <Point> ]\n[ <Eeunenn>, <Eeunenn> ]
ClosestPointRegion.Syntax=[ <Region>, <Point> ]
Coefficients.Syntax=[ <Polynomial> ]\n[ <Konikenn> ]
Coefficients.SyntaxCAS=[ <Polynomial> ]\n[ <Polynomial>, <Varienn> ]
Column.Syntax=[ <Spreadsheet Cell> ]
ColumnName.Syntax=[ <Spreadsheet Cell> ]
CommonDenominator.Syntax=[ <Expression>, <Expression> ]
CompleteSquare.Syntax=[ <Quadratic Function> ]
ComplexRoot.Syntax=[ <Polynomial> ]
Cone.Syntax=[ <Kelc’h>, <Uhelder> ]\n[ <Point>, <Point>, <Radius (skin)> ]\n[ <Point>, <Vector>, <Ankl> ]
ConeInfinite.Syntax=[ <Point>, <Vector>, <Ankl> ]\n[ <Point>, <Point>, <Ankl> ]\n[ <Point>, <Eeunenn>, <Ankl> ]
Conic.Syntax=[ <Rollad> ]\n[ <Point>, <Point>, <Point>, <Point>, <Point> ]\n[ <Niver>, <Niver>, <Niver>, <Niver>, <Niver>, <Niver> ]
ConstructionStep.Syntax=[ ]\n[ <Object> ]
ContingencyTable.Syntax=[ <Rollad Testenn>, <Rollad Testenn> ]\n[ <Rollad Testenn>, <Rollad Testenn>, <Dibarzhioù> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table> , <Dibarzhioù> ]
ContinuedFraction.Syntax=[ <Niver> ]\n[ <Niver>, <Live> ]\n[ <Niver>, <Live>, <Berrskrivañ Boulean> ]
ConvexHull.Syntax=[ <List of Points> ]
CopyFreeObject.Syntax=[ <Object> ]
Corner.Syntax=[ <Number of Corner> ]\n[ <Image>, <Number of Corner> ]\n[ <Testenn>, <Number of Corner> ]\n[ <Gwel Grafikoù>, <Number of Corner> ]
CountIf.Syntax=[ <Condition>, <Rollad> ]\n[ <Condition>, <Varienn>, <Rollad> ]
Covariance.Syntax=[ <List of Points> ]\n[ <List of Numbers>, <List of Numbers> ]
Cross.Syntax=[ <Vector>, <Vector> ]
CrossRatio.Syntax=[ <Point>, <Point>, <Point>, <Point> ]
Cube.Syntax=[ <Square> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Cubic.Syntax=[ <Point>, <Point>, <Point>, <Niver> ]
Curvature.Syntax=[ <Point>, <Object> ]
CurvatureVector.Syntax=[ <Point>, <Object> ]
CurveCartesian.Syntax=[ <Expression>, <Expression>, <Parameter Variable>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
CurveCartesian.Syntax3D=[ <Expression>, <Expression>, <Parameter Variable>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]\n[ <Expression>, <Expression>, <Expression>, <Parameter Variable>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
Cylinder.Syntax=[ <Kelc’h>, <Uhelder> ]\n[ <Point>, <Point>, <Radius (skin)> ]
CylinderInfinite.Syntax=[ <Eeunenn>, <Radius (skin)> ]\n[ <Point>, <Vector>, <Radius (skin)> ]\n[ <Point>, <Point>, <Radius (skin)> ]
DataFunction.Syntax=[ <List of Numbers>, <List of Numbers> ]
Defined.Syntax=[ <Object> ]
Degree.Syntax=[ <Polynomial> ]
Degree.SyntaxCAS=[ <Polynomial> ]\n[ <Polynomial>, <Varienn> ]
DelauneyTriangulation.Syntax=[ <List of Points> ]
Delete.Syntax=[ <Object> ]
Denominator.Syntax=[ <Niver> ]\n[ <Fonksion> ]
Denominator.SyntaxCAS=[ <Expression> ]
Derivative.Syntax=[ <Fonksion> ]\n[ <Curve> ]\n[ <Fonksion>, <Niver> ]\n[ <Fonksion>, <Varienn> ]\n[ <Curve>, <Niver> ]\n[ <Fonksion>, <Varienn>, <Niver> ]
Derivative.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Varienn> ]\n[ <Expression>, <Varienn>, <Niver> ]
Determinant.Syntax=[ <Matrix> ]
Diameter.Syntax=[ <Vector>, <Konikenn> ]\n[ <Eeunenn>, <Konikenn> ]
Difference.Syntax=[ <Poligon>, <Poligon> ]
Dilate.Syntax=[ <Object>, <Keñver> ]\n[ <Object>, <Keñver>, <Poent-kreiz> ]
Dimension.Syntax=[ <Object> ]
Direction.Syntax=[ <Eeunenn> ]
Directrix.Syntax=[ <Konikenn> ]
Distance.Syntax=[ <Point>, <Object> ]\n[ <Eeunenn>, <Eeunenn> ]\n[ <Plane>, <Plane> ]
Div.Syntax=[ <Dividend Number>, <Ranner> ]\n[ <Dividend Polynomial>, <Polinom Ranner> ]
Division.Syntax=[ <Dividend Number>, <Ranner> ]\n[ <Dividend Polynomial>, <Polinom Ranner> ]
Divisors.Syntax=[ <Niver> ]
DivisorsList.Syntax=[ <Niver> ]
DivisorsSum.Syntax=[ <Niver> ]
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Dot=Pik
Dot.Syntax=[ <Vector>, <Vector> ]
DotPlot.Syntax=[ <Rollad Data Diaoz>, <Dreistlakaat Poentoù-nes (diret)>, <Scale Factor (optional)>]
DynamicCoordinates.Syntax=[ <Point>, <x-Kenurzhienn>, <y-Coordinate> ]\n[ <Point>, <x-Kenurzhienn>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity.Syntax=[ <Konikenn> ]
Eigenvalues.SyntaxCAS=[ <Matrix> ]
Eigenvectors.SyntaxCAS=[ <Matrix> ]
Element.Syntax=[ <Rollad>, <Position of Element> ]\n[ <Matrix>, <Linenn>, <Kolonenn> ]\n[ <Rollad>, <Index1>, <Indeks2>, ... ]
Element.SyntaxCAS=[ <Rollad>, <Position of Element> ]\n[ <Matrix>, <Linenn>, <Kolonenn> ]
Eliminate.Syntax=[ <List of Polynomials>, <List of Variables> ]
Ellipse.Syntax=[ <Focus>, <Focus>, <Hanter-hed Ahel Kentañ> ]\n[ <Focus>, <Focus>, <Segmant> ]\n[ <Focus>, <Focus>, <Point> ]
Ends.Syntax=[ <Quadric> ]
Envelope.Syntax=[ <Hent>, <Point> ]
Erlang.Syntax=[ <Shape>, <Rate>, <Variable Value> ]\n[ <Shape>, <Rate>, <Variable Value>, <Boolean Cumulative> ]\n[ <Shape>, <Rate>, x, <Boolean Cumulative> ]
Excentricity.Syntax=[ <Konikenn> ]
Execute.Syntax=[ <Rollad Testenn> ]\n[ <Rollad Testenn>, <Parameter>, <Parameter>, ... ]
Expand.Syntax=[ <Expression> ]
Exponential.Syntax=[ <Lambda>, <Variable Value> ]\n[ <Lambda>, <Variable Value>, <Boolean Cumulative> ]\n[ <Lambda>, x, <Boolean Cumulative> ]
Exponential.SyntaxCAS=[ <Lambda>, <Variable Value> ]
ExportImage.Syntax=[ <Perzh>, <Value>, <Perzh>, <Value>, ... ]
ExtendedGCD.Syntax=[ <Anterin>, <Anterin>]\n[ <Polynomial>, <Polynomial>]
Extremum.Syntax=[ <Polynomial> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]
Extremum.SyntaxCAS=[ <Fonksion> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]
FDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Derezioù Frankiz>, <Variable Value> ]\n[ <Numerator Degrees of Freedom>, <Denominator Derezioù Frankiz>, <Variable Value>, <Boolean Cumulative> ]\n[ <Numerator Degrees of Freedom>, <Denominator Derezioù Frankiz>, x, <Boolean Cumulative> ]
FDistribution.SyntaxCAS=[ <Numerator Degrees of Freedom>, <Denominator Derezioù Frankiz>, <Variable Value> ]
Factor.Syntax=[ <Polynomial> ]
Factor.SyntaxCAS=[ <Niver> ]\n[ <Polynomial> ]\n[ <Expression>, <Varienn> ]
Factors.Syntax=[ <Polynomial> ]\n[ <Niver> ]
FillCells.Syntax=[ <CellRange>, <Object> ]\n[ <Log>, <Rollad> ]\n[ <Log>, <Matrix> ]
FillColumn.Syntax=[ <Kolonenn>, <Rollad> ]
FillRow.Syntax=[ <Linenn>, <Rollad> ]
First.Syntax=[ <Rollad> ]\n[ <Testenn> ]\n[ <Rollad>, <Number of Elements> ]\n[ <Testenn>, <Number of Elements> ]\n[ <Locus>, <Number of Elements> ]
First.SyntaxCAS=[ <Rollad> ]\n[ <Rollad>, <Number of Elements> ]
FirstAxis.Syntax=[ <Konikenn> ]
FirstAxisLength.Syntax=[ <Konikenn> ]
Fit.Syntax=[ <List of Points>, <List of Functions> ]\n[ <List of Points>, <Fonksion> ]
FitExp.Syntax=[ <List of Points> ]
FitGrowth.Syntax=[ <List of Points> ]
FitImplicit.Syntax=[ <List of Points>, <Urzh> ]
FitLineX.Syntax=[ <List of Points> ]
FitLineY.Syntax=[ <List of Points> ]
FitLog.Syntax=[ <List of Points> ]
FitLogistic.Syntax=[ <List of Points> ]
FitPoly.Syntax=[ <List of Points>, <Derez ar polinom> ]\n[ <Freehand Function>, <Derez ar polinom> ]
FitPow.Syntax=[ <List of Points> ]
FitSin.Syntax=[ <List of Points> ]
Flatten.Syntax=[ <Rollad> ]
Focus.Syntax=[ <Konikenn> ]
FractionText.Syntax=[ <Niver> ]\n[ <Point> ]\n[ <Niver>, <Boolean Single fraction> ]
Frequency.Syntax=[ <Rollad Data Diaoz> ]\n[ <Boolean Cumulative>, <Rollad Data Diaoz> ]\n[ <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz> ]\n[ <Rollad Testenn>, <Rollad Testenn> ]\n[ <Boolean Cumulative>, <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz> ]\n[ <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)> ]
FrequencyPolygon.Syntax=[ <Rollad Harzoù Klasadoù>, <List of Heights> ]\n[ <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Boolean Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Boolean Use Density>, <Density Scale Factor (optional)> ]
FrequencyTable.Syntax=[ <Rollad Data Diaoz>, <Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <Rollad Data Diaoz> ]\n[ <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz> ]\n[ <Boolean Cumulative>, <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz> ]\n[ <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)> ]
FromBase.Syntax=[ <Number as Text>, <Diazenn> ]
Function.Syntax=[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <List of Numbers> ]
Function.Syntax3D=[ <List of Numbers> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Expression>, <Arventenn Varienn 1>, <Talvoud Kentañ>, <Talvoud Echuiñ>, <Arventenn Varienn 2>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
Function.SyntaxCAS=[ <Fonksion>, <x Kentañ>, <End x-Value> ]
FutureValue.Syntax=[ <Feur>, <Number of Periods>, <Payment>, <Talvoud A-vremañ (diret)>, <Type (optional)> ]
GCD.Syntax=[ <List of Numbers> ]\n[ <Niver>, <Niver> ]
GCD.SyntaxCAS=[ <List of Numbers> ]\n[ <List of Polynomials> ]\n[ <Niver>, <Niver> ]\n[ <Polynomial>, <Polynomial> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <Variable Value> ]\n[ <Alfa>, <Beta>, <Variable Value>, <Boolean Cumulative>  ]\n[ <Alfa>, <Beta>, x, <Boolean Cumulative> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Variable Value> ]
GeometricMean.Syntax=[ <List of Numbers> ]
GetTime.Syntax=[]\n[ <Furmad> ]
GroebnerDegRevLex.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <List of Variables> ]
GroebnerLex.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <List of Variables> ]
GroebnerLexDeg.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <List of Variables> ]
HarmonicMean.Syntax=[ <List of Numbers> ]
Height.Syntax=[ <Solid> ]
HideLayer.Syntax=[ <Niver> ]
Histogram.Syntax=[ <Rollad Harzoù Klasadoù>, <List of Heights> ]\n[ <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)> ]
HistogramRight.Syntax=[ <Rollad Harzoù Klasadoù>, <List of Heights> ]\n[ <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)>  ]\n[ <Boolean Cumulative>, <Rollad Harzoù Klasadoù>, <Rollad Data Diaoz>, <Use Density>, <Density Scale Factor (optional)> ]
HyperGeometric.Syntax=[ <Ment ar Boblañs>, <Niveroù Troioù mat>, <Sample Size> ]\n[ <Ment ar Boblañs>, <Niveroù Troioù mat>, <Sample Size>, <Boolean Cumulative> ]\n[ <Ment ar Boblañs>, <Niveroù Troioù mat>, <Sample Size>, <Variable Value>, <Boolean Cumulative> ]
HyperGeometric.SyntaxCAS=[ <Ment ar Boblañs>, <Niveroù Troioù mat>, <Sample Size>, <Variable Value>, <Boolean Cumulative> ]
Hyperbola.Syntax=[ <Focus>, <Focus>, <Hanter-hed Ahel Kentañ> ]\n[ <Focus>, <Focus>, <Segmant> ]\n[ <Focus>, <Focus>, <Point> ]
IFactor.Syntax=[ <Polynomial> ]
IFactor.SyntaxCAS=[ <Expression> ]
Icosahedron.Syntax=[ <Tric’horn Kekostezek> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Identity.Syntax=[ <Niver> ]
If.Syntax=[ <Condition>, <Neuze> ]\n[ <Condition>, <Neuze>, <Anez> ]
ImplicitCurve.Syntax=[ <List of Points> ]\n[ <f(x, y)> ]
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expression>, <Dependent Variable>, <Varienn Dizepant> ]
Incircle.Syntax=[ <Point>, <Point>, <Point> ]
IndexOf.Syntax=[ <Object>, <Rollad> ]\n[ <Testenn>, <Testenn> ]\n[ <Object>, <Rollad>, <Indeks Kentañ> ]\n[ <Testenn>, <Testenn>, <Indeks Kentañ> ]
Insert.Syntax=[ <Rollad>, <Rollad>, <Lec’h> ]\n[ <Object>, <Rollad>, <Lec’h> ]
Integral.Syntax=[ <Fonksion> ]\n[ <Fonksion>, <Varienn> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value>, <Boolean Evaluate> ]
Integral.SyntaxCAS=[ <Fonksion> ]\n[ <Fonksion>, <Varienn> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
IntegralBetween.Syntax=[ <Fonksion>, <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <Fonksion>, <x Kentañ>, <End x-Value>, <Boolean Evaluate> ]
IntegralBetween.SyntaxCAS=[ <Fonksion>, <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <Fonksion>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
IntegralSymbolic.Syntax=[ <Fonksion> ]\n[ <Fonksion>, <Varienn> ]
InteriorAngles.Syntax=[ <Poligon> ]
Intersect.Syntax=[ <Object>, <Object> ]\n[ <Object>, <Object>, <Index of Intersection Point> ]\n[ <Object>, <Object>, <Poent kentañ> ]\n[ <Fonksion>, <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Krommenn 1>, <Curve 2>, <Parameter 1>, <Arventenn 2> ]
Intersect.SyntaxCAS=[ <Fonksion>, <Fonksion> ]
IntersectConic.Syntax=[ <Plane>, <Quadric> ]\n[ <Quadric>, <Quadric> ]
IntersectPath.Syntax=[ <Eeunenn>, <Poligon> ]\n[ <Poligon>, <Poligon> ]
IntersectPath.Syntax3D=[ <Eeunenn>, <Poligon> ]\n[ <Poligon>, <Poligon> ]\n[ <Plane>, <Poligon> ]\n[ <Plane>, <Quadric> ]
Intersection.Syntax=[ <Rollad>, <Rollad> ]
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Probability> ]
InverseBinomial.Syntax=[ <Number of Trials>, <Probapterioù>, <Probapter kumulativel> ]
InverseBinomialMinimumTrials.Syntax=[ <Probapter kumulativel>, <Probapterioù>, <Niveroù Troioù mat> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Probapter kumulativel>, <Probapterioù>, <Niveroù Troioù mat> ]
InverseCauchy.Syntax=[ <Median>, <Scale>, <Probability> ]
InverseChiSquared.Syntax=[ <Degrees of Freedom>, <Probability> ]
InverseExponential.Syntax=[ <Lambda>, <Probability> ]
InverseFDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Derezioù Frankiz>, <Probability> ]
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probability> ]
InverseHyperGeometric.Syntax=[ <Ment ar Boblañs>, <Niveroù Troioù mat>, <Sample Size>, <Probability> ]
InverseLaplace.Syntax=[ <Fonksion> ]\n[ <Fonksion>, <Varienn> ]\n[ <Fonksion>, <Varienn>, <Varienn> ]
InverseLogNormal.Syntax=[ <Mean>, <Diroudañ Skweriek>, <Probability> ]
InverseLogistic.Syntax=[ <Mean>, <Scale>, <Probability> ]
InverseNormal.Syntax=[ <Mean>, <Diroudañ Skweriek>, <Probapter kumulativel> ]
InversePascal.Syntax=[ <n>, <p>, <Probability> ]
InversePoisson.Syntax=[ <Mean>, <Probability> ]
InverseTDistribution.Syntax=[ <Degrees of Freedom>, <Probability> ]
InverseWeibull.Syntax=[ <Shape>, <Scale>, <Probability> ]
InverseZipf.Syntax=[ <Number of Elements>, <Eksponant>, <Probability> ]
Invert.Syntax=[ <Matrix> ]\n[ <Fonksion> ]
IsFactored.Syntax=[ <Polynomial> ]
IsInRegion.Syntax=[ <Point>, <Region> ]
IsInteger.Syntax=[ <Niver> ]
IsPrime.Syntax=[ <Niver> ]
IsTangent.Syntax=[ <Eeunenn>, <Konikenn> ]
IsVertexForm.Syntax=[ <Fonksion> ]
Iteration.Syntax=[ <Fonksion>, <Talvoud Kentañ>, <Niver an Iteradurioù> ]\n[ <Expression>, <Variables>, <Talvoudoù Kentañ>, <Count> ]
IterationList.Syntax=[ <Fonksion>, <Talvoud Kentañ>, <Niver an Iteradurioù> ]\n[ <Expression>, <Variables>, <Talvoudoù Kentañ>, <Count> ]
IterationList.SyntaxCAS=[ <Fonksion>, <Talvoud Kentañ>, <Niver an Iteradurioù> ]
Join.Syntax=[ <List of Lists> ]\n[ <Rollad>, <Rollad>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Matrix> ]
KeepIf.Syntax=[ <Condition>, <Rollad> ]\n[ <Condition>, <Varienn>, <Rollad> ]
LCM.Syntax=[ <List of Numbers> ]\n[ <Niver>, <Niver> ]
LCM.SyntaxCAS=[ <List of Numbers> ]\n[ <List of Polynomials> ]\n[ <Niver>, <Niver> ]\n[ <Polynomial>, <Polynomial> ]
LUDecomposition.Syntax=[ <Matrix> ]
LaTeX.Syntax=[ <Object> ]\n[ <Object>, <Boolean for Substitution of Variables> ]\n[ <Object>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]
Laplace.Syntax=[ <Fonksion> ]\n[ <Fonksion>, <Varienn> ]\n[ <Fonksion>, <Varienn>, <Varienn> ]
Last.Syntax=[ <Rollad> ]\n[ <Testenn> ]\n[ <Rollad>, <Number of Elements> ]\n[ <Testenn>, <Number of Elements> ]
Last.SyntaxCAS=[ <Rollad> ]\n[ <Rollad>, <Number of Elements> ]
LeftSide.Syntax=[ <Kevatalenn> ]
LeftSide.SyntaxCAS=[ <Kevatalenn> ]\n[ <List of Equations> ]\n[ <List of Equations>, <Index> ]
LeftSum.Syntax=[ <Fonksion>, <x Kentañ>, <End x-Value>, <Niver ar Reizhkornioù> ]
Length.Syntax=[ <Object> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <Poent Kentañ>, <End Point> ]\n[ <Curve>, <t Kentañ>, <End t-Value> ]\n[ <Curve>, <Poent Kentañ>, <End Point> ]
Length.SyntaxCAS=[ <Rollad> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <Varienn>, <x Kentañ>, <End x-Value> ]
LetterToUnicode.Syntax=[ <Letter> ]
Limit.Syntax=[ <Fonksion>, <Value> ]
Limit.SyntaxCAS=[ <Expression>, <Value> ]\n[ <Expression>, <Varienn>, <Value> ]
LimitAbove.Syntax=[ <Fonksion>, <Value> ]
LimitAbove.SyntaxCAS=[ <Expression>, <Value> ]\n[ <Expression>, <Varienn>, <Value> ]
LimitBelow.Syntax=[ <Fonksion>, <Value> ]
LimitBelow.SyntaxCAS=[ <Expression>, <Value> ]\n[ <Expression>, <Varienn>, <Value> ]
Line.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Linenn barallel> ]\n[ <Point>, <Direction Vector> ]
LineBisector.Syntax=[ <Segmant> ]\n[ <Point>, <Point> ]
LineBisector.Syntax3D=[ <Segmant> ]\n[ <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
LineGraph.Syntax=[ <List of x-coordinates>, <List of y-coordinates> ]
Locus.Syntax=[ <Point Creating Locus Line>, <Point> ]\n[ <Point Creating Locus Line>, <Kursor> ]\n[ <Slopefield>, <Point> ]\n[ <f(x, y)>, <Point> ]
LocusEquation.Syntax=[ <Locus> ]\n[ <Locus Point>, <Moving Point> ]\n[ <Eztaol Boulean>, <Moving Point> ]
LogNormal.Syntax=[ <Mean>, <Diroudañ Skweriek>, <Variable Value> ]\n[ <Mean>, <Diroudañ Skweriek>, <Variable Value>, <Boolean Cumulative>  ]\n[ <Mean>, <Diroudañ Skweriek>, x, <Boolean Cumulative> ]
Logistic.Syntax=[ <Mean>, <Scale>, <Variable Value> ]\n[ <Mean>, <Scale>, <Variable Value>, <Boolean Cumulative>  ]\n[ <Mean>, <Scale>, x, <Boolean Cumulative> ]
LowerSum.Syntax=[ <Fonksion>, <x Kentañ>, <End x-Value>, <Niver ar Reizhkornioù> ]
MatrixRank.Syntax=[ <Matrix> ]
Max.Syntax=[ <Interval> ]\n[ <Niver>, <Niver> ]\n[ <Rollad> ]\n[ <Rollad Data>, <List of Frequencies> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]
Max.SyntaxCAS=[ <Rollad> ]\n[ <Interval> ]\n[ <Niver>, <Niver> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Rollad Data>, <List of Frequencies> ]
Maximize.Syntax=[ <Niver Depantus>, <Free Number> ]\n[ <Niver Depantus>, <Point on Path> ]
Mean.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
MeanX.Syntax=[ <List of Points> ]
MeanY.Syntax=[ <List of Points> ]
Median.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
Median.SyntaxCAS=[ <List of Numbers> ]
Midpoint.Syntax=[ <Segmant> ]\n[ <Konikenn> ]\n[ <Interval> ]\n[ <Point>, <Point> ]
Min.Syntax=[ <Interval> ]\n[ <Niver>, <Niver> ]\n[ <Rollad> ]\n[ <Rollad Data>, <List of Frequencies> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]
Min.SyntaxCAS=[ <Rollad> ]\n[ <Interval> ]\n[ <Niver>, <Niver> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Rollad Data>, <List of Frequencies> ]
MinimalPolynomial.Syntax=[ <Matrix> ]
Minimize.Syntax=[ <Niver Depantus>, <Free Number> ]\n[ <Niver Depantus>, <Point on Path> ]
MinimumSpanningTree.Syntax=[ <List of Points> ]
Mirror.Syntax=[ <Object>, <Point> ]\n[ <Object>, <Eeunenn> ]\n[ <Object>, <Kelc’h> ]
Mirror.Syntax3D=[ <Object>, <Point> ]\n[ <Object>, <Eeunenn> ]\n[ <Object>, <Plane> ]\n[ <Object>, <Kelc’h> ]
MixedNumber.SyntaxCAS=[ <Niver> ]
Mod.Syntax=[ <Dividend Number>, <Ranner> ]\n[ <Dividend Polynomial>, <Polinom Ranner> ]
Mode.Syntax=[ <List of Numbers> ]
ModularExponent.Syntax=[ <Niver>, <Niver>, <Niver> ]
NDerivative.Syntax=[ <Fonksion> ]\n[ <Fonksion>, <Urzh> ]
NIntegral.Syntax=[ <Fonksion> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <x Kentañ>, <y Kentañ>, <End x-Value> ]
NIntegral.SyntaxCAS=[ <Fonksion>, <x Kentañ>, <End x-Value> ]\n[ <Fonksion>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
NInvert.Syntax=[ <Fonksion> ]
NSolutions.Syntax=[ <Kevatalenn> ]
NSolutions.SyntaxCAS=[ <Kevatalenn> ]\n[ <Kevatalenn>, <Varienn> ]\n[ <Kevatalenn>, <Varienn = talvoud kentañ> ]\n[ <List of Equations>, <List of Variables> ]
NSolve.Syntax=[ <Kevatalenn> ]
NSolve.SyntaxCAS=[ <Kevatalenn> ]\n[ <Kevatalenn>, <Varienn> ]\n[ <Kevatalenn>, <Varienn = talvoud kentañ> ]\n[ <List of Equations>, <List of Variables> ]
NSolveODE.Syntax=[ <List of Derivatives>, <Absisenn gentañ>, <List of Initial y-coordinates>, <Final x-coordinate> ]
Name.Syntax=[ <Object> ]
Net.Syntax=[ <Poliedr>, <Niver> ]\n[ <Poliedr>, <Niver>, <Face>, <Edge>, <Edge>, ... ]
NextPrime.Syntax=[ <Niver> ]
Normal.Syntax=[ <Mean>, <Diroudañ Skweriek>, <Variable Value> ]\n[ <Mean>, <Diroudañ Skweriek>, <Variable Value>, <Boolean Cumulative> ]\n[ <Mean>, <Diroudañ Skweriek>, x, <Boolean Cumulative> ]\n[ <Mean>, <Diroudañ Skweriek>, <Talvoud Varienn u> , <Talvoud Varienn v> ]
NormalQuantilePlot.Syntax=[ <Rollad Data Diaoz> ]
Normalize.Syntax=[ <List of Numbers> ]\n[ <List of Points> ]
Numerator.Syntax=[ <Niver> ]\n[ <Fonksion> ]
Numerator.SyntaxCAS=[ <Expression> ]
Numeric.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Significant Figures> ]
Object.Syntax=[ <Name of Object as Text> ]
Octahedron.Syntax=[ <Tric’horn Kekostezek> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Ordinal.Syntax=[ <Anterin> ]
OrdinalRank.Syntax=[ <Rollad> ]
OrthogonalLine.Syntax=[ <Point>, <Eeunenn> ]\n[ <Point>, <Segmant> ]\n[ <Point>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Point>, <Eeunenn> ]\n[ <Point>, <Segmant> ]\n[ <Point>, <Vector> ]\n[ <Point>, <Plane> ]\n[ <Eeunenn>, <Eeunenn> ]\n[ <Point>, <Direction>, <Direction> ]\n[ <Point>, <Eeunenn>, <Kenarroud> ]
OrthogonalPlane.Syntax=[ <Point>, <Eeunenn> ]\n[ <Point>, <Vector> ]
OrthogonalVector.Syntax=[ <Eeunenn> ]\n[ <Segmant> ]\n[ <Vector> ]
OrthogonalVector.Syntax3D=[ <Eeunenn> ]\n[ <Segmant> ]\n[ <Vector> ]\n[ <Plane> ]
OrthogonalVector.SyntaxCAS=[ <Vector> ]
OsculatingCircle.Syntax=[ <Point>, <Object> ]
PMCC.Syntax=[ <List of Points> ]\n[ <List of x-coordinates>, <List of y-coordinates> ]
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Point>, <Eeunenn> ]
Parameter.Syntax=[ <Parabolenn> ]
ParametricDerivative.Syntax=[ <Curve> ]
ParseToFunction.Syntax=[ <Testenn> ]\n[ <Fonksion>, <Testenn> ]
ParseToNumber.Syntax=[ <Testenn> ]\n[ <Niver>, <Testenn> ]
PartialFractions.Syntax=[ <Fonksion> ]
PartialFractions.SyntaxCAS=[ <Fonksion> ]\n[ <Fonksion>, <Varienn> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Boolean Cumulative> ]\n[ <n>, <p>, <Variable Value>, <Boolean Cumulative> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Variable Value>, <Boolean Cumulative> ]
PathParameter.Syntax=[ <Poent war Hent> ]
Payment.Syntax=[ <Feur>, <Number of Periods>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PenStroke.Syntax=[ <Point>, ..., <Point> ]
Percentile.Syntax=[ <List of Numbers>, <Percent> ]
Perimeter.Syntax=[ <Poligon> ]\n[ <Konikenn> ]\n[ <Locus> ]
Periods.Syntax=[ <Feur>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PieChart.Syntax=[ <List of Frequencies> ]\n[ <List of Frequencies>, <Center>, <Radius (skin)> ]
Plane.Syntax=[ <Poligon> ]\n[ <Konikenn> ]\n[ <Point>, <Plane> ]\n[ <Point>, <Eeunenn> ]\n[ <Eeunenn>, <Eeunenn> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Vector>, <Vector> ]
Plane.SyntaxCAS=[ <Point>, <Point>, <Point> ]
PlaneBisector.Syntax=[ <Segmant> ]\n[ <Point>, <Point> ]
PlaySound.Syntax=[ <URL> ]\n[ <faos|gwir> ]\n[ <Fonksion>, <Talvoud Min>, <Talvoud Brasañ> ]\n[ <Fonksion>, <Talvoud Min>, <Talvoud Brasañ>, <Sample Rate>, <Sample Depth> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point.Syntax=[ <Object> ]\n[ <Object>, <Parameter> ]\n[ <Point>, <Vector> ]\n[ <Rollad> ]
PointIn.Syntax=[ <Region> ]
PointList.Syntax=[ <Rollad> ]
Poisson.Syntax=[ <Mean> ]\n[ <Mean>, <Boolean Cumulative> ]\n[ <Mean>, <Variable Value>, <Boolean Cumulative> ]
Poisson.SyntaxCAS=[ <Mean>, <Variable Value>, <Boolean Cumulative> ]
Polar.Syntax=[ <Point>, <Konikenn> ]\n[ <Eeunenn>, <Konikenn> ]
PolyLine.Syntax=[ <List of Points> ]\n[ <Point>, ..., <Point> ]
Polygon.Syntax=[ <List of Points> ]\n[ <Point>, ..., <Point> ]\n[ <Point>, <Point>, <Number of Vertices> ]
Polygon.Syntax3D=[ <List of Points> ]\n[ <Point>, ..., <Point> ]\n[ <Point>, <Point>, <Number of Vertices> ]\n[ <Point>, <Point>, <Number of Vertices>, <Direction> ]
Polynomial.Syntax=[ <Fonksion> ]\n[ <List of Points> ]
Polynomial.SyntaxCAS=[ <Fonksion> ]\n[ <Fonksion>, <Varienn> ]
PresentValue.Syntax=[ <Feur>, <Number of Periods>, <Payment>, <Future Value (optional)>, <Type (optional)> ]
PreviousPrime.Syntax=[ <Niver> ]
PrimeFactors.Syntax=[ <Niver> ]
Prism.Syntax=[ <Poligon>, <Point> ]\n[ <Poligon>, <Height value> ]\n[ <Point>, <Point>, ... ]
Product.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <Number of Elements> ]\n[ <List of Numbers>, <List of Frequencies> ]\n[ <Expression>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
Product.SyntaxCAS=[ <List of Expressions> ]\n[ <Expression>, <Varienn>, <Indeks Kentañ>, <End Index> ]
Prove.Syntax=[ <Eztaol Boulean> ]
ProveDetails.Syntax=[ <Eztaol Boulean> ]
Pyramid.Syntax=[ <Poligon>, <Point> ]\n[ <Poligon>, <Uhelder> ]\n[ <Point>, <Point>, <Point>, <Point>, ... ]
Q1.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
Q3.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
QRDecomposition.Syntax=[ <Matrix> ]
QuadricSide.Syntax=[ <Quadric> ]
RSquare.Syntax=[ <List of Points>, <Fonksion> ]
Radius.Syntax=[ <Konikenn> ]
Random.Syntax=[ <Anterin Izek>, <Maximum Integer> ]\n[ <Anterin Izek>, <Maximum Integer>, <Number of Samples> ]\n[ <Anterin Izek>, <Maximum Integer>, <Boulean Digemm> ]
Random.SyntaxCAS=[ <Anterin Izek>, <Maximum Integer> ]\n[ <Anterin Izek>, <Maximum Integer>, <Number of Samples> ]
RandomBinomial.Syntax=[ <Number of Trials>, <Probability> ]
RandomDiscrete.Syntax=[ <Rollad>, <Rollad> ]
RandomElement.Syntax=[ <Rollad> ]
RandomNormal.Syntax=[ <Mean>, <Diroudañ Skweriek> ]
RandomPointIn.Syntax=[ <Region> ]\n[ <List of Points> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson.Syntax=[ <Mean> ]
RandomPolynomial.Syntax=[ <Derez>, <Niver izek evit Koefisiantoù>, <Maximum for Coefficients> ]
RandomPolynomial.SyntaxCAS=[ <Derez>, <Niver izek evit Koefisiantoù>, <Maximum for Coefficients> ]\n[ <Varienn>, <Derez>, <Niver izek evit Koefisiantoù>, <Maximum for Coefficients> ]
RandomUniform.Syntax=[ <Min>, <Uc’hek> ]\n[ <Min>, <Uc’hek>, <Number of Samples> ]
Rate.Syntax=[ <Number of Periods>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)>, <Guess (optional)> ]
Rationalize.SyntaxCAS=[ <Niver> ]
Ray.Syntax=[ <Poent Kentañ>, <Point> ]\n[ <Poent Kentañ>, <Direction Vector> ]
ReadText.Syntax=[ <Testenn> ]
RectangleSum.Syntax=[ <Fonksion>, <x Kentañ>, <End x-Value>, <Niver ar Reizhkornioù>, <Lec’h evit uhelder> ]
ReducedRowEchelonForm.Syntax=[ <Matrix> ]
Relation.Syntax=[ <Rollad> ]\n[ <Object>, <Object> ]
RemovableDiscontinuity.Syntax=[ <Fonksion> ]
Remove.Syntax=[ <Rollad>, <Rollad> ]
RemoveUndefined.Syntax=[ <Rollad> ]
Rename.Syntax=[ <Object>, <Anv> ]
Repeat.Syntax=[ <Niver>, <Skriptañ>, <Skriptañ>, ... ]
ReplaceAll.Syntax=[ <Testenn>, <Text to Match>, <Text to Replace> ]
ResidualPlot.Syntax=[ <List of Points>, <Fonksion> ]
Reverse.Syntax=[ <Rollad> ]
RightSide.Syntax=[ <Kevatalenn> ]
RightSide.SyntaxCAS=[ <Kevatalenn> ]\n[ <List of Equations> ]\n[ <List of Equations>, <Index> ]
RigidPolygon.Syntax=[ <Poligon> ]\n[ <Poligon>, <Diskart x>, <Diskart y> ]\n[ <Poent Dieub>, ..., <Poent Dieub> ]
Root.Syntax=[ <Polynomial> ]\n[ <Fonksion>, <Initial x-Value> ]\n[ <Fonksion>, <x Kentañ>, <End x-Value> ]
Root.SyntaxCAS=[ <Polynomial> ]
RootList.Syntax=[ <Rollad> ]
RootMeanSquare.Syntax=[ <List of Numbers> ]
Roots.Syntax=[ <Fonksion>, <x Kentañ>, <End x-Value> ]
Rotate.Syntax=[ <Object>, <Ankl> ]\n[ <Object>, <Ankl>, <Point> ]
Rotate.Syntax3D=[ <Object>, <Ankl> ]\n[ <Object>, <Ankl>, <Point> ]\n[ <Object>, <Ankl>, <Axis of Rotation> ]\n[ <Object>, <Ankl>, <Point on Axis>, <Durc’hadur pe Plan un Ahel> ]
RotateText.Syntax=[ <Testenn>, <Ankl> ]
Row.Syntax=[ <Spreadsheet Cell> ]
RunClickScript.Syntax=[ <Object> ]
RunUpdateScript.Syntax=[ <Object> ]
SDX.Syntax=[ <List of Points> ]
SDY.Syntax=[ <List of Points> ]
SVD.Syntax=[ <Matrix> ]
SXX.Syntax=[ <List of Numbers> ]\n[ <List of Points> ]
SXY.Syntax=[ <List of Points> ]\n[ <List of Numbers>, <List of Numbers> ]
SYY.Syntax=[ <List of Points> ]
Sample.Syntax=[ <Rollad>, <Ment> ]\n[ <Rollad>, <Ment>, <With Replacement> ]
SampleSD.SyntaxCAS=[ <List of Numbers> ]
SampleSDX.Syntax=[ <List of Points> ]
SampleSDY.Syntax=[ <List of Points> ]
SampleVariance.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
SampleVariance.SyntaxCAS=[ <List of Numbers> ]
ScientificText.Syntax=[ <Niver> ]\n[ <Niver>, <Precision> ]
SecondAxis.Syntax=[ <Konikenn> ]
SecondAxisLength.Syntax=[ <Konikenn> ]
Sector.Syntax=[ <Konikenn>, <Point>, <Point> ]\n[ <Konikenn>, <Talvoud Arventenn>, <Talvoud Arventenn> ]
Segment.Syntax=[ <Point>, <Point> ]\n[ <Point>, <Length> ]
SelectObjects.Syntax=[ ]\n[ <Object>, <Object>, ... ]
SelectedElement.Syntax=[ <Rollad> ]
SelectedIndex.Syntax=[ <Rollad> ]
Semicircle.Syntax=[ <Point>, <Point> ]
Sequence.Syntax=[ <Talvoud Echuiñ> ]\n[ <Talvoud Kentañ>, <Talvoud Echuiñ> ]\n[ <Talvoud Kentañ>, <Talvoud Echuiñ>, <Pazenn> ]\n[ <Expression>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]\n[ <Expression>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ>, <Pazenn> ]
SetActiveView.Syntax=[ <Gwel> ]\n[ <Plane> ]
SetAxesRatio.Syntax=[ <Niver>, <Niver> ]
SetAxesRatio.Syntax3D=[ <Niver>, <Niver> ]\n[ <Niver>, <Niver>, <Niver> ]
SetBackgroundColor.Syntax=[ <Color> ]\n[ <Object>, <Color> ]\n[ <Ruz>, <Green>, <Blue> ]\n[ <Object>, <Ruz>, <Green>, <Blue> ]
SetCaption.Syntax=[ <Object>, <Testenn> ]
SetColor.Syntax=[ <Object>, <Color> ]\n[ <Object>, <Ruz>, <Green>, <Blue> ]
SetConditionToShowObject.Syntax=[ <Object>, <Condition> ]
SetConstructionStep.Syntax=[ <Niver> ]
SetCoords.Syntax=[ <Object>, <x>, <y> ]\n[ <Object>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Object>, <Niver> ]\n[ <Segmant>, <Niver>, <Niver>]
SetDynamicColor.Syntax=[ <Object>, <Ruz>, <Green>, <Blue> ]\n[ <Object>, <Ruz>, <Green>, <Blue>, <Opacity> ]
SetFilling.Syntax=[ <Object>, <Niver> ]
SetFixed.Syntax=[ <Object>, <true | false> ]\n[ <Object>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Object>, <Image> ]\n[ <Object>, <Testenn> ]
SetLabelMode.Syntax=[ <Object>, <Niver> ]
SetLayer.Syntax=[ <Object>, <Gwiskad> ]
SetLevelOfDetail.Syntax=[ <Gorreen>, <Level of Detail> ]
SetLineStyle.Syntax=[ <Object>, <Niver> ]
SetLineThickness.Syntax=[ <Object>, <Niver> ]
SetPerspective.Syntax=[ <Testenn> ]
SetPointSize.Syntax=[ <Object>, <Niver> ]
SetPointStyle.Syntax=[ <Point>, <Niver> ]
SetSeed.Syntax=[ <Anterin> ]
SetSpinSpeed.Syntax=[ <Niver> ]
SetTooltipMode.Syntax=[ <Object>, <Niver> ]
SetTrace.Syntax=[ <Object>, <true | false> ]
SetValue.Syntax=[ <Boulean>, <0|1> ]\n[ <Object>, <Object> ]\n[ <Rollad>, <Niver>, <Object> ]
SetViewDirection.Syntax=[ ]\n[ <Direction> ]\n[ <Direction>, <Boolean animate> ]
SetVisibleInView.Syntax=[ <Object>, <View Number 1|2>, <Boulean> ]
Shear.Syntax=[ <Object>, <Eeunenn>, <Ratio> ]
ShortestDistance.Syntax=[ <Rollad Segmantoù>, <Poent Kentañ>, <End Point>, <Boolean Weighted> ]
ShowAxes.Syntax=[]\n[ <Boulean> ]\n[ <Gwel>, <Boulean> ]
ShowGrid.Syntax=[]\n[ <Boulean> ]\n[ <Gwel>, <Boulean> ]
ShowLabel.Syntax=[ <Object>, <Boulean> ]
ShowLayer.Syntax=[ <Niver> ]
Shuffle.Syntax=[ <Rollad> ]
SigmaXX.Syntax=[ <List of Points> ]\n[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
SigmaXY.Syntax=[ <List of Points> ]\n[ <List of x-coordinates>, <List of y-coordinates> ]
SigmaYY.Syntax=[ <List of Points> ]
Simplify.Syntax=[ <Fonksion> ]\n[ <Testenn> ]
Simplify.SyntaxCAS=[ <Fonksion> ]
Slider.Syntax=[ <Min>, <Uc’hek>, <Pazenn>, <Speed>, <Ledander>, <Is Angle>, <Horizontal>, <Animating>, <Dargouezhek> ]
Slope.Syntax=[ <Eeunenn> ]
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Number n> ]\n[ <f(x, y)>, <Number n>, <Length Multiplier a> ]\n[ <f(x, y)>, <Number n>, <Length Multiplier a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot.Syntax=[ <Fonksion> ]\n[ <Fonksion>, <Boolean Repeat> ]
Solutions.Syntax=[ <Kevatalenn> ]
Solutions.SyntaxCAS=[ <Kevatalenn> ]\n[ <Kevatalenn>, <Varienn> ]\n[ <List of Equations>, <List of Variables> ]
Solve.Syntax=[ <Kevatalenn> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <Kevatalenn>, <Varienn> ]\n[ <List of Equations>, <List of Variables> ]\n[ <Rollad Kevatalennoù parametrek>, <List of Variables> ]\n[ <Kevatalenn>, <Varienn>, <List of assumptions> ]
SolveCubic.SyntaxCAS=[ <Cubic Polynomial> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Poent war f> ]\n[ <f'(x, y)>, <x Kentañ>, <y Kentañ>, <End x>, <Pazenn> ]\n[ <y'>, <x'>, <x Kentañ>, <y Kentañ>, <End t>, <Pazenn> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x Kentañ>, <y Kentañ>, <y' Kentañ>, <End x>, <Pazenn> ]
SolveODE.SyntaxCAS=[ <Kevatalenn> ]\n[ <Kevatalenn>, <Point(s) on f> ]\n[ <Kevatalenn>, <Point(s) on f>, <Poent(où) war f'> ]\n[ <Kevatalenn>, <Dependent Variable>, <Varienn Dizepant>, <Point(s) on f> ] \n[ <Kevatalenn>, <Dependent Variable>, <Varienn Dizepant>, <Point(s) on f>, <Poent(où) war f'> ]
SolveQuartic.SyntaxCAS=[ <Polinom eus derez 4> ]
Sort.Syntax=[ <Rollad> ]\n[ <Values>, <Alc’hwezioù> ]
Spearman.Syntax=[ <List of Points> ]\n[ <List of Numbers>, <List of Numbers> ]
Sphere.Syntax=[ <Point>, <Radius (skin)> ]\n[ <Point>, <Point> ]
Spline.Syntax=[ <List of Points> ]\n[ <List of Points>, <Urzh ≥ 3> ]\n[ <List of Points>, <Urzh ≥ 3>, <Weight Function> ]
Split.Syntax=[ <Testenn>, <List of Texts to split on> ]
StartAnimation.Syntax=[ ]\n[ <Boulean> ]\n[ <Kursor pe Poent>, <Kursor pe Poent>, ... ]\n[ <Kursor pe Poent>, <Kursor pe Poent>, ..., <Boulean> ]
StartRecord.Syntax=[ ]\n[ <Boulean> ]
StemPlot.Syntax=[ <Rollad> ]\n[ <Rollad>, <Adjustment -1|0|1> ]
StepGraph.Syntax=[ <List of Points> ]\n[ <List of Points>, <Boolean Liammet> ]\n[ <List of x-coordinates>, <List of y-coordinates> ]\n[ <List of Points>, <Boolean Liammet>, <Stil ar Poent> ]\n[ <List of x-coordinates>, <List of y-coordinates>, <Boolean Liammet> ]\n[ <List of x-coordinates>, <List of y-coordinates>, <Boolean Liammet>, <Stil ar Poent> ]
StickGraph.Syntax=[ <List of Points> ]\n[ <List of Points>, <Boolean Horizontal> ]\n[ <List of x-coordinates>, <List of y-coordinates> ]\n[ <List of x-coordinates>, <List of y-coordinates>, <Boolean Horizontal> ]
Stretch.Syntax=[ <Object>, <Vector> ]\n[ <Object>, <Eeunenn>, <Ratio> ]
Substitute.SyntaxCAS=[ <Expression>, <Substitution List> ]\n[ <Expression>, <from>, <e> ]
Sum.Syntax=[ <Rollad> ]\n[ <Rollad>, <Number of Elements> ]\n[ <Rollad>, <List of Frequencies> ]\n[ <Expression>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
Sum.SyntaxCAS=[ <Rollad> ]\n[ <Expression>, <Varienn>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
SumSquaredErrors.Syntax=[ <List of Points>, <Fonksion> ]
SurdText.Syntax=[ <Point> ]\n[ <Niver> ]\n[ <Niver>, <Rollad> ]
Surface.Syntax=[ <Fonksion>, <Ankl> ]\n[ <Curve>, <Ankl>, <Eeunenn> ]\n[ <Expression>, <Expression>, <Expression>, <Arventenn Varienn 1>, <Talvoud Kentañ>, <Talvoud Echuiñ>, <Arventenn Varienn 2>, <Talvoud Kentañ>, <Talvoud Echuiñ> ]
TDistribution.Syntax=[ <Degrees of Freedom>, <Variable Value> ]\n[ <Degrees of Freedom>, <Variable Value>, <Boolean Cumulative> ]\n[ <Degrees of Freedom>, x, <Boolean Cumulative> ]
TDistribution.SyntaxCAS=[ <Degrees of Freedom>, <Variable Value> ]
TMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Confidence Level>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Krennenn Standilhon 2>, <Dihentañ Standilhon Standard 2>, <Ment Stand2>, <Confidence Level>, <Boolean Pooled> ]
TMeanEstimate.Syntax=[ <Rollad Data Standilhon>, <Confidence Level> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Confidence Level> ]
TTest.Syntax=[ <Rollad Data Standilhon>, <Hypothesized Mean>, <Lost> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Hypothesized Mean>, <Lost> ]
TTest2.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Lost>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Krennenn Standilhon 2>, <Dihentañ Standilhon Standard 2>, <Ment Stand2>, <Lost>, <Boolean Pooled> ]
TTestPaired.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Lost> ]
TableText.Syntax=[ <Rollad>, <Rollad>, ... ]\n[ <Rollad>, <Rollad>, ..., <Steudiñ> ]\n[ <Rollad>, <Rollad>, ..., <Steudiñ>, <Minimum Cell Width> ]\n[ <Rollad>, <Rollad>, ..., <Steudiñ>, <Minimum Cell Width>, <Uhelder Izek Log> ]
Take.Syntax=[ <Rollad>, <Lec’hiadenn gentañ>, <End Position> ]\n[ <Rollad>, <Lec’hiadenn gentañ> ]\n[ <Testenn>, <Lec’hiadenn gentañ>, <End Position> ]\n[ <Testenn>, <Lec’hiadenn gentañ> ]
Take.SyntaxCAS=[ <Rollad>, <Lec’hiadenn gentañ> ]\n[ <Rollad>, <Lec’hiadenn gentañ>, <End Position> ]\n[ <Testenn>, <Lec’hiadenn gentañ>, <End Position> ]\n[ <Testenn>, <Lec’hiadenn gentañ> ]
Tangent.Syntax=[ <Point>, <Konikenn> ]\n[ <Point>, <Fonksion> ]\n[ <Point on Curve>, <Curve> ]\n[ <x-Value>, <Fonksion> ]\n[ <Eeunenn>, <Konikenn> ]\n[ <Konikenn>, <Konikenn> ]
Tangent.SyntaxCAS=[ <Niver>, <Fonksion> ]\n[ <Point>, <Object> ]
TaylorSeries.Syntax=[ <Fonksion>, <x-Value>, <Order Number> ]
TaylorSeries.SyntaxCAS=[ <Expression>, <x-Value>, <Order Number> ]\n[ <Expression>, <Varienn>, <Talvoud varienn>, <Order Number> ]
Tetrahedron.Syntax=[ <Tric’horn Kekostezek> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Point>, <Direction> ]
Text.Syntax=[ <Object> ]\n[ <Object>, <Boolean for Substitution of Variables> ]\n[ <Object>, <Point> ]\n[ <Object>, <Point>, <Boolean for Substitution of Variables> ]\n[ <Object>, <Point>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]\n[ <Object>, <Point>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <Object>, <Point>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Steudad a-serzh -1|0|1> ]
TextToUnicode.Syntax=[ <Testenn> ]
Textfield.Syntax=[ <Linked Object> ]
TiedRank.Syntax=[ <Rollad> ]
ToBase.Syntax=[ <Niver>, <Diazenn> ]
ToComplex.Syntax=[ <Vector> ]
ToExponential.SyntaxCAS=[ <Complex Number> ]
ToPoint.Syntax=[ <Complex Number> ]
ToPolar.Syntax=[ <Complex Number> ]\n[ <Vector> ]
ToolImage.Syntax=[ <Niver> ]\n[ <Niver>, <Point> ]\n[ <Niver>, <Point>, <Point> ]
Top.Syntax=[ <Quadric> ]
Translate.Syntax=[ <Object>, <Vector> ]\n[ <Vector>, <Poent Kentañ> ]
Transpose.Syntax=[ <Matrix> ]
TrapezoidalSum.Syntax=[ <Fonksion>, <x Kentañ>, <End x-Value>, <Number of Trapezoids> ]
TravelingSalesman.Syntax=[ <List of Points> ]
TriangleCenter.Syntax=[ <Point>, <Point>, <Point>, <Niver> ]
TriangleCurve.Syntax=[ <Point>, <Point>, <Point>, <Kevatalenn> ]
Triangular.Syntax=[ <Lower Bound>, <Bonn usañ>, <Mode>, <Variable Value> ]\n[ <Lower Bound>, <Bonn usañ>, <Mode>, <Variable Value>, <Boolean Cumulative> ]\n[ <Lower Bound>, <Bonn usañ>, <Mode>, x, <Boolean Cumulative> ]
TrigCombine.Syntax=[ <Expression> ]\n[ <Expression>, <Target Function> ]
TrigExpand.Syntax=[ <Expression> ]\n[ <Expression>, <Target Function> ]
TrigExpand.SyntaxCAS=[ <Expression> ]\n[ <Expression>, <Target Function> ]\n[ <Expression>, <Target Function>, <Varienn moned> ]\n[ <Expression>, <Target Function>, <Varienn moned>, <Varienn moned> ]
TrigSimplify.Syntax=[ <Expression> ]
Trilinear.Syntax=[ <Point>, <Point>, <Point>, <Niver>, <Niver>, <Niver> ]
TurningPoint.Syntax=[ <Polynomial> ]
TurningPoint.SyntaxCAS=[ <Fonksion> ]
Turtle.Syntax=[]
TurtleBack.Syntax=[ <Turtle>, <Hed> ]
TurtleDown.Syntax=[ <Turtle> ]
TurtleForward.Syntax=[ <Turtle>, <Hed> ]
TurtleLeft.Syntax=[ <Turtle>, <Ankl> ]
TurtleRight.Syntax=[ <Turtle>, <Ankl> ]
TurtleUp.Syntax=[ <Turtle> ]
Type.Syntax=[ <Object> ]
UnicodeToLetter.Syntax=[ <Anterin> ]
UnicodeToText.Syntax=[ <List of Integers> ]
Uniform.Syntax=[ <Lower Bound>, <Bonn usañ>, <Variable Value> ]\n[ <Lower Bound>, <Bonn usañ>, <Variable Value>, <Boolean Cumulative> ]\n[ <Lower Bound>, <Bonn usañ>, x, <Boolean Cumulative> ]
Union.Syntax=[ <Rollad>, <Rollad> ]\n[ <Poligon>, <Poligon> ]
Unique.Syntax=[ <Rollad> ]
UnitOrthogonalVector.Syntax=[ <Eeunenn> ]\n[ <Segmant> ]\n[ <Vector> ]
UnitOrthogonalVector.Syntax3D=[ <Eeunenn> ]\n[ <Segmant> ]\n[ <Vector> ]\n[ <Plane> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vector> ]
UnitVector.Syntax=[ <Object> ]
UnitVector.SyntaxCAS=[ <Vector> ]
UpdateConstruction.Syntax=[ ]\n[ <Number of times> ]
UpperSum.Syntax=[ <Fonksion>, <x Kentañ>, <End x-Value>, <Niver ar Reizhkornioù> ]
Variance.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
Vector.Syntax=[ <Point> ]\n[ <Poent Kentañ>, <End Point> ]
Vertex.Syntax=[ <Konikenn> ]\n[ <Inequality> ]\n[ <Poligon> ]\n[ <Poligon>, <Index> ]\n[ <Segmant>, <Index> ]
VerticalText.Syntax=[ <Testenn> ]\n[ <Testenn>, <Point> ]
Volume.Syntax=[ <Solid> ]
Voronoi.Syntax=[ <List of Points> ]
Weibull.Syntax=[ <Shape>, <Scale>, <Variable Value> ]\n[ <Shape>, <Scale>, <Variable Value>, <Boolean Cumulative> ]\n[ <Shape>, <Scale>, x, <Boolean Cumulative> ]
Weibull.SyntaxCAS=[ <Shape>, <Scale>, <Variable Value> ]
ZMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <σ1>, <σ2>, <Confidence Level> ]\n[ <Sample Mean 1>, <σ1>, <Sample Size 1>, <Krennenn Standilhon 2>, <σ2>, <Ment Stand2>, <Confidence Level> ]
ZMean2Test.Syntax=[ <List of Sample Data 1>, <σ1>, <List of Sample Data 2>, <σ2>, <Lost> ]\n[ <Sample Mean 1>, <σ1>, <Sample Size 1>, <Krennenn Standilhon 2>, <σ2>, <Ment Stand2>, <Lost> ]
ZMeanEstimate.Syntax=[ <Rollad Data Standilhon>, <σ>, <Confidence Level> ]\n[ <Sample Mean>, <σ>, <Sample Size>, <Confidence Level> ]
ZMeanTest.Syntax=[ <Rollad Data Standilhon>, <σ>, <Hypothesized Mean>, <Lost> ]\n[ <Sample Mean>, <σ>, <Sample Size>, <Hypothesized Mean>, <Lost> ]
ZProportion2Estimate.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Ment Stand2>, <Confidence Level> ]
ZProportion2Test.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Ment Stand2>, <Lost> ]
ZProportionEstimate.Syntax=[ <Sample Proportion>, <Sample Size>, <Confidence Level> ]
ZProportionTest.Syntax=[ <Sample Proportion>, <Sample Size>, <Hypothesized Proportion>, <Lost> ]
Zip.Syntax=[ <Expression>, <Var1>, <List1>, <Var2>, <Roll2>, ... ]
Zipf.Syntax=[ <Number of Elements>, <Eksponant> ]\n[ <Number of Elements>, <Eksponant>, <Boolean Cumulative> ]\n[ <Number of Elements>, <Eksponant>, <Variable Value>, <Boolean Cumulative> ]
Zipf.SyntaxCAS=[ <Number of Elements>, <Eksponant>, <Variable Value>, <Boolean Cumulative> ]
ZoomIn.Syntax=[ ]\n[ <Faktor ar skeul> ]\n[ <Faktor ar skeul>, <Center Point> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut.Syntax=[ <Faktor ar skeul> ]\n[ <Faktor ar skeul>, <Center Point> ]
mad.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
mean.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
stdev.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]
stdevp.Syntax=[ <Rollad Data Diaoz> ]\n[ <List of Numbers>, <List of Frequencies> ]