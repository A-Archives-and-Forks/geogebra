# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <List??>, <List??>, ... ]
AffineRatio=RaportAfin
AffineRatio.Syntax=[ <Punct>, <Punct>, <Punct> ]
Angle=Unghi
Angle.Syntax=[ <Obiect> ]\n[ <Vector>, <Vector> ]\n[ <Dreapt??>, <Dreapt??> ]\n[ <Punct>, <V??rf>, <Punct> ]\n[ <Punct>, <V??rf>, <Unghi> ]
Angle.Syntax3D=[ <Obiect> ]\n[ <Vector>, <Vector> ]\n[ <Dreapt??>, <Dreapt??> ]\n[ <Dreapt??>, <Plan> ]\n[ <Plan>, <Plan> ]\n[ <Punct>, <V??rf>, <Punct> ]\n[ <Punct>, <V??rf>, <Unghi> ]\n[ <Punct>, <Punct>, <Punct>, <Direc??ie> ]
AngularBisector=Bisectoare
AngularBisector.Syntax=[ <Dreapt??>, <Dreapt??> ]\n[ <Punct>, <Punct>, <Punct> ]
Append=Adaug??
Append.Syntax=[ <List??>, <Obiect> ]\n[ <Obiect>, <List??> ]
ApplyMatrix=Aplic??Matrice
ApplyMatrix.Syntax=[ <Matrice>, <Obiect> ]
Arc.Syntax=[ <Cerc>, <Punct>, <Punct> ]\n[ <Elips??>, <Punct>, <Punct> ]\n[ <Cerc>, <Valoare parametru>, <Valoare parametru> ]\n[ <Elips??>, <Valoare parametru>, <Valoare parametru> ]
AreCollinear=SuntColiniare
AreCollinear.Syntax=[ <Punct>, <Punct>, <Punct> ]
AreConcurrent=SuntConcurente
AreConcurrent.Syntax=[ <Dreapt??>, <Dreapt??>, <Dreapt??> ]
AreConcyclic=SuntConciclice
AreConcyclic.Syntax=[ <Punct>, <Punct>, <Punct>, <Punct> ]
AreCongruent.Syntax=[ <Obiect>, <Obiect> ]
AreEqual=SuntEgale
AreEqual.Syntax=[ <Obiect>, <Obiect> ]
AreParallel=SuntParalele
AreParallel.Syntax=[ <Dreapt??>, <Dreapt??> ]
ArePerpendicular=SuntPerpendiculare
ArePerpendicular.Syntax=[ <Dreapt??>, <Dreapt??> ]
Area=Arie
Area.Syntax=[ <Conic??> ]\n[ <Poligon> ]\n[ <Punct>, ..., <Punct> ]
Assume.SyntaxCAS=[ <Condi??ie>, <expresie> ]
Asymptote=Asimptot??
Asymptote.Syntax=[ <Obiect> ]
AttachCopyToView=Ata??areCopieSpreVizualizare
AttachCopyToView.Syntax=[ <Obiect>, <Vizualizare 0|1|2> ]\n[ <Obiect>, <Vizualizare 0|1|2>, <Punct 1>, <Punct 2>, <Punct de ecran 1>, <Punct de ecran 2> ]
Axes=Axe
Axes.Syntax=[ <Conic??> ]
Axes.Syntax3D=[ <Conic??> ]\n[ <Quadric> ]
AxisStepX=PasAxaX
AxisStepX.Syntax=[ ]
AxisStepY=PasAxaY
AxisStepY.Syntax=[ ]
BarChart=Diagram??Bare
BarChart.Syntax=[ <Lista de date>, <List?? de frecven??e> ]\n[ <List?? de date raw>, <Latime de bare>, <Factor scar?? vertical?? (op??ional)> ]\n[ <Lista de date>, <List?? de frecven??e>, <Latime de bare> ]\n[ <Valuare ini??ial??>, <Valuare final??>, <Lista ??nal??ime> ]\n[ <Valuare ini??ial??>, <Valuare final??>, <expresie>, <variabil??>, <de la num??rul>, <La num??rul> ]\n[ <Valuare ini??ial??>, <Valuare final??>, <expresie>, <variabil??>, <de la num??rul>, <La num??rul>, <La??ime Pas> ]
Barycenter=Baricentru
Barycenter.Syntax=[ <List?? de puncte>, <List?? de ponderi> ]
Bernoulli.Syntax=[ <Probabilitate>, <Boolean Cumulat> ]
BetaDist.Syntax=[ <Alpha>, <Beta>, <Valoare variabil??> ]\n[ <Alpha>, <Beta>, <Valoare variabil??>, <Boolean Cumulat>  ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulat> ]
Binomial=CoeficientBinomial
Binomial.Syntax=[ <Num??r n>, <Num??r r> ]
BinomialDist.Syntax=[ <Num??r de ??ncerc??ri>, <Probabilitatea de succes> ]\n[ <Num??r de ??ncerc??ri>, <Probabilitatea de succes>, <Boolean Cumulat> ]\n[ <Num??r de ??ncerc??ri>, <Probabilitatea de succes>, <List of Values> ]\n[ <Num??r de ??ncerc??ri>, <Probabilitatea de succes>, <Valoare variabil??>, <Boolean Cumulat> ]
BinomialDist.SyntaxCAS=[ <Num??r de ??ncerc??ri>, <Probabilitatea de succes>, <Valoare variabil??>, <Boolean Cumulat> ]
Bottom=BazaInferioar??
Bottom.Syntax=[ <Quadric> ]
BoxPlot.Syntax=[ <yCompensa??ie>, <yScal??>, <List?? de date raw> ]\n[ <yCompensa??ie>, <yScal??>, <List?? de date raw>, <Aberante Booleane> ]\n[ <yCompensa??ie>, <yScal??>, <Lista de date>, <List?? de frecven??e>, <Aberante Booleane> ]\n[ <yCompensa??ie>, <yScal??>, <Valuare ini??ial??>, <Q1>, <Median??>, <Q3>, <Valuare final??> ]
Button=Buton
Button.Syntax=[ ]\n[ <Legend??> ]
CASLoaded.Syntax=[]
CFactor=CFactorizare
CFactor.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <variabil??> ]
CIFactor.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <variabil??> ]
CSolutions=CSolu??ii
CSolutions.SyntaxCAS=[ <Ecua??ie> ]\n[ <Ecua??ie>, <variabil??> ]\n[ <List?? ecua??ii>, <List?? variabile> ]
CSolve=CRezolv??
CSolve.SyntaxCAS=[ <Ecua??ie> ]\n[ <Ecua??ie>, <variabil??> ]\n[ <List?? ecua??ii>, <List?? variabile> ]
Cauchy.Syntax=[ <Median??>, <Scal??>, <Valoare variabil??> ]\n[ <Median??>, <Scal??>, <Valoare variabil??>, <Boolean Cumulat>  ]\n[ <Median??>, <Scal??>, x, <Boolean Cumulat> ]
Cauchy.SyntaxCAS=[ <Median??>, <Scal??>, <Valoare variabil??> ]
Cell=Celul??
Cell.Syntax=[ <Coloan??>, <R??nd> ]
CellRange=??irCelule
CellRange.Syntax=[ <Celul?? de ??nceput>, <Celul?? de sf??r??it> ]
Center=Centru
Center.Syntax=[ <Conic??> ]
Center.Syntax3D=[ <Conic??> ]\n[ <Quadric> ]
CenterView=VedereCentral??
CenterView.Syntax=[ <Centru> ]
Centroid=CentruPoligon
Centroid.Syntax=[ <Poligon> ]
CharacteristicPolynomial.Syntax=[ <Matrice> ]
Checkbox.Syntax=[ ]\n[ <Legend??> ]\n[ <List??> ]\n[ <Legend??>, <List??> ]
ChiSquared.Syntax=[ <Grad de libertate>, <Valoare variabil??> ]\n[ <Grad de libertate>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Grad de libertate>, x, <Boolean Cumulat> ]
ChiSquared.SyntaxCAS=[ <Grad de libertate>, <variabil??> ]
ChiSquaredTest=TestChiP??trat
ChiSquaredTest.Syntax=[ <Matrice> ]\n[ <List??>, <List??> ]\n[ <Matrice>, <Matrice> ]
Circle=Cerc
Circle.Syntax=[ <Punct>, <Raz??> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Punct> ]
Circle.Syntax3D=[ <Punct>, <Raz??> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Dreapt??>, <Punct> ]\n[ <Punct>, <Raz??>, <Direc??ie> ]\n[ <Punct>, <Punct>, <Direc??ie> ]
CircleArc=ArcCircular
CircleArc.Syntax=[ <Punct de mijloc>, <Punct>, <Punct> ]
CircleSector=SectorCircular
CircleSector.Syntax=[ <Punct de mijloc>, <Punct>, <Punct> ]
CircumcircleArc=ArcCircumcircular
CircumcircleArc.Syntax=[ <Punct>, <Punct>, <Punct> ]
CircumcircleSector=SectorCircumcircular
CircumcircleSector.Syntax=[ <Punct>, <Punct>, <Punct> ]
Circumference=Circumferin????
Circumference.Syntax=[ <Conic??> ]
Classes=Clase
Classes.Syntax=[ <Lista de date>, <Num??r de clase> ]\n[ <Lista de date>, <Start>, <L????ime de clase> ]
ClosestPoint=CelmaiapropiatPunct
ClosestPoint.Syntax=[ <Direc??ie>, <Punct> ]\n[ <Dreapt??>, <Dreapt??> ]
ClosestPointRegion=CelMaiApropiatPunctDeRegiune
ClosestPointRegion.Syntax=[ <Regiune>, <Punct> ]
Coefficients=Coeficien??i
Coefficients.Syntax=[ <Polinomial> ]\n[ <Conic??> ]
Coefficients.SyntaxCAS=[ <Polinomial> ]\n[ <Polinomial>, <variabil??> ]
Column=Coloan??
Column.Syntax=[ <Celul?? din foaia de calcul> ]
ColumnName=NumeColoan??
ColumnName.Syntax=[ <Celul?? din foaia de calcul> ]
Command=Comand??
CommonDenominator=NumitorComun
CommonDenominator.Syntax=[ <expresie>, <expresie> ]
CompleteSquare=P??tratComplet
CompleteSquare.Syntax=[ <Func??ie p??tratic??> ]
ComplexRoot=R??d??cin??Complex??
ComplexRoot.Syntax=[ <Polinomial> ]
Cone=Con
Cone.Syntax=[ <Cerc>, <??n??l??ime> ]\n[ <Punct>, <Punct>, <Raz??> ]\n[ <Punct>, <Vector>, <Unghi> ]
ConeInfinite=ConInfinit
ConeInfinite.Syntax=[ <Punct>, <Vector>, <Unghi> ]\n[ <Punct>, <Punct>, <Unghi> ]\n[ <Punct>, <Dreapt??>, <Unghi> ]
Conic=Conic??
Conic.Syntax=[ <List??> ]\n[ <Punct>, <Punct>, <Punct>, <Punct>, <Punct> ]\n[ <Num??r>, <Num??r>, <Num??r>, <Num??r>, <Num??r>, <Num??r> ]
ConstructionStep=PasDeConstruc??ie
ConstructionStep.Syntax=[ ]\n[ <Obiect> ]
ContingencyTable=TabelContingen????
ContingencyTable.Syntax=[ <List?? Texte>, <List?? Texte> ]\n[ <List?? Texte>, <List?? Texte>, <Op??iuni> ]\n[ <List?? Valori de Linie>, <List?? Valori de Coloan??>, <Tabel Frecven??e> ]\n[ <List?? Valori de Linie>, <List?? Valori de Coloan??>, <Tabel Frecven??e> , <Op??iuni> ]
ContinuedFraction=Frac??ieContinu??
ContinuedFraction.Syntax=[ <Num??r> ]\n[ <Num??r>, <Nivel> ]\n[ <Num??r>, <Nivel>, <Conformitate adev??rat|fals> ]
ConvexHull=??nvelitoareComplex??
ConvexHull.Syntax=[ <List?? de puncte> ]
CopyFreeObject=Copia??iObiectLiber
CopyFreeObject.Syntax=[ <Obiect> ]
Corner=Col??
Corner.Syntax=[ <Num??r col??uri> ]\n[ <Imagine>, <Num??r col??uri> ]\n[ <Text>, <Num??r col??uri> ]\n[ <Fereast?? grafic??>, <Num??r col??uri> ]
CountIf=ContorCondi??ional
CountIf.Syntax=[ <Condi??ie>, <List??> ]\n[ <Condi??ie>, <variabil??>, <List??> ]
Covariance=Covarian????
Covariance.Syntax=[ <List?? de puncte> ]\n[ <List?? de numere>, <List?? de numere> ]
Cross=Produs Vectorial
Cross.Syntax=[ <Vector>, <Vector> ]
CrossRatio=RaportAnarmonic
CrossRatio.Syntax=[ <Punct>, <Punct>, <Punct>, <Punct> ]
Cube=Cub
Cube.Syntax=[ <Square> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direc??ie> ]
Cubic.Syntax=[ <Punct>, <Punct>, <Punct>, <Num??r> ]
Curvature=Curbur??
Curvature.Syntax=[ <Punct>, <Obiect> ]
CurvatureVector=VectorDeCurbur??
CurvatureVector.Syntax=[ <Punct>, <Obiect> ]
CurveCartesian=Curb??
CurveCartesian.Syntax=[ <expresie>, <expresie>, <Variabil?? Parametru>, <Valuare ini??ial??>, <Valuare final??> ]
CurveCartesian.Syntax3D=[ <expresie>, <expresie>, <Variabil?? Parametru>, <Valuare ini??ial??>, <Valuare final??> ]\n[ <expresie>, <expresie>, <expresie>, <Variabil?? Parametru>, <Valuare ini??ial??>, <Valuare final??> ]
Cylinder=Cilindru
Cylinder.Syntax=[ <Cerc>, <??n??l??ime> ]\n[ <Punct>, <Punct>, <Raz??> ]
CylinderInfinite=CilindruInfinit
CylinderInfinite.Syntax=[ <Dreapt??>, <Raz??> ]\n[ <Punct>, <Vector>, <Raz??> ]\n[ <Punct>, <Punct>, <Raz??> ]
DataFunction.Syntax=[ <List?? de numere>, <List?? de numere> ]
Defined=Define??te
Defined.Syntax=[ <Obiect> ]
Degree=Grad
Degree.Syntax=[ <Polinomial> ]
Degree.SyntaxCAS=[ <Polinomial> ]\n[ <Polinomial>, <variabil??> ]
DelauneyTriangulation=TriangulareDelaunay
DelauneyTriangulation.Syntax=[ <List?? de puncte> ]
Delete=??terge
Delete.Syntax=[ <Obiect> ]
Denominator=Numitor
Denominator.Syntax=[ <Num??r> ]\n[ <Func??ie> ]
Denominator.SyntaxCAS=[ <expresie> ]
DensityPlot=Plotdensitate
Derivative=Derivata
Derivative.Syntax=[ <Func??ie> ]\n[ <Curb??> ]\n[ <Func??ie>, <Num??r> ]\n[ <Func??ie>, <variabil??> ]\n[ <Curb??>, <Num??r> ]\n[ <Func??ie>, <variabil??>, <Num??r> ]
Derivative.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <variabil??> ]\n[ <expresie>, <variabil??>, <Num??r> ]
Determinant.Syntax=[ <Matrice> ]
Diameter=DiametruConjugat
Diameter.Syntax=[ <Vector>, <Conic??> ]\n[ <Dreapt??>, <Conic??> ]
Difference.Syntax=[ <Poligon>, <Poligon> ]
Dilate=Dilatare
Dilate.Syntax=[ <Obiect>, <Factor de Dilatare> ]\n[ <Obiect>, <Factor de Dilatare>, <Punct Central al Dilat??rii> ]
Dimension=Dimensiune
Dimension.Syntax=[ <Obiect> ]
Direction=Direc??ie
Direction.Syntax=[ <Dreapt??> ]
Directrix=Directoare
Directrix.Syntax=[ <Conic??> ]
Distance=Distan????
Distance.Syntax=[ <Punct>, <Obiect> ]\n[ <Dreapt??>, <Dreapt??> ]\n[ <Plan>, <Plan> ]
Distance.SyntaxCAS=[ <Punct>, <Obiect> ]
Div.Syntax=[ <De??mp??r??it>, <Divizor> ]\n[ <De??mp??r??it Polinomial>, <Divizor Polinomial> ]
Division=??mp??r??ire
Division.Syntax=[ <De??mp??r??it>, <Divizor> ]\n[ <De??mp??r??it Polinomial>, <Divizor Polinomial> ]
Divisors=Divizori
Divisors.Syntax=[ <Num??r> ]
DivisorsList=List??Divizori
DivisorsList.Syntax=[ <Num??r> ]
DivisorsSum=SumaDivizori
DivisorsSum.Syntax=[ <Num??r> ]
Dodecahedron=Dodecaedru
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direc??ie> ]
Dot=Produs Scalar
Dot.Syntax=[ <Vector>, <Vector> ]
DotPlot.Syntax=[ <List?? de date raw>, <Stiva puncte adiacente (op??ional)>, <Factor Scar?? (op??ional)>]
DynamicCoordinates=CoordonateDinamice
DynamicCoordinates.Syntax=[ <Punct>, <x- abscisa>, <y-Coordinate> ]\n[ <Punct>, <x- abscisa>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity=Excentricitate
Eccentricity.Syntax=[ <Conic??> ]
Eigenvalues.SyntaxCAS=[ <Matrice> ]
Eigenvectors.SyntaxCAS=[ <Matrice> ]
Element.Syntax=[ <List??>, <Pozi??ia elementului> ]\n[ <Matrice>, <R??nd>, <Coloan??> ]\n[ <List??>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <List??>, <Pozi??ia elementului> ]\n[ <Matrice>, <R??nd>, <Coloan??> ]
Eliminate=Elimin??
Eliminate.Syntax=[ <List?? polinoame>, <List?? variabile> ]
Ellipse=Elips??
Ellipse.Syntax=[ <Focar>, <Focar>, <Lungime Axa Mare> ]\n[ <Focar>, <Focar>, <Segment> ]\n[ <Focar>, <Focar>, <Punct> ]
Ends=Finaluri
Ends.Syntax=[ <Quadric> ]
Envelope=Plic
Envelope.Syntax=[ <Direc??ie>, <Punct> ]
Erlang.Syntax=[ <Form??>, <Rat??>, <Valoare variabil??> ]\n[ <Form??>, <Rat??>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Form??>, <Rat??>, x, <Boolean Cumulat> ]
Evaluate=evalua
Excentricity=ExcentricitateLiniar??
Excentricity.Syntax=[ <Conic??> ]
Execute=Execut??
Execute.Syntax=[ <List?? Texte> ]\n[ <List?? Texte>, <Parametru>, <Parametru>, ... ]
Expand=Dezvolt??
Expand.Syntax=[ <expresie> ]
Exponential=Exponen??ial
Exponential.Syntax=[ <Lambda>, <Valoare variabil??> ]\n[ <Lambda>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Lambda>, x, <Boolean Cumulat> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valoare variabil??> ]
ExportImage.Syntax=[ <Property>, <Valoare>, <Property>, <Valoare>, ... ]
ExtendedGCD.Syntax=[ <??ntreg>, <??ntreg>]\n[ <Polinomial>, <Polinomial>]
Extremum=Extrem
Extremum.Syntax=[ <Polinomial> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]
Extremum.SyntaxCAS=[ <Func??ie> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]
FDistribution=DistribuireF
FDistribution.Syntax=[ <Num????ator Grade de Libertate>, <Numitor Grade de Libertate>, <Valoare variabil??> ]\n[ <Num????ator Grade de Libertate>, <Numitor Grade de Libertate>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Num????ator Grade de Libertate>, <Numitor Grade de Libertate>, x, <Boolean Cumulat> ]
FDistribution.SyntaxCAS=[ <Num????ator Grade de Libertate>, <Numitor Grade de Libertate>, <Valoare variabil??> ]
Factor=Factorizeaz??
Factor.Syntax=[ <Polinomial> ]
Factor.SyntaxCAS=[ <Num??r> ]\n[ <Polinomial> ]\n[ <expresie>, <variabil??> ]
Factors=Factori
Factors.Syntax=[ <Polinomial> ]\n[ <Num??r> ]
FillCells=Completeaz??Celule
FillCells.Syntax=[ <Gam??Celule>, <Obiect> ]\n[ <Gam??Celule>, <List??> ]\n[ <Gam??Celule>, <Matrice> ]
FillColumn=Completeaz??Coloan??
FillColumn.Syntax=[ <Coloan??>, <List??> ]
FillRow=Completeaz??R??nd
FillRow.Syntax=[ <R??nd>, <List??> ]
First=PrimulElement
First.Syntax=[ <List??> ]\n[ <Text> ]\n[ <List??>, <Num??rul elementelor> ]\n[ <Text>, <Num??rul elementelor> ]\n[ <Locus>, <Num??rul elementelor> ]
First.SyntaxCAS=[ <List??> ]\n[ <List??>, <Num??rul elementelor> ]
FirstAxis=AxaMare
FirstAxis.Syntax=[ <Conic??> ]
FirstAxisLength=LungimeSemiaxaMare
FirstAxisLength.Syntax=[ <Conic??> ]
Fit=Potrivit
Fit.Syntax=[ <List?? de puncte>, <List?? de func??ii> ]\n[ <List?? de puncte>, <Func??ie> ]
FitExp=RegresieExponen??ial??
FitExp.Syntax=[ <List?? de puncte> ]
FitGrowth=AjustareCre??tere
FitGrowth.Syntax=[ <List?? de puncte> ]
FitImplicit=PotrivireImplicit??
FitImplicit.Syntax=[ <List?? de puncte>, <Ordinul> ]
FitLineX=XDreapt??Regresie
FitLineX.Syntax=[ <List?? de puncte> ]
FitLineY=YDreapt??Regresie
FitLineY.Syntax=[ <List?? de puncte> ]
FitLog=RegresieLogaritmic??
FitLog.Syntax=[ <List?? de puncte> ]
FitLogistic=RegresieLogistic??
FitLogistic.Syntax=[ <List?? de puncte> ]
FitPoly=RegresiePolinomial??
FitPoly.Syntax=[ <List?? de puncte>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow=RegresieSeriePuteri
FitPow.Syntax=[ <List?? de puncte> ]
FitSin=RegresieSinusoidal??
FitSin.Syntax=[ <List?? de puncte> ]
Flatten=Aplatiza
Flatten.Syntax=[ <List??> ]
Focus=Focar
Focus.Syntax=[ <Conic??> ]
FractionText=TextFrac??ie
FractionText.Syntax=[ <Num??r> ]\n[ <Punct> ]\n[ <Num??r>, <Boolean Single fraction> ]
Frequency=Frecven????
Frequency.Syntax=[ <List?? de date raw> ]\n[ <Boolean Cumulat>, <List?? de date raw> ]\n[ <List?? Limite de Clase>, <List?? de date raw> ]\n[ <List?? Texte>, <List?? Texte> ]\n[ <Boolean Cumulat>, <List?? Limite de Clase>, <List?? de date raw> ]\n[ <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]\n[ <Boolean Cumulat>, <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]
FrequencyPolygon=PligonFrecve????
FrequencyPolygon.Syntax=[ <List?? Limite de Clase>, <Lista ??nal??ime> ]\n[ <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]\n[ <Boolean Cumulat>, <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]
FrequencyTable=TabelFrecve????
FrequencyTable.Syntax=[ <List?? de date raw>, <Factor Scar?? (op??ional)> ]\n[ <Boolean Cumulat>, <List?? de date raw> ]\n[ <List?? Limite de Clase>, <List?? de date raw> ]\n[ <Boolean Cumulat>, <List?? Limite de Clase>, <List?? de date raw> ]\n[ <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]\n[ <Boolean Cumulat>, <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]
FromBase=DinBaza
FromBase.Syntax=[ <Num??r ca text>, <Baz??> ]
Function=Func??ie
Function.Syntax=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <List?? de numere> ]
Function.Syntax3D=[ <List?? de numere> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <expresie>, <variabila parametru 1>, <Valuare ini??ial??>, <Valuare final??>, <variabila parametru 2>, <Valuare ini??ial??>, <Valuare final??> ]
Function.SyntaxCAS=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]
FutureValue=ValoareViitoare
FutureValue.Syntax=[ <Rat??>, <Num??r de puncte>, <Plat??>, <Valuare prezent?? (op??ional)>, <Tip (op??ional)> ]
GCD=CMMDC
GCD.Syntax=[ <List?? de numere> ]\n[ <Num??r>, <Num??r> ]
GCD.SyntaxCAS=[ <List?? de numere> ]\n[ <List?? polinoame> ]\n[ <Num??r>, <Num??r> ]\n[ <Polinomial>, <Polinomial> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <Valoare variabil??> ]\n[ <Alpha>, <Beta>, <Valoare variabil??>, <Boolean Cumulat>  ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulat> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <Valoare variabil??> ]
GeometricMean=MedieGeometric??
GeometricMean.Syntax=[ <List?? de numere> ]
GetTime=Cite??teTimpul
GetTime.Syntax=[]\n[ <Format> ]
GroebnerDegRevLex.Syntax=[ <List?? polinoame> ]\n[ <List?? polinoame>, <List?? variabile> ]
GroebnerLex.Syntax=[ <List?? polinoame> ]\n[ <List?? polinoame>, <List?? variabile> ]
GroebnerLexDeg.Syntax=[ <List?? polinoame> ]\n[ <List?? polinoame>, <List?? variabile> ]
HarmonicMean=MedieArmonic??
HarmonicMean.Syntax=[ <List?? de numere> ]
Height=??n??l??ime
Height.Syntax=[ <Corp> ]
HideLayer=AscundeStrat
HideLayer.Syntax=[ <Num??r> ]
Histogram=Histogram??
Histogram.Syntax=[ <List?? Limite de Clase>, <Lista ??nal??ime> ]\n[ <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]\n[ <Boolean Cumulat>, <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]
HistogramRight=Histogram??Dreapta
HistogramRight.Syntax=[ <List?? Limite de Clase>, <Lista ??nal??ime> ]\n[ <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)>  ]\n[ <Boolean Cumulat>, <List?? Limite de Clase>, <List?? de date raw>, <Densitate true|false>, <Scar?? Densitate (op??ional)> ]
HyperGeometric=HiperGeometric
HyperGeometric.Syntax=[ <Dimensiune Popula??ie>, <Num??r Succese>, <Dimensiune Mostr??> ]\n[ <Dimensiune Popula??ie>, <Num??r Succese>, <Dimensiune Mostr??>, <Boolean Cumulat> ]\n[ <Dimensiune Popula??ie>, <Num??r Succese>, <Dimensiune Mostr??>, <Valoare variabil??>, <Boolean Cumulat> ]
HyperGeometric.SyntaxCAS=[ <Dimensiune Popula??ie>, <Num??r Succese>, <Dimensiune Mostr??>, <Valoare variabil??>, <Boolean Cumulat> ]
Hyperbola=Hiperbol??
Hyperbola.Syntax=[ <Focar>, <Focar>, <Lungime Axa Mare> ]\n[ <Focar>, <Focar>, <Segment> ]\n[ <Focar>, <Focar>, <Punct> ]
IFactor.Syntax=[ <Polinomial> ]
IFactor.SyntaxCAS=[ <expresie> ]
Icosahedron=Icosaedru
Icosahedron.Syntax=[ <Triunghi echilateral> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direc??ie> ]
Identity=Identitate
Identity.Syntax=[ <Num??r> ]
If=Dac??
If.Syntax=[ <Condi??ie>, <Atunci> ]\n[ <Condi??ie>, <Atunci>, <Altfel> ]
ImplicitCurve=Curb??Implicit??
ImplicitCurve.Syntax=[ <List?? de puncte> ]\n[ <f(x y)> ]
ImplicitDerivative=Derivat??Implicit??
ImplicitDerivative.Syntax=[ <f(x y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x y)> ]\n[ <expresie>, <Variabil?? Dependent??>, <Variabil?? Independent??> ]
Incircle=Cerc??nscris
Incircle.Syntax=[ <Punct>, <Punct>, <Punct> ]
IndexOf=IndiceleLui
IndexOf.Syntax=[ <Obiect>, <List??> ]\n[ <Text>, <Text> ]\n[ <Obiect>, <List??>, <Indice de ??nceput> ]\n[ <Text>, <Text>, <Indice de ??nceput> ]
Insert=Inserare
Insert.Syntax=[ <List??>, <List??>, <Pozi??ie> ]\n[ <Obiect>, <List??>, <Pozi??ie> ]
Integral=Integral??
Integral.Syntax=[ <Func??ie> ]\n[ <Func??ie>, <variabil??> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??>, <Boolean> ]
Integral.SyntaxCAS=[ <Func??ie> ]\n[ <Func??ie>, <variabil??> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??> ]
IntegralBetween=Integral????ntre
IntegralBetween.Syntax=[ <Func??ie>, <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <Func??ie>, <x-valuare ini??iala>, <x-valuare final??>, <Boolean> ]
IntegralBetween.SyntaxCAS=[ <Func??ie>, <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <Func??ie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??> ]
IntegralSymbolic.Syntax=[ <Func??ie> ]\n[ <Func??ie>, <variabil??> ]
InteriorAngles.Syntax=[ <Poligon> ]
Intersect=Intersec??ie
Intersect.Syntax=[ <Obiect>, <Obiect> ]\n[ <Obiect>, <Obiect>, <Num??rul punctului de intersec??ie> ]\n[ <Obiect>, <Obiect>, <Punct ini??ial> ]\n[ <Func??ie>, <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Curba 1>, <Curba2>, <Parametru 1>, <Parametru 2> ]
Intersect.SyntaxCAS=[ <Func??ie>, <Func??ie> ]
IntersectConic=Intersec??ieConice
IntersectConic.Syntax=[ <Plan>, <Quadric> ]\n[ <Quadric>, <Quadric> ]
IntersectPath=Intersec??ieCurbe
IntersectPath.Syntax=[ <Dreapt??>, <Poligon> ]\n[ <Poligon>, <Poligon> ]
IntersectPath.Syntax3D=[ <Dreapt??>, <Poligon> ]\n[ <Poligon>, <Poligon> ]\n[ <Plan>, <Poligon> ]\n[ <Plan>, <Quadric> ]
Intersection=Intersec??ie
Intersection.Syntax=[ <List??>, <List??> ]
InverseBeta.Syntax=[ <Alpha>, <Beta>, <Probabilitate> ]
InverseBinomial=BinomInvers
InverseBinomial.Syntax=[ <Num??r de ??ncerc??ri>, <Probabilitatea de succes>, <Cumulative Probability> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulative Probability>, <Probabilitatea de succes>, <Num??r Succese> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulative Probability>, <Probabilitatea de succes>, <Num??r Succese> ]
InverseCauchy=CauchyInverse
InverseCauchy.Syntax=[ <Median??>, <Scal??>, <Probabilitate> ]
InverseChiSquared=ChiP??tratInvers
InverseChiSquared.Syntax=[ <Grad de libertate>, <Probabilitate> ]
InverseExponential=InversExponen??ial
InverseExponential.Syntax=[ <Lambda>, <Probabilitate> ]
InverseFDistribution=Distribu??ieFInvers??
InverseFDistribution.Syntax=[ <Num????ator Grade de Libertate>, <Numitor Grade de Libertate>, <Probabilitate> ]
InverseGamma=GammaInvers
InverseGamma.Syntax=[ <Alpha>, <Beta>, <Probabilitate> ]
InverseHyperGeometric=InversHiperGeometric
InverseHyperGeometric.Syntax=[ <Dimensiune Popula??ie>, <Num??r Succese>, <Dimensiune Mostr??>, <Probabilitate> ]
InverseLaplace=LaplaceInvers
InverseLaplace.Syntax=[ <Func??ie> ]\n[ <Func??ie>, <variabil??> ]\n[ <Func??ie>, <variabil??>, <variabil??> ]
InverseLogNormal=InversLogNormal
InverseLogNormal.Syntax=[ <Medie>, <Devia??ia Standard>, <Probabilitate> ]
InverseLogistic=Logistic??Invers??
InverseLogistic.Syntax=[ <Medie>, <Scal??>, <Probabilitate> ]
InverseNormal=NormalaInvers??
InverseNormal.Syntax=[ <Medie>, <Devia??ia Standard>, <Cumulative Probability> ]
InversePascal=PascalInvers
InversePascal.Syntax=[ <Num??r de succese>, <Probabilitate de succes>, <Probabilitate> ]
InversePoisson=PoissonInvers
InversePoisson.Syntax=[ <Medie>, <Probabilitate> ]
InverseTDistribution=Distribu??ieTInvers??
InverseTDistribution.Syntax=[ <Grad de libertate>, <Probabilitate> ]
InverseWeibull=WeibullInvers
InverseWeibull.Syntax=[ <Form??>, <Scal??>, <Probabilitate> ]
InverseZipf=ZipfInvers
InverseZipf.Syntax=[ <Num??rul elementelor>, <Exponent>, <Probabilitate> ]
Invert=Invers??
Invert.Syntax=[ <Matrice> ]\n[ <Func??ie> ]
IsFactored.Syntax=[ <Polinomial> ]
IsInRegion=Este??nDomeniu
IsInRegion.Syntax=[ <Punct>, <Regiune> ]
IsInteger=Este??ntreg
IsInteger.Syntax=[ <Num??r> ]
IsPrime=EstePrim
IsPrime.Syntax=[ <Num??r> ]
IsTangent.Syntax=[ <Dreapt??>, <Conic??> ]
IsVertexForm.Syntax=[ <Func??ie> ]
Iteration=Itera??ie
Iteration.Syntax=[ <Func??ie>, <Valuare ini??ial??>, <Number of Iterations> ]\n[ <expresie>, <Variabile>, <Start Values>, <Count> ]
IterationList=List??Itera??ie
IterationList.Syntax=[ <Func??ie>, <Valuare ini??ial??>, <Number of Iterations> ]\n[ <expresie>, <Variabile>, <Start Values>, <Count> ]
IterationList.SyntaxCAS=[ <Func??ie>, <Valuare ini??ial??>, <Number of Iterations> ]
Join=Une??te
Join.Syntax=[ <List?? de Liste> ]\n[ <List??>, <List??>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Matrice> ]
KeepIf=Men??ineCondi??ie
KeepIf.Syntax=[ <Condi??ie>, <List??> ]\n[ <Condi??ie>, <variabil??>, <List??> ]
LCM=CMMMC
LCM.Syntax=[ <List?? de numere> ]\n[ <Num??r>, <Num??r> ]
LCM.SyntaxCAS=[ <List?? de numere> ]\n[ <List?? polinoame> ]\n[ <Num??r>, <Num??r> ]\n[ <Polinomial>, <Polinomial> ]
LUDecomposition.Syntax=[ <Matrice> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Obiect> ]\n[ <Obiect>, <Boolean for Substitution of Variables> ]\n[ <Obiect>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]
Laplace.Syntax=[ <Func??ie> ]\n[ <Func??ie>, <variabil??> ]\n[ <Func??ie>, <variabil??>, <variabil??> ]
Last=Ultimul
Last.Syntax=[ <List??> ]\n[ <Text> ]\n[ <List??>, <Num??rul elementelor> ]\n[ <Text>, <Num??rul elementelor> ]
Last.SyntaxCAS=[ <List??> ]\n[ <List??>, <Num??rul elementelor> ]
LeftSide=MembruSt??nga
LeftSide.Syntax=[ <Ecua??ie> ]
LeftSide.SyntaxCAS=[ <Ecua??ie> ]\n[ <List?? ecua??ii> ]\n[ <List?? ecua??ii>, <Index> ]
LeftSum=Sum??St??nga
LeftSum.Syntax=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??>, <Num??r de dreptunghiuri> ]
Length=Lungime
Length.Syntax=[ <Obiect> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <Punct ini??ial>, <Punct final> ]\n[ <Curb??>, <Valoare ini??ial?? t>, <Valoare final?? t> ]\n[ <Curb??>, <Punct ini??ial>, <Punct final> ]
Length.SyntaxCAS=[ <List??> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <variabil??>, <x-valuare ini??iala>, <x-valuare final??> ]
LetterToUnicode=Liter??Unicod
LetterToUnicode.Syntax=[ <Liter??> ]
Limit=Limit??
Limit.Syntax=[ <Func??ie>, <Valoare> ]
Limit.SyntaxCAS=[ <expresie>, <Valoare> ]\n[ <expresie>, <variabil??>, <Valoare> ]
LimitAbove=Limit??Superioar??
LimitAbove.Syntax=[ <Func??ie>, <Valoare> ]
LimitAbove.SyntaxCAS=[ <expresie>, <Valoare> ]\n[ <expresie>, <variabil??>, <Valoare> ]
LimitBelow=Limit??Inferioar??
LimitBelow.Syntax=[ <Func??ie>, <Valoare> ]
LimitBelow.SyntaxCAS=[ <expresie>, <Valoare> ]\n[ <expresie>, <variabil??>, <Valoare> ]
Line=Dreapt??
Line.Syntax=[ <Punct>, <Punct> ]\n[ <Punct>, <Dreapt?? Paralel??> ]\n[ <Punct>, <Vector Direc??ie> ]
LineBisector=Mediatoare
LineBisector.Syntax=[ <Segment> ]\n[ <Punct>, <Punct> ]
LineBisector.Syntax3D=[ <Segment> ]\n[ <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direc??ie> ]
LineGraph.Syntax=[ <List?? coordonate-x>, <List?? coordonate-y> ]
Locus=LocGeometric
Locus.Syntax=[ <Punct Origine Curb?? Locus>, <Punct> ]\n[ <Punct Origine Curb?? Locus>, <Cursor> ]\n[ <Pant??>, <Punct> ]\n[ <f(x y)>, <Punct> ]
LocusEquation=Ecua??ieLocus
LocusEquation.Syntax=[ <Locus> ]\n[ <Locus Point>, <Punct mobil> ]\n[ <Expresie  boolean??>, <Punct mobil> ]
LogNormal.Syntax=[ <Medie>, <Devia??ia Standard>, <Valoare variabil??> ]\n[ <Medie>, <Devia??ia Standard>, <Valoare variabil??>, <Boolean Cumulat>  ]\n[ <Medie>, <Devia??ia Standard>, x, <Boolean Cumulat> ]
Logistic.Syntax=[ <Medie>, <Scal??>, <Valoare variabil??> ]\n[ <Medie>, <Scal??>, <Valoare variabil??>, <Boolean Cumulat>  ]\n[ <Medie>, <Scal??>, x, <Boolean Cumulat> ]
LowerSum=Sum??Inferioar??
LowerSum.Syntax=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??>, <Num??r de dreptunghiuri> ]
MatrixPlot=MatricePlot
MatrixRank=RangMatrice
MatrixRank.Syntax=[ <Matrice> ]
Max.Syntax=[ <Interval> ]\n[ <Num??r>, <Num??r> ]\n[ <List??> ]\n[ <Lista de date>, <List?? de frecven??e> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]
Max.SyntaxCAS=[ <List??> ]\n[ <Interval> ]\n[ <Num??r>, <Num??r> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Lista de date>, <List?? de frecven??e> ]
Maximize=G??se??teMaxim
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
Mean=Medie
Mean.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
MeanX=MedieX
MeanX.Syntax=[ <List?? de puncte> ]
MeanY=MedieY
MeanY.Syntax=[ <List?? de puncte> ]
Median=Median??
Median.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
Median.SyntaxCAS=[ <List?? de numere> ]
Midpoint=Mijloc
Midpoint.Syntax=[ <Segment> ]\n[ <Conic??> ]\n[ <Interval> ]\n[ <Punct>, <Punct> ]
Min.Syntax=[ <Interval> ]\n[ <Num??r>, <Num??r> ]\n[ <List??> ]\n[ <Lista de date>, <List?? de frecven??e> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]
Min.SyntaxCAS=[ <List??> ]\n[ <Interval> ]\n[ <Num??r>, <Num??r> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Lista de date>, <List?? de frecven??e> ]
MinimalPolynomial.Syntax=[ <Matrice> ]
Minimize=G??se??teMinim
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
MinimumSpanningTree=SpanningTreeMinim
MinimumSpanningTree.Syntax=[ <List?? de puncte> ]
Mirror=Reflexie
Mirror.Syntax=[ <Obiect>, <Punct> ]\n[ <Obiect>, <Dreapt??> ]\n[ <Obiect>, <Cerc> ]
Mirror.Syntax3D=[ <Obiect>, <Punct> ]\n[ <Obiect>, <Dreapt??> ]\n[ <Obiect>, <Plan> ]\n[ <Obiect>, <Cerc> ]
MixedNumber=Num??rFrac??ionar
MixedNumber.SyntaxCAS=[ <Num??r> ]
Mod=Rest
Mod.Syntax=[ <De??mp??r??it>, <Divizor> ]\n[ <De??mp??r??it Polinomial>, <Divizor Polinomial> ]
Mode=Modul
Mode.Syntax=[ <List?? de numere> ]
ModularExponent.Syntax=[ <Num??r>, <Num??r>, <Num??r> ]
NDerivative.Syntax=[ <Func??ie> ]\n[ <Func??ie>, <Ordinul> ]
NIntegral.Syntax=[ <Func??ie> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <x-valuare ini??iala>, <Start y-Value>, <x-valuare final??> ]
NIntegral.SyntaxCAS=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]\n[ <Func??ie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??> ]
NInvert.Syntax=[ <Func??ie> ]
NSolutions=NSolu??ii
NSolutions.Syntax=[ <Ecua??ie> ]
NSolutions.SyntaxCAS=[ <Ecua??ie> ]\n[ <Ecua??ie>, <variabil??> ]\n[ <Ecua??ie>, <Variabil?? = valoare ini??ial??> ]\n[ <List?? ecua??ii>, <List?? variabile> ]
NSolve=NRezolv??
NSolve.Syntax=[ <Ecua??ie> ]
NSolve.SyntaxCAS=[ <Ecua??ie> ]\n[ <Ecua??ie>, <variabil??> ]\n[ <Ecua??ie>, <Variabil?? = valoare ini??ial??> ]\n[ <List?? ecua??ii>, <List?? variabile> ]
NSolveODE=NRezolvareEcua??ieDiferen??ial??Ordinar??
NSolveODE.Syntax=[ <List?? de derivate>, <x ini??ial>, <List?? de coordonate y ini??iale>, <x final> ]
Name=Nume
Name.Syntax=[ <Obiect> ]
Net.Syntax=[ <Poliedru>, <Num??r> ]\n[ <Poliedru>, <Num??r>, <Fa????>, <Latur??>, <Latur??>, ... ]
NextPrime=PrimUrm??tor
NextPrime.Syntax=[ <Num??r> ]
Normal=Normal??
Normal.Syntax=[ <Medie>, <Devia??ia Standard>, <Valoare variabil??> ]\n[ <Medie>, <Devia??ia Standard>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Medie>, <Devia??ia Standard>, x, <Boolean Cumulat> ]
NormalQuantilePlot=Schi????Cuantil??Normal
NormalQuantilePlot.Syntax=[ <List?? de date raw> ]
Normalize=Normalizeaz??
Normalize.Syntax=[ <List?? de numere> ]\n[ <List?? de puncte> ]
Numerator=Num??r??tor
Numerator.Syntax=[ <Num??r> ]\n[ <Func??ie> ]
Numerator.SyntaxCAS=[ <expresie> ]
Numeric.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <num??r cifre> ]
Object=Obiect
Object.Syntax=[ <Nume de obiect ca text> ]
Octahedron=Octaedru
Octahedron.Syntax=[ <Triunghi echilateral> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direc??ie> ]
Ordinal.Syntax=[ <??ntreg> ]
OrdinalRank=RangOrdinal
OrdinalRank.Syntax=[ <List??> ]
OrthogonalLine=Perpendicular??
OrthogonalLine.Syntax=[ <Punct>, <Dreapt??> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Punct>, <Dreapt??> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Vector> ]\n[ <Punct>, <Plan> ]\n[ <Dreapt??>, <Dreapt??> ]\n[ <Punct>, <Direc??ie>, <Direc??ie> ]\n[ <Punct>, <Dreapt??>, <Context> ]
OrthogonalPlane=Planperpendicular
OrthogonalPlane.Syntax=[ <Punct>, <Dreapt??> ]\n[ <Punct>, <Vector> ]
OrthogonalVector=VectorPerpendicular
OrthogonalVector.Syntax=[ <Dreapt??> ]\n[ <Segment> ]\n[ <Vector> ]
OrthogonalVector.Syntax3D=[ <Dreapt??> ]\n[ <Segment> ]\n[ <Vector> ]\n[ <Plan> ]
OrthogonalVector.SyntaxCAS=[ <Vector> ]
OsculatingCircle=CercOsculator
OsculatingCircle.Syntax=[ <Punct>, <Obiect> ]
PMCC=CoeficientCorela??ie
PMCC.Syntax=[ <List?? de puncte> ]\n[ <List?? coordonate-x>, <List?? coordonate-y> ]
Pan=Mut??
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola=Parabol??
Parabola.Syntax=[ <Punct>, <Dreapt??> ]
Parameter=Parametru
Parameter.Syntax=[ <Parabol??> ]
ParametricDerivative=DerivataParametric??
ParametricDerivative.Syntax=[ <Curb??> ]
ParseToFunction=Converte??te??nFunc??ie
ParseToFunction.Syntax=[ <Func??ie>, <String> ]
ParseToNumber=Converte??te??nNum??r
ParseToNumber.Syntax=[ <Num??r>, <String> ]
PartialFractions=Frac??iiPar??iale
PartialFractions.Syntax=[ <Func??ie> ]
PartialFractions.SyntaxCAS=[ <Func??ie> ]\n[ <Func??ie>, <variabil??> ]
Pascal.Syntax=[ <Num??r de succese>, <Probabilitate de succes> ]\n[ <Num??r de succese>, <Probabilitate de succes>, <Boolean Cumulat> ]\n[ <Num??r de succese>, <Probabilitate de succes>, <Valoare variabil??>, <Boolean Cumulat> ]
Pascal.SyntaxCAS=[ <Num??r de succese>, <Probabilitate de succes>, <Valoare variabil??>, <Boolean Cumulat> ]
PathParameter=ParametruCale
PathParameter.Syntax=[ <Punct pe cale> ]
Payment=Plat??
Payment.Syntax=[ <Rat??>, <Num??r de puncte>, <Valuare prezent??>, <Viitoare valuare (op??ional)>, <Tip (op??ional)> ]
PenStroke.Syntax=[ <Punct>, ..., <Punct> ]
Percentile=Func??ieReparti??ie
Percentile.Syntax=[ <List?? de numere>, <Procent> ]
Perimeter=Perimetru
Perimeter.Syntax=[ <Poligon> ]\n[ <Conic??> ]\n[ <Locus> ]
Periods=Perioade
Periods.Syntax=[ <Rat??>, <Plat??>, <Valuare prezent??>, <Viitoare valuare (op??ional)>, <Tip (op??ional)> ]
PieChart.Syntax=[ <List?? de frecven??e> ]\n[ <List?? de frecven??e>, <Center>, <Raz??> ]
Plane=Plan
Plane.Syntax=[ <Poligon> ]\n[ <Conic??> ]\n[ <Punct>, <Plan> ]\n[ <Punct>, <Dreapt??> ]\n[ <Dreapt??>, <Dreapt??> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Vector>, <Vector> ]
PlaneBisector=PlanBisector
PlaneBisector.Syntax=[ <Segment> ]\n[ <Punct>, <Punct> ]
PlaySound=Red??Sunetul
PlaySound.Syntax=[ <URL> ]\n[ <Boolean> ]\n[ <Func??ie>, <Valoare minim??>, <Valoare maxim??> ]\n[ <Func??ie>, <Valoare minim??>, <Valoare maxim??>, <Rat?? e??antionare>, <Ad??ncime e??antion> ]
PlotSolve.Syntax=[ <Ecua??ie ??n x> ]
Point=Punct
Point.Syntax=[ <Obiect> ]\n[ <Obiect>, <Parametru> ]\n[ <Punct>, <Vector> ]\n[ <List??> ]
PointIn=Punct??n
PointIn.Syntax=[ <Regiune> ]
PointList=List??Puncte
PointList.Syntax=[ <List??> ]
Poisson.Syntax=[ <Medie> ]\n[ <Medie>, <Boolean Cumulat> ]\n[ <Medie>, <Valoare variabil??>, <Boolean Cumulat> ]
Poisson.SyntaxCAS=[ <Medie>, <Valoare variabil??>, <Boolean Cumulat> ]
Polar=Polar??
Polar.Syntax=[ <Punct>, <Conic??> ]\n[ <Dreapt??>, <Conic??> ]
PolyLine=Liniepoligonal??
PolyLine.Syntax=[ <List?? de puncte> ]\n[ <Punct>, ..., <Punct> ]
Polygon=Poligon
Polygon.Syntax=[ <List?? de puncte> ]\n[ <Punct>, ..., <Punct> ]\n[ <Punct>, <Punct>, <Num??r> ]
Polygon.Syntax3D=[ <List?? de puncte> ]\n[ <Punct>, ..., <Punct> ]\n[ <Punct>, <Punct>, <Num??r> ]\n[ <Punct>, <Punct>, <Num??r>, <Direc??ie> ]
Polynomial=Polinom
Polynomial.Syntax=[ <Func??ie> ]\n[ <List?? de puncte> ]
Polynomial.SyntaxCAS=[ <Func??ie> ]\n[ <Func??ie>, <variabil??> ]
PresentValue=ValuarePrezent??
PresentValue.Syntax=[ <Rat??>, <Num??r de puncte>, <Plat??>, <Viitoare valuare (op??ional)>, <Tip (op??ional)> ]
PreviousPrime=PrimPrecedent
PreviousPrime.Syntax=[ <Num??r> ]
PrimeFactors=FactoriPrimi
PrimeFactors.Syntax=[ <Num??r> ]
Prism=Prism??
Prism.Syntax=[ <Poligon>, <Punct> ]\n[ <Poligon>, <Valoare ??n??l??ime> ]\n[ <Punct>, <Punct>, ... ]
Product=Produs
Product.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <Num??rul elementelor> ]\n[ <List?? de numere>, <List?? de frecven??e> ]\n[ <expresie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??> ]
Product.SyntaxCAS=[ <List?? Expresii> ]\n[ <expresie>, <variabil??>, <Indice de ??nceput>, <Index Final> ]
Prove=Demonstreaz??
Prove.Syntax=[ <Expresie  boolean??> ]
ProveDetails=DetaliiDemonstra??ie
ProveDetails.Syntax=[ <Expresie  boolean??> ]
Pyramid=Piramid??
Pyramid.Syntax=[ <Poligon>, <Punct> ]\n[ <Poligon>, <??n??l??ime> ]\n[ <Punct>, <Punct>, <Punct>, <Punct>, ... ]
Q1=Q1
Q1.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
Q3=Q3
Q3.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
QRDecomposition.Syntax=[ <Matrice> ]
QuadricSide=Latur??
QuadricSide.Syntax=[ <Quadric> ]
RSquare=RP??trat
RSquare.Syntax=[ <List?? de puncte>, <Func??ie> ]
Radius=Raz??
Radius.Syntax=[ <Conic??> ]
Random=Aleator
Random.Syntax=[ <??ntreg Minim>, <??ntreg Maxim> ]\n[ <??ntreg Minim>, <??ntreg Maxim>, <Num??r e??antioane> ]\n[ <??ntreg Minim>, <??ntreg Maxim>, <Boolean Fix> ]
Random.SyntaxCAS=[ <??ntreg Minim>, <??ntreg Maxim> ]\n[ <??ntreg Minim>, <??ntreg Maxim>, <Num??r e??antioane> ]
RandomBinomial=AleatorBinomial
RandomBinomial.Syntax=[ <Num??r de ??ncerc??ri>, <Probabilitate> ]
RandomDiscrete.Syntax=[ <List??>, <List??> ]
RandomElement=ElementAleatoriu
RandomElement.Syntax=[ <List??> ]
RandomNormal=AleatorNormal
RandomNormal.Syntax=[ <Medie>, <Devia??ia Standard> ]
RandomPointIn.Syntax=[ <Regiune> ]\n[ <List?? de puncte> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=AleatorPoisson
RandomPoisson.Syntax=[ <Medie> ]
RandomPolynomial=PolinomAleator
RandomPolynomial.Syntax=[ <Grad>, <Minim pentru Coeficien??i>, <Maxim pentru Coeficien??i> ]
RandomPolynomial.SyntaxCAS=[ <Grad>, <Minim pentru Coeficien??i>, <Maxim pentru Coeficien??i> ]\n[ <variabil??>, <Grad>, <Minim pentru Coeficien??i>, <Maxim pentru Coeficien??i> ]
RandomUniform=AleatorUniform
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Num??r e??antioane> ]
Rate=Rat??
Rate.Syntax=[ <Num??r de puncte>, <Plat??>, <Valuare prezent??>, <Viitoare valuare (op??ional)>, <Tip (op??ional)>, <Presupunere (op??ional)> ]
Rationalize=Ra??ionalizare
Rationalize.SyntaxCAS=[ <Num??r> ]
Ray=Semidreapt??
Ray.Syntax=[ <Punct ini??ial>, <Punct> ]\n[ <Punct ini??ial>, <Vector Direc??ie> ]
ReadText.Syntax=[ <Text> ]
RectangleSum=Sum??Dreptunghi
RectangleSum.Syntax=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??>, <Num??r de dreptunghiuri>, <Pozi??ie ini??ial?? dreptunghi> ]
ReducedRowEchelonForm=MatriceE??alonat??Redus??
ReducedRowEchelonForm.Syntax=[ <Matrice> ]
Relation=Rela??ie
Relation.Syntax=[ <List??> ]\n[ <Obiect>, <Obiect> ]
RemovableDiscontinuity.Syntax=[ <Func??ie> ]
Remove=Scoate
Remove.Syntax=[ <List??>, <List??> ]
RemoveUndefined=Elimin??Nedefinire
RemoveUndefined.Syntax=[ <List??> ]
Rename=Redenumire
Rename.Syntax=[ <Obiect>, <Nume> ]
Repeat=Repeatare
Repeat.Syntax=[ <Num??r>, <Comand?? de scripting>, <Comand?? de scripting>, ... ]
ReplaceAll.Syntax=[ <Text>, <Text to Match>, <Text to Replace> ]
ResidualPlot=PuncteReziduale
ResidualPlot.Syntax=[ <List?? de puncte>, <Func??ie> ]
Reverse=Inversare
Reverse.Syntax=[ <List??> ]
RightSide=MembruDrept
RightSide.Syntax=[ <Ecua??ie> ]
RightSide.SyntaxCAS=[ <Ecua??ie> ]\n[ <List?? ecua??ii> ]\n[ <List?? ecua??ii>, <Index> ]
RigidPolygon=PoligonRigid
RigidPolygon.Syntax=[ <Poligon> ]\n[ <Poligon>, <Decalaj x>, <Decalaj y> ]\n[ <Punct Liber>, ..., <Punct Liber> ]
Root=R??d??cin??
Root.Syntax=[ <Polinomial> ]\n[ <Func??ie>, <Valoare ini??ial??-x> ]\n[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]
Root.SyntaxCAS=[ <Polinomial> ]
RootList=List??R??d??cini
RootList.Syntax=[ <List??> ]
RootMeanSquare=MedieP??tratic??
RootMeanSquare.Syntax=[ <List?? de numere> ]
Roots=R??d??cini
Roots.Syntax=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??> ]
Rotate=Rota??ie
Rotate.Syntax=[ <Obiect>, <Unghi> ]\n[ <Obiect>, <Unghi>, <Punct> ]
Rotate.Syntax3D=[ <Obiect>, <Unghi> ]\n[ <Obiect>, <Unghi>, <Punct> ]\n[ <Obiect>, <Unghi>, <Axa de rota??ie> ]\n[ <Obiect>, <Unghi>, <Punct pe ax??>, <Direc??ia sau planul axei> ]
RotateText=Rote??teText
RotateText.Syntax=[ <Text>, <Unghi> ]
Row=Linie
Row.Syntax=[ <Celul?? din foaia de calcul> ]
RunClickScript=ExecutaScriptClick
RunClickScript.Syntax=[ <Obiect> ]
RunUpdateScript=ExecutaScriptUpdate
RunUpdateScript.Syntax=[ <Obiect> ]
SDX.Syntax=[ <List?? de puncte> ]
SDY.Syntax=[ <List?? de puncte> ]
SVD.Syntax=[ <Matrice> ]
SXX.Syntax=[ <List?? de numere> ]\n[ <List?? de puncte> ]
SXY.Syntax=[ <List?? de puncte> ]\n[ <List?? de numere>, <List?? de numere> ]
SYY.Syntax=[ <List?? de puncte> ]
Sample=E??antion
Sample.Syntax=[ <List??>, <M??rime> ]\n[ <List??>, <M??rime>, <Cu ??nlocuire> ]
SampleSD=Mostr??Devia??ieStandard
SampleSD.SyntaxCAS=[ <List?? de numere> ]
SampleSDX=Mostr??Devia??ieStandardX
SampleSDX.Syntax=[ <List?? de puncte> ]
SampleSDY=Mostr??Devia??ieStandardY
SampleSDY.Syntax=[ <List?? de puncte> ]
SampleVariance=Mostr??Varia??ie
SampleVariance.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
SampleVariance.SyntaxCAS=[ <List?? de numere> ]
ScientificText=Nota??ie??tiin??ific??
ScientificText.Syntax=[ <Num??r> ]\n[ <Num??r>, <Precizie> ]
SecondAxis=AxaMic??
SecondAxis.Syntax=[ <Conic??> ]
SecondAxisLength=LungimeSemiaxaMic??
SecondAxisLength.Syntax=[ <Conic??> ]
Sector.Syntax=[ <Conic??>, <Punct>, <Punct> ]\n[ <Conic??>, <Valoare parametru>, <Valoare parametru> ]
Segment.Syntax=[ <Punct>, <Punct> ]\n[ <Punct>, <Lungime> ]
SelectObjects=AlegeObiect
SelectObjects.Syntax=[ ]\n[ <Obiect>, <Obiect>, ... ]
SelectedElement=ElementSelectat
SelectedElement.Syntax=[ <List??> ]
SelectedIndex=IndiceSelectat
SelectedIndex.Syntax=[ <List??> ]
Semicircle=Semicerc
Semicircle.Syntax=[ <Punct>, <Punct> ]
Sequence=Secven????
Sequence.Syntax=[ <Valuare final??> ]\n[ <Valuare ini??ial??>, <Valuare final??> ]\n[ <Valuare ini??ial??>, <Valuare final??>, <Increment> ]\n[ <expresie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??> ]\n[ <expresie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??>, <Increment> ]
SetActiveView=Seteaz??FereastraActiv??
SetActiveView.Syntax=[ <Vizualizare> ]\n[ <Plan> ]
SetAxesRatio=Seteaz??RaportAxe
SetAxesRatio.Syntax=[ <Num??r>, <Num??r> ]
SetAxesRatio.Syntax3D=[ <Num??r>, <Num??r> ]\n[ <Num??r>, <Num??r>, <Num??r> ]
SetBackgroundColor=Seteaz??CuloareFundal
SetBackgroundColor.Syntax=[ <Culoare> ]\n[ <Obiect>, <Culoare> ]\n[ <Ro??u>, <Verde>, <Albastru> ]\n[ <Obiect>, <Ro??u>, <Verde>, <Albastru> ]
SetCaption=Seteaz??Legend??
SetCaption.Syntax=[ <Obiect>, <Text> ]
SetColor=Seteaz??Culoare
SetColor.Syntax=[ <Obiect>, <Culoare> ]\n[ <Obiect>, <Ro??u>, <Verde>, <Albastru> ]
SetConditionToShowObject=Seteaz??Condi??ieAr??tareObiect
SetConditionToShowObject.Syntax=[ <Obiect>, <Condi??ie> ]
SetConstructionStep.Syntax=[ <Num??r> ]
SetCoords=Seteaz??Coordonate
SetCoords.Syntax=[ <Obiect>, <x>, <y> ]\n[ <Obiect>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Obiect>, <Num??r> ]\n[ <Segment>, <Num??r>, <Num??r>]
SetDynamicColor=Seteaz??CuloareDinamic??
SetDynamicColor.Syntax=[ <Obiect>, <Ro??u>, <Verde>, <Albastru> ]\n[ <Obiect>, <Ro??u>, <Verde>, <Albastru>, <Opacitate> ]
SetFilling=DefinireUmplere
SetFilling.Syntax=[ <Obiect>, <Num??r> ]
SetFixed=Seteaz??Fixat
SetFixed.Syntax=[ <Obiect>, <true | false> ]\n[ <Obiect>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Obiect>, <Imagine> ]\n[ <Obiect>, <Text> ]
SetLabelMode=Seteaz??StilEtichet??
SetLabelMode.Syntax=[ <Obiect>, <Num??r> ]
SetLayer=Seteaz??Strat
SetLayer.Syntax=[ <Obiect>, <Strat> ]
SetLevelOfDetail.Syntax=[ <Suprafa????>, <Grad detaliere> ]
SetLineStyle=Seteaz??StilDreapt??
SetLineStyle.Syntax=[ <Obiect>, <Num??r> ]
SetLineThickness=Seteaz??GrosimeDreapt??
SetLineThickness.Syntax=[ <Obiect>, <Num??r> ]
SetPerspective=SetarePerspectiv??
SetPerspective.Syntax=[ <Text> ]
SetPointSize=Seteaz??M??rimePunct
SetPointSize.Syntax=[ <Obiect>, <Num??r> ]
SetPointStyle=Seteaz??StilPunct
SetPointStyle.Syntax=[ <Punct>, <Num??r> ]
SetSeed=Definire??nceputAleatoriu
SetSeed.Syntax=[ <??ntreg> ]
SetSpinSpeed=SetareVitez??Rotire
SetSpinSpeed.Syntax=[ <Num??r> ]
SetTooltipMode=Seteaz??ModSugestii
SetTooltipMode.Syntax=[ <Obiect>, <Num??r> ]
SetTrace=DefinireUrm??
SetTrace.Syntax=[ <Obiect>, <true | false> ]
SetValue=Seteaz??Valoare
SetValue.Syntax=[ <Boolean>, <0|1> ]\n[ <Obiect>, <Obiect> ]\n[ <List??>, <Num??r>, <Obiect> ]
SetViewDirection=SetareDirec??ieVizualizare
SetViewDirection.Syntax=[ ]\n[ <Direc??ie> ]\n[ <Direc??ie>, <Boolean animate> ]
SetVisibleInView=Seteaz??Vizibil??nFereastra
SetVisibleInView.Syntax=[ <Obiect>, <Fereastra num??rul 1|2>, <Boolean> ]
Shear=Foarfece
Shear.Syntax=[ <Obiect>, <Dreapt??>, <Ra??ie> ]
ShortestDistance=Distan??aMinim??
ShortestDistance.Syntax=[ <List?? de segmente>, <Punct ini??ial>, <Punct final>, <Boolean ponderat??> ]
ShowAxes=Arat??Axe
ShowAxes.Syntax=[]\n[ <Boolean> ]\n[ <Vizualizare>, <Boolean> ]
ShowGrid=Arat??Gril??
ShowGrid.Syntax=[]\n[ <Boolean> ]\n[ <Vizualizare>, <Boolean> ]
ShowLabel=Arat??Etichet??
ShowLabel.Syntax=[ <Obiect>, <Boolean> ]
ShowLayer=Arat??Strat
ShowLayer.Syntax=[ <Num??r> ]
Shuffle=Amestec??
Shuffle.Syntax=[ <List??> ]
SigmaXX.Syntax=[ <List?? de puncte> ]\n[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
SigmaXY.Syntax=[ <List?? de puncte> ]\n[ <List?? coordonate-x>, <List?? coordonate-y> ]
SigmaYY.Syntax=[ <List?? de puncte> ]
Simplify=Simplificare
Simplify.Syntax=[ <Func??ie> ]\n[ <Text> ]
Simplify.SyntaxCAS=[ <Func??ie> ]
Slider=Cursor
Slider.Syntax=[ <Min>, <Max>, <Increment>, <Vitez??>, <L????ime>, <Este unghi>, <Orizontal>, <Anima??ie>, <Random> ]
Slope=Pant??
Slope.Syntax=[ <Dreapt??> ]
SlopeField=C??mpVectorial
SlopeField.Syntax=[ <f(x y)> ]\n[ <f(x y)>, <Num??r n> ]\n[ <f(x y)>, <Num??r n>, <Multiplicator Lungime a> ]\n[ <f(x y)>, <Num??r n>, <Multiplicator Lungime a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=CreareGrafic
SlowPlot.Syntax=[ <Func??ie> ]\n[ <Func??ie>, <Boolean Repeat> ]
Solutions=Solu??ie
Solutions.Syntax=[ <Ecua??ie> ]
Solutions.SyntaxCAS=[ <Ecua??ie> ]\n[ <Ecua??ie>, <variabil??> ]\n[ <List?? ecua??ii>, <List?? variabile> ]
Solve=Rezolv??
Solve.Syntax=[ <Ecua??ie> ]
Solve.SyntaxCAS=[ <Ecua??ie ??n x> ]\n[ <Ecua??ie>, <variabil??> ]\n[ <List?? ecua??ii>, <List?? variabile> ]\n[ <List of Parametric Equations>, <List?? variabile> ]\n[ <Ecua??ie>, <variabil??>, <List of assumptions> ]
SolveCubic=Rezolv??GradulTrei
SolveCubic.SyntaxCAS=[ <Polinom de gradul trei> ]
SolveODE=RezolvareEcua??ieDiferen??ial??Ordinar??
SolveODE.Syntax=[ <f'(x y)> ]\n[ <f'(x y)>, <Punct pe f> ]\n[ <f'(x y)>, <x ini??ial>, <y ini??ial>, <x final>, <Pas> ]\n[ <y'>, <x'>, <x ini??ial>, <y ini??ial>, <t final>, <Pas> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x ini??ial>, <y ini??ial>, <y' ini??ial>, <x final>, <Pas> ]
SolveODE.SyntaxCAS=[ <Ecua??ie> ]\n[ <Ecua??ie>, <Punct(e) pe f> ]\n[ <Ecua??ie>, <Punct(e) pe f>, <Punct(e) pe f'> ]\n[ <Ecua??ie>, <Variabil?? Dependent??>, <Variabil?? Independent??>, <Punct(e) pe f> ] \n[ <Ecua??ie>, <Variabil?? Dependent??>, <Variabil?? Independent??>, <Punct(e) pe f>, <Punct(e) pe f'> ]
SolveQuartic=Rezolv??GradulPatru
SolveQuartic.SyntaxCAS=[ <Poinom de gradul patru> ]
Sort=Sorteaz??
Sort.Syntax=[ <List??> ]\n[ <Valori>, <Chei> ]
Spearman.Syntax=[ <List?? de puncte> ]\n[ <List?? de numere>, <List?? de numere> ]
Sphere=Sfer??
Sphere.Syntax=[ <Punct>, <Raz??> ]\n[ <Punct>, <Punct> ]
Spline.Syntax=[ <List?? de puncte> ]\n[ <List?? de puncte>, <Order ??? 3> ]\n[ <List?? de puncte>, <Order ??? 3>, <Weight Function> ]
Split.Syntax=[ <Text>, <List of Texts to split on> ]
StartAnimation=??ncepeAnima??ie
StartAnimation.Syntax=[ ]\n[ <Boolean> ]\n[ <Cursor sau punct>, <Cursor sau punct>, ... ]\n[ <Cursor sau punct>, <Cursor sau punct>, ..., <Boolean> ]
StartRecord=StartMemorare
StartRecord.Syntax=[ ]\n[ <Boolean> ]
StemPlot=Diagram??Stem
StemPlot.Syntax=[ <List??> ]\n[ <List??>, <Ajustare -1|0|1> ]
StepGraph=Diagram??Fier??str??u
StepGraph.Syntax=[ <List?? de puncte> ]\n[ <List?? de puncte>, <Join Boolean> ]\n[ <List?? coordonate-x>, <List?? coordonate-y> ]\n[ <List?? de puncte>, <Join Boolean>, <Stil Puncte> ]\n[ <List?? coordonate-x>, <List?? coordonate-y>, <Join Boolean> ]\n[ <List?? coordonate-x>, <List?? coordonate-y>, <Join Boolean>, <Stil Puncte> ]
StickGraph=GraficBatoane
StickGraph.Syntax=[ <List?? de puncte> ]\n[ <List?? de puncte>, <Boolean orizontal> ]\n[ <List?? coordonate-x>, <List?? coordonate-y> ]\n[ <List?? coordonate-x>, <List?? coordonate-y>, <Boolean orizontal> ]
Stretch=??ntinde
Stretch.Syntax=[ <Obiect>, <Vector> ]\n[ <Obiect>, <Dreapt??>, <Ra??ie> ]
Substitute=Substituie
Substitute.SyntaxCAS=[ <expresie>, <List?? substitu??ie> ]\n[ <expresie>, <de la>, <la> ]
Sum=Sum??
Sum.Syntax=[ <List??> ]\n[ <List??>, <Num??rul elementelor> ]\n[ <List??>, <List?? de frecven??e> ]\n[ <expresie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??> ]
Sum.SyntaxCAS=[ <List??> ]\n[ <expresie>, <variabil??>, <Valuare ini??ial??>, <Valuare final??> ]
SumSquaredErrors=Sum??EroriP??tratice
SumSquaredErrors.Syntax=[ <List?? de puncte>, <Func??ie> ]
SurdText=TextMatematic
SurdText.Syntax=[ <Punct> ]\n[ <Num??r> ]\n[ <Num??r>, <List??> ]
Surface=Suprafa??a
Surface.Syntax=[ <Func??ie>, <Unghi> ]\n[ <Curb??>, <Unghi>, <Dreapt??> ]\n[ <expresie>, <expresie>, <expresie>, <variabila parametru 1>, <Valuare ini??ial??>, <Valuare final??>, <variabila parametru 2>, <Valuare ini??ial??>, <Valuare final??> ]
TDistribution=TDistribu??ie
TDistribution.Syntax=[ <Grad de libertate>, <Valoare variabil??> ]\n[ <Grad de libertate>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Grad de libertate>, x, <Boolean Cumulat> ]
TDistribution.SyntaxCAS=[ <Grad de libertate>, <Valoare variabil??> ]
TMean2Estimate.Syntax=[ <List?? date mostr?? 1>, <List?? date mostr?? 2>, <Nivel de ??ncredere>, <Agregat (true | false)> ]\n[ <Medie mostr?? 1>, <Devia??ie standard mostr?? 1>, <Dimensiune mostr?? 1>, <Medie mostr?? 2>, <Devia??ie standard mostr?? 2>, <Dimensiune mostr?? 2>, <Nivel de ??ncredere>, <Agregat (true | false)> ]
TMeanEstimate=TMedieEstimat
TMeanEstimate.Syntax=[ <List?? date mostr??>, <Nivel de ??ncredere> ]\n[ <Medie mostr??>, <Devia??ie standard mostr??>, <Dimensiune Mostr??>, <Nivel de ??ncredere> ]
TTest.Syntax=[ <List?? date mostr??>, <Medie ipotetizat??>, <Coad??> ]\n[ <Medie mostr??>, <Devia??ie standard mostr??>, <Dimensiune Mostr??>, <Medie ipotetizat??>, <Coad??> ]
TTest2.Syntax=[ <List?? date mostr?? 1>, <List?? date mostr?? 2>, <Coad??>, <Agregat (true | false)> ]\n[ <Medie mostr?? 1>, <Devia??ie standard mostr?? 1>, <Dimensiune mostr?? 1>, <Medie mostr?? 2>, <Devia??ie standard mostr?? 2>, <Dimensiune mostr?? 2>, <Coad??>, <Agregat (true | false)> ]
TTestPaired=TTest??mperecheat
TTestPaired.Syntax=[ <List?? date mostr?? 1>, <List?? date mostr?? 2>, <Coad??> ]
TableText=TextTabel
TableText.Syntax=[ <List??>, <List??>, ... ]\n[ <List??>, <List??>, ..., <Aliniere text> ]\n[ <List??>, <List??>, ..., <Aliniere text>, <Minimum Cell Width> ]\n[ <List??>, <List??>, ..., <Aliniere text>, <Minimum Cell Width>, <Minimum Cell Height> ]
Take=Extrage
Take.Syntax=[ <List??>, <Start Position>, <End Position> ]\n[ <List??>, <Start Position> ]\n[ <Text>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position> ]
Take.SyntaxCAS=[ <List??>, <Start Position> ]\n[ <List??>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position> ]
Tangent=Tangent??
Tangent.Syntax=[ <Punct>, <Conic??> ]\n[ <Punct>, <Func??ie> ]\n[ <Punct>, <Curb??> ]\n[ <Valoare-x>, <Func??ie> ]\n[ <Dreapt??>, <Conic??> ]\n[ <Conic??>, <Conic??> ]
Tangent.SyntaxCAS=[ <Num??r>, <Func??ie> ]\n[ <Punct>, <Obiect> ]
TaylorSeries=SerieTaylor
TaylorSeries.Syntax=[ <Func??ie>, <Valoare-x>, <Num??r ordine> ]
TaylorSeries.SyntaxCAS=[ <expresie>, <Valoare-x>, <Num??r ordine> ]\n[ <expresie>, <variabil??>, <Valoare variabil??>, <Num??r ordine> ]
Tetrahedron=Tetraedru
Tetrahedron.Syntax=[ <Triunghi echilateral> ]\n[ <Punct>, <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Direc??ie> ]
Text.Syntax=[ <Obiect> ]\n[ <Obiect>, <Boolean for Substitution of Variables> ]\n[ <Obiect>, <Punct> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <Obiect>, <Punct>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Vertical alignment -1|0|1> ]
TextToUnicode=Text??nUnicod
TextToUnicode.Syntax=[ <Text> ]
Textfield=C??su????Intrare
Textfield.Syntax=[ <Obiect legat> ]
TiedRank=RangLegat
TiedRank.Syntax=[ <List??> ]
ToBase=??nBaza
ToBase.Syntax=[ <Num??r>, <Baz??> ]
ToComplex=??nComplex
ToComplex.Syntax=[ <Vector> ]
ToExponential=??nExponen??ial
ToExponential.SyntaxCAS=[ <Num??r complex> ]
ToPoint=??nPunct
ToPoint.Syntax=[ <Num??r complex> ]
ToPolar=??nPolar
ToPolar.Syntax=[ <Num??r complex> ]\n[ <Vector> ]
ToolImage=InstrumentImagine
ToolImage.Syntax=[ <Num??r> ]\n[ <Num??r>, <Punct> ]\n[ <Num??r>, <Punct>, <Punct> ]
Top=BazaSuperioar??
Top.Syntax=[ <Quadric> ]
Translate=Transla??ie
Translate.Syntax=[ <Obiect>, <Vector> ]\n[ <Vector>, <Punct ini??ial> ]
Transpose=Transpus??
Transpose.Syntax=[ <Matrice> ]
TrapezoidalSum=Sum??Trapezoidal??
TrapezoidalSum.Syntax=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??>, <Num??r trapeze> ]
TravelingSalesman=ComisVoiajor
TravelingSalesman.Syntax=[ <List?? de puncte> ]
TriangleCenter=CentruTriunghi
TriangleCenter.Syntax=[ <Punct>, <Punct>, <Punct>, <Num??r> ]
TriangleCurve=Curb??Triunghi
TriangleCurve.Syntax=[ <Punct>, <Punct>, <Punct>, <Ecua??ie> ]
Triangular=Triunghiular
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <Valoare variabil??> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Boolean Cumulat> ]
TrigCombine=Combin??Trigo
TrigCombine.Syntax=[ <expresie> ]\n[ <expresie>, <Func??ie ??int??> ]
TrigExpand=Dezvolt??Trigo
TrigExpand.Syntax=[ <expresie> ]\n[ <expresie>, <Func??ie ??int??> ]
TrigExpand.SyntaxCAS=[ <expresie> ]\n[ <expresie>, <Func??ie ??int??> ]\n[ <expresie>, <Func??ie ??int??>, <Variabil?? ??int??> ]\n[ <expresie>, <Func??ie ??int??>, <Variabil?? ??int??>, <Variabil?? ??int??> ]
TrigSimplify=Simplific??Trigo
TrigSimplify.Syntax=[ <expresie> ]
Trilinear=Triliniar
Trilinear.Syntax=[ <Punct>, <Punct>, <Punct>, <Num??r>, <Num??r>, <Num??r> ]
TurningPoint=PunctInflexiune
TurningPoint.Syntax=[ <Polinomial> ]
TurningPoint.SyntaxCAS=[ <Func??ie> ]
Turtle=??estoasa
Turtle.Syntax=[]
TurtleBack=??estoasa??napoi
TurtleBack.Syntax=[ <??estoasa>, <Distan??a> ]
TurtleDown=??estoas??Jos
TurtleDown.Syntax=[ <??estoasa> ]
TurtleForward=??estoasa??nainte
TurtleForward.Syntax=[ <??estoasa>, <Distan??a> ]
TurtleLeft=??estoasaSt??nga
TurtleLeft.Syntax=[ <??estoasa>, <Unghi> ]
TurtleRight=??estoasaDreapta
TurtleRight.Syntax=[ <??estoasa>, <Unghi> ]
TurtleUp=??estoas??Sus
TurtleUp.Syntax=[ <??estoasa> ]
Type.Syntax=[ <Obiect> ]
UnicodeToLetter=Unicod??nLiter??
UnicodeToLetter.Syntax=[ <??ntreg> ]
UnicodeToText=Unicod??nText
UnicodeToText.Syntax=[ <List?? ??ntregi> ]
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <Valoare variabil??> ]\n[ <Lower Bound>, <Upper Bound>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Lower Bound>, <Upper Bound>, x, <Boolean Cumulat> ]
Union=Uniune
Union.Syntax=[ <List??>, <List??> ]\n[ <Poligon>, <Poligon> ]
Unique=Unic
Unique.Syntax=[ <List??> ]
UnitOrthogonalVector=VectorUnitatePerpendicular
UnitOrthogonalVector.Syntax=[ <Dreapt??> ]\n[ <Segment> ]\n[ <Vector> ]
UnitOrthogonalVector.Syntax3D=[ <Dreapt??> ]\n[ <Segment> ]\n[ <Vector> ]\n[ <Plan> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vector> ]
UnitVector=VectorUnitate
UnitVector.Syntax=[ <Obiect> ]
UnitVector.SyntaxCAS=[ <Vector> ]
UpdateConstruction=ActualizareConstruc??ie
UpdateConstruction.Syntax=[ ]\n[ <num??r de ori> ]
UpperSum=Sum??Superioar??
UpperSum.Syntax=[ <Func??ie>, <x-valuare ini??iala>, <x-valuare final??>, <Num??r de dreptunghiuri> ]
Variance=Varian????
Variance.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
Vector.Syntax=[ <Punct> ]\n[ <Punct ini??ial>, <Punct final> ]
Vertex=V??rf
Vertex.Syntax=[ <Conic??> ]\n[ <Inequality> ]\n[ <Poligon> ]\n[ <Poligon>, <Index> ]\n[ <Segment>, <Index> ]
VerticalText=TextVertical
VerticalText.Syntax=[ <Text> ]\n[ <Text>, <Punct> ]
Volume=Volum
Volume.Syntax=[ <Corp> ]
Voronoi.Syntax=[ <List?? de puncte> ]
Weibull.Syntax=[ <Form??>, <Scal??>, <Valoare variabil??> ]\n[ <Form??>, <Scal??>, <Valoare variabil??>, <Boolean Cumulat> ]\n[ <Form??>, <Scal??>, x, <Boolean Cumulat> ]
Weibull.SyntaxCAS=[ <Form??>, <Scal??>, <Valoare variabil??> ]
ZMean2Estimate=ZMedie2Estimare
ZMean2Estimate.Syntax=[ <List?? date mostr?? 1>, <List?? date mostr?? 2>, <??1>, <??2>, <Nivel de ??ncredere> ]\n[ <Medie mostr?? 1>, <??1>, <Dimensiune mostr?? 1>, <Medie mostr?? 2>, <??2>, <Dimensiune mostr?? 2>, <Nivel de ??ncredere> ]
ZMean2Test=ZMedie2Test
ZMean2Test.Syntax=[ <List?? date mostr?? 1>, <??1>, <List?? date mostr?? 2>, <??2>, <Coad??> ]\n[ <Medie mostr?? 1>, <??1>, <Dimensiune mostr?? 1>, <Medie mostr?? 2>, <??2>, <Dimensiune mostr?? 2>, <Coad??> ]
ZMeanEstimate=ZMedieEstimare
ZMeanEstimate.Syntax=[ <List?? date mostr??>, <??>, <Nivel de ??ncredere> ]\n[ <Medie mostr??>, <??>, <Dimensiune Mostr??>, <Nivel de ??ncredere> ]
ZMeanTest=ZMedieTest
ZMeanTest.Syntax=[ <List?? date mostr??>, <??>, <Medie ipotetizat??>, <Coad??> ]\n[ <Medie mostr??>, <??>, <Dimensiune Mostr??>, <Medie ipotetizat??>, <Coad??> ]
ZProportion2Estimate=ZPropor??ie2Estimare
ZProportion2Estimate.Syntax=[ <Propor??ie e??antion 1>, <Dimensiune mostr?? 1>, <Propor??ie e??antion 2>, <Dimensiune mostr?? 2>, <Nivel de ??ncredere> ]
ZProportion2Test=ZPropor??ie2Test
ZProportion2Test.Syntax=[ <Propor??ie e??antion 1>, <Dimensiune mostr?? 1>, <Propor??ie e??antion 2>, <Dimensiune mostr?? 2>, <Coad??> ]
ZProportionEstimate=ZPropor??ieEstimare
ZProportionEstimate.Syntax=[ <Propor??ite e??antion>, <Dimensiune Mostr??>, <Nivel de ??ncredere> ]
ZProportionTest=ZPropor??ieTest
ZProportionTest.Syntax=[ <Propor??ite e??antion>, <Dimensiune Mostr??>, <Propor??ie ipotetic??>, <Coad??> ]
Zip.Syntax=[ <expresie>, <Var1>, <List??1>, <Var2>, <List??2>, ... ]
Zipf.Syntax=[ <Num??rul elementelor>, <Exponent> ]\n[ <Num??rul elementelor>, <Exponent>, <Boolean Cumulat> ]\n[ <Num??rul elementelor>, <Exponent>, <Valoare variabil??>, <Boolean Cumulat> ]
Zipf.SyntaxCAS=[ <Num??rul elementelor>, <Exponent>, <Valoare variabil??>, <Boolean Cumulat> ]
ZoomIn=Apropiere
ZoomIn.Syntax=[ ]\n[ <Factor dimensiune> ]\n[ <Factor dimensiune>, <Centru> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=??ndep??rtare
ZoomOut.Syntax=[ <Factor dimensiune> ]\n[ <Factor dimensiune>, <Centru> ]
mad.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
mean.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
nCr.Syntax=[ <Num??r n>, <Num??r r> ]
stdev.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]
stdevp.Syntax=[ <List?? de date raw> ]\n[ <List?? de numere>, <List?? de frecven??e> ]