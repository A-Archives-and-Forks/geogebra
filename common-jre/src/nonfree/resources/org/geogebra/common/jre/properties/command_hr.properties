# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <lista>, <lista>, ... ]
AffineRatio=AfiniOmjer
AffineRatio.Syntax=[ <to??ka>, <to??ka>, <to??ka> ]
Angle=Kut
Angle.Syntax=[ <objekt> ]\n[ <vektor>, <vektor> ]\n[ <pravac>, <pravac> ]\n[ <to??ka>, <Vrh>, <to??ka> ]\n[ <to??ka>, <Vrh>, <kut> ]
Angle.Syntax3D=[ <objekt> ]\n[ <vektor>, <vektor> ]\n[ <pravac>, <pravac> ]\n[ <pravac>, <ravnina> ]\n[ <ravnina>, <ravnina> ]\n[ <to??ka>, <Vrh>, <to??ka> ]\n[ <to??ka>, <Vrh>, <kut> ]\n[ <to??ka>, <to??ka>, <to??ka>, <smjer> ]
AngularBisector=SimetralaKuta
AngularBisector.Syntax=[ <pravac>, <pravac> ]\n[ <to??ka>, <to??ka>, <to??ka> ]
Append=Pripoji
Append.Syntax=[ <lista>, <objekt> ]\n[ <objekt>, <lista> ]
ApplyMatrix=PrimijeniMatricu
ApplyMatrix.Syntax=[ <matrica>, <objekt> ]
Arc=Luk
Arc.Syntax=[ <kru??nica>, <to??ka>, <to??ka> ]\n[ <elipsa>, <to??ka>, <to??ka> ]\n[ <kru??nica>, <vrijednost parametra>, <vrijednost parametra> ]\n[ <elipsa>, <vrijednost parametra>, <vrijednost parametra> ]
AreCollinear=JesuLiKolinearne
AreCollinear.Syntax=[ <to??ka>, <to??ka>, <to??ka> ]
AreConcurrent=JesuLiKonkurentni
AreConcurrent.Syntax=[ <pravac>, <pravac>, <pravac> ]
AreConcyclic=JesuLiKoncikli??ne
AreConcyclic.Syntax=[ <to??ka>, <to??ka>, <to??ka>, <to??ka> ]
AreCongruent=JesuLiSukladni
AreCongruent.Syntax=[ <objekt>, <objekt> ]
AreEqual=JesuLiJednaki
AreEqual.Syntax=[ <objekt>, <objekt> ]
AreParallel=JesuLiUsporedni
AreParallel.Syntax=[ <pravac>, <pravac> ]
ArePerpendicular=JesuLiOkomiti
ArePerpendicular.Syntax=[ <pravac>, <pravac> ]
Area=Povr??ina
Area.Syntax=[ <konika> ]\n[ <mnogokut> ]\n[ <to??ka>, ..., <to??ka> ]
Assume=AkoJe
Assume.SyntaxCAS=[ <uvjet>, <izraz> ]
Asymptote=Asimptota
Asymptote.Syntax=[ <objekt> ]
AttachCopyToView=Prive??iKopijuZaPrikaz
AttachCopyToView.Syntax=[ <objekt>, <grafi??ki prikaz 0|1|2> ]\n[ <objekt>, <grafi??ki prikaz 0|1|2>, <to??ka 1>, <to??ka 2>, <to??ka na ekranu 1>, <to??ka na ekranu 2> ]
Axes=Osi
Axes.Syntax=[ <konika> ]
Axes.Syntax3D=[ <konika> ]\n[ <kvadrika> ]
AxisStepX=RazmakNaOsiX
AxisStepX.Syntax=[ ]
AxisStepY=RazmakNaOsiY
AxisStepY.Syntax=[ ]
BarChart=Stup??astiDijagram
BarChart.Syntax=[ <lista podataka>, <lista frekvencija> ]\n[ <lista neobra??enih podataka>, <??irina stupca>, <faktor vertikalnog skaliranja (opcionalno)> ]\n[ <lista podataka>, <lista frekvencija>, <??irina stupca> ]\n[ <po??etna vrijednost>, <zavr??na vrijednost>, <lista visina> ]\n[ <po??etna vrijednost>, <zavr??na vrijednost>, <izraz>, <varijabla>, <od broja>, <do broja> ]\n[ <po??etna vrijednost>, <zavr??na vrijednost>, <izraz>, <varijabla>, <od broja>, <do broja>, <??irina koraka> ]
Barycenter=CentarMase
Barycenter.Syntax=[ <lista to??aka>, <lista visina> ]
Bernoulli=BernoullijevaRazdioba
Bernoulli.Syntax=[ <vjerojatnost>, <kumulacija - logi??ka vrijednost> ]
BetaDist.Syntax=[ <alfa>, <beta>, <Vrijednost varijable> ]\n[ <alfa>, <beta>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost>  ]\n[ <alfa>, <beta>, x, <kumulacija - logi??ka vrijednost> ]
Binomial=BinomniKoeficijent
Binomial.Syntax=[ <broj n>, <broj r> ]
BinomialDist=BinomnaRazdioba
BinomialDist.Syntax=[ <broj poku??aja>, <Vjerojatnost pogotka> ]\n[ <broj poku??aja>, <Vjerojatnost pogotka>, <kumulacija - logi??ka vrijednost> ]\n[ <broj poku??aja>, <Vjerojatnost pogotka>, <Lista vrijednosti> ]\n[ <broj poku??aja>, <Vjerojatnost pogotka>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
BinomialDist.SyntaxCAS=[ <broj poku??aja>, <Vjerojatnost pogotka>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
Bottom=Dno
Bottom.Syntax=[ <kvadrika> ]
BoxPlot=DijagramPravokutnika
BoxPlot.Syntax=[ <pomak po y-osi>, <skaliranje po y-osi>, <lista neobra??enih podataka> ]\n[ <pomak po y-osi>, <skaliranje po y-osi>, <lista neobra??enih podataka>, <str??e??e vrijednosti - logi??ka vrijednost> ]\n[ <pomak po y-osi>, <skaliranje po y-osi>, <lista podataka>, <lista frekvencija>, <str??e??e vrijednosti - logi??ka vrijednost> ]\n[ <pomak po y-osi>, <skaliranje po y-osi>, <po??etna vrijednost>, <Q1>, <medijan>, <Q3>, <zavr??na vrijednost> ]
Button=Gumb
Button.Syntax=[ ]\n[ <natpis> ]
CASLoaded.Syntax=[]
CFactor=CFaktor
CFactor.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <varijabla> ]
CIFactor=KompleksnaFaktorizacija
CIFactor.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <varijabla> ]
CSolutions=Rje??enjaC
CSolutions.SyntaxCAS=[ <jednad??ba> ]\n[ <jednad??ba>, <varijabla> ]\n[ <lista jednad??bi>, <lista varijabli> ]
CSolve=Rije??iC
CSolve.SyntaxCAS=[ <jednad??ba> ]\n[ <jednad??ba>, <varijabla> ]\n[ <lista jednad??bi>, <lista varijabli> ]
Cauchy=CauchyjevaRazdioba
Cauchy.Syntax=[ <medijan>, <skala>, <Vrijednost varijable> ]\n[ <medijan>, <skala>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost>  ]\n[ <medijan>, <skala>, x, <kumulacija - logi??ka vrijednost> ]
Cauchy.SyntaxCAS=[ <medijan>, <skala>, <Vrijednost varijable> ]
Cell=??elija
Cell.Syntax=[ <stupac>, <redak> ]
CellRange=Raspon??elija
CellRange.Syntax=[ <po??etna ??elija>, <zavr??na ??elija> ]
Center=Sredi??te
Center.Syntax=[ <konika> ]
Center.Syntax3D=[ <konika> ]\n[ <kvadrika> ]
CenterView=CentrirajPrikaz
CenterView.Syntax=[ <sredi??nja to??ka> ]
Centroid=Te??i??te
Centroid.Syntax=[ <mnogokut> ]
CharacteristicPolynomial=Karakteristi??niPolinom
CharacteristicPolynomial.Syntax=[ <matrica> ]
Checkbox=PotvrdniOkvir
Checkbox.Syntax=[ ]\n[ <natpis> ]\n[ <lista> ]\n[ <natpis>, <lista> ]
ChiSquared=HiKvadrat
ChiSquared.Syntax=[ <stupanj slobode>, <Vrijednost varijable> ]\n[ <stupanj slobode>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <stupanj slobode>, x, <kumulacija - logi??ka vrijednost> ]
ChiSquared.SyntaxCAS=[ <stupanj slobode>, <varijabla> ]
ChiSquaredTest=HiKvadratTest
ChiSquaredTest.Syntax=[ <matrica> ]\n[ <lista>, <lista> ]\n[ <matrica>, <matrica> ]
Circle=Kru??nica
Circle.Syntax=[ <to??ka>, <duljina polumjera> ]\n[ <to??ka>, <du??ina> ]\n[ <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <to??ka> ]
Circle.Syntax3D=[ <to??ka>, <duljina polumjera> ]\n[ <to??ka>, <du??ina> ]\n[ <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <to??ka> ]\n[ <pravac>, <to??ka> ]\n[ <to??ka>, <duljina polumjera>, <smjer> ]\n[ <to??ka>, <to??ka>, <smjer> ]
CircleArc=Kru??niLuk
CircleArc.Syntax=[ <sredi??te>, <to??ka>, <to??ka> ]
CircleSector=Kru??niIsje??ak
CircleSector.Syntax=[ <sredi??te>, <to??ka>, <to??ka> ]
CircumcircleArc=OpisaniLuk
CircumcircleArc.Syntax=[ <to??ka>, <to??ka>, <to??ka> ]
CircumcircleSector=Isje??akOpisanogLuka
CircumcircleSector.Syntax=[ <to??ka>, <to??ka>, <to??ka> ]
Circumference=Opseg
Circumference.Syntax=[ <konika> ]
Classes=Razredi
Classes.Syntax=[ <lista podataka>, <broj razreda> ]\n[ <lista podataka>, <po??etak>, <??irina razreda> ]
ClosestPoint=Najbli??aTo??ka
ClosestPoint.Syntax=[ <put>, <to??ka> ]\n[ <pravac>, <pravac> ]
ClosestPointRegion=Najbli??aTo??kaPodru??ja
ClosestPointRegion.Syntax=[ <podru??je>, <to??ka> ]
Coefficients=Koeficijenti
Coefficients.Syntax=[ <polinom> ]\n[ <konika> ]
Coefficients.SyntaxCAS=[ <polinom> ]\n[ <polinom>, <varijabla> ]
Column=Stupac
Column.Syntax=[ <??elija tablice> ]
ColumnName=NazivStupca
ColumnName.Syntax=[ <??elija tablice> ]
Command=Naredba
CommonDenominator=Zajedni??kiNazivnik
CommonDenominator.Syntax=[ <izraz>, <izraz> ]
CompleteSquare=PotpuniKvadrat
CompleteSquare.Syntax=[ <kvadratna funkcija> ]
ComplexRoot=KompleksniKorijen
ComplexRoot.Syntax=[ <polinom> ]
Cone=Sto??ac
Cone.Syntax=[ <kru??nica>, <visina> ]\n[ <to??ka>, <to??ka>, <duljina polumjera> ]\n[ <to??ka>, <vektor>, <kut> ]
ConeInfinite=Beskona??niSto??ac
ConeInfinite.Syntax=[ <to??ka>, <vektor>, <kut> ]\n[ <to??ka>, <to??ka>, <kut> ]\n[ <to??ka>, <pravac>, <kut> ]
Conic=Konika
Conic.Syntax=[ <lista> ]\n[ <to??ka>, <to??ka>, <to??ka>, <to??ka>, <to??ka> ]\n[ <Broj>, <Broj>, <Broj>, <Broj>, <Broj>, <Broj> ]
ConstructionStep=KorakKonstrukcije
ConstructionStep.Syntax=[ ]\n[ <objekt> ]
ContingencyTable=TablicaSlu??ajeva
ContingencyTable.Syntax=[ <lista tekstova>, <lista tekstova> ]\n[ <lista tekstova>, <lista tekstova>, <opcije> ]\n[ <lista tekstova>, <lista tekstova>, <tablica frekvencije> ]\n[ <lista tekstova>, <lista tekstova>, <tablica frekvencije> , <opcije> ]
ContinuedFraction=Veri??niRazlomak
ContinuedFraction.Syntax=[ <Broj> ]\n[ <Broj>, <nivo> ]\n[ <Broj>, <nivo>, <Skra??eni prikaz true|false> ]
ConvexHull=KonveksnaLjuska
ConvexHull.Syntax=[ <lista to??aka> ]
CopyFreeObject=KopirajNezavisniObjekt
CopyFreeObject.Syntax=[ <objekt> ]
Corner=Ugao
Corner.Syntax=[ <broj ugla> ]\n[ <slika>, <broj ugla> ]\n[ <tekst>, <broj ugla> ]\n[ <grafi??ki prikaz>, <broj ugla> ]
CountIf=UvjetnoPrebrajanje
CountIf.Syntax=[ <uvjet>, <lista> ]\n[ <uvjet>, <varijabla>, <lista> ]
Covariance=Kovarijanca
Covariance.Syntax=[ <lista to??aka> ]\n[ <lista brojeva>, <lista brojeva> ]
Cross=VektorskiUmno??ak
Cross.Syntax=[ <vektor>, <vektor> ]
CrossRatio=DvostrukiOmjer
CrossRatio.Syntax=[ <to??ka>, <to??ka>, <to??ka>, <to??ka> ]
Cube=Kocka
Cube.Syntax=[ <Kvadrat> ]\n[ <to??ka>, <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <smjer> ]
Cubic=KubnaKrivuljaTrokuta
Cubic.Syntax=[ <to??ka>, <to??ka>, <to??ka>, <Broj> ]
Curvature=Zakrivljenost
Curvature.Syntax=[ <to??ka>, <objekt> ]
CurvatureVector=VektorZakrivljenosti
CurvatureVector.Syntax=[ <to??ka>, <objekt> ]
CurveCartesian=Krivulja
CurveCartesian.Syntax=[ <izraz>, <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
CurveCartesian.Syntax3D=[ <izraz>, <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]\n[ <izraz>, <izraz>, <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
Cylinder=Valjak
Cylinder.Syntax=[ <kru??nica>, <visina> ]\n[ <to??ka>, <to??ka>, <duljina polumjera> ]
CylinderInfinite=Beskona??niValjak
CylinderInfinite.Syntax=[ <pravac>, <duljina polumjera> ]\n[ <to??ka>, <vektor>, <duljina polumjera> ]\n[ <to??ka>, <to??ka>, <duljina polumjera> ]
DataFunction=FunkcijaPodataka
DataFunction.Syntax=[ <lista brojeva>, <lista brojeva> ]
Defined=Definiranost
Defined.Syntax=[ <objekt> ]
Degree=Stupanj
Degree.Syntax=[ <polinom> ]
Degree.SyntaxCAS=[ <polinom> ]\n[ <polinom>, <varijabla> ]
DelauneyTriangulation=DelaunayovaTriangulacija
DelauneyTriangulation.Syntax=[ <lista to??aka> ]
Delete=Izbri??i
Delete.Syntax=[ <objekt> ]
Denominator=Nazivnik
Denominator.Syntax=[ <Broj> ]\n[ <funkcija> ]
Denominator.SyntaxCAS=[ <izraz> ]
DensityPlot=GrafGusto??e
Derivative=Derivacija
Derivative.Syntax=[ <funkcija> ]\n[ <krivulja> ]\n[ <funkcija>, <Broj> ]\n[ <funkcija>, <varijabla> ]\n[ <krivulja>, <Broj> ]\n[ <funkcija>, <varijabla>, <Broj> ]
Derivative.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <varijabla> ]\n[ <izraz>, <varijabla>, <Broj> ]
Determinant=Determinanta
Determinant.Syntax=[ <matrica> ]
Diameter=KonjugiraniPromjer
Diameter.Syntax=[ <vektor>, <konika> ]\n[ <pravac>, <konika> ]
Difference=Razlika
Difference.Syntax=[ <mnogokut>, <mnogokut> ]
Dilate=Rastezanje
Dilate.Syntax=[ <objekt>, <faktor rastezanja> ]\n[ <objekt>, <faktor rastezanja>, <sredi??te rastezanja> ]
Dimension=Dimenzija
Dimension.Syntax=[ <objekt> ]
Direction=VektorSmjera
Direction.Syntax=[ <pravac> ]
Directrix=Ravnalica
Directrix.Syntax=[ <konika> ]
Distance=Udaljenost
Distance.Syntax=[ <to??ka>, <objekt> ]\n[ <pravac>, <pravac> ]\n[ <ravnina>, <ravnina> ]
Distance.SyntaxCAS=[ <to??ka>, <objekt> ]
Div=CjelobrojnoDijeljenje
Div.Syntax=[ <broj djeljenik>, <broj djelitelj> ]\n[ <polinom djeljenik>, <polinom djelitelj> ]
Division=Dijeljenje
Division.Syntax=[ <broj djeljenik>, <broj djelitelj> ]\n[ <polinom djeljenik>, <polinom djelitelj> ]
Divisors=Djelitelji
Divisors.Syntax=[ <Broj> ]
DivisorsList=ListaDjelitelja
DivisorsList.Syntax=[ <Broj> ]
DivisorsSum=ZbrojDjelitelja
DivisorsSum.Syntax=[ <Broj> ]
Dodecahedron=Dodekaedar
Dodecahedron.Syntax=[ <pravilni peterokut> ]\n[ <to??ka>, <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <smjer> ]
Dot=SkalarniUmno??ak
Dot.Syntax=[ <vektor>, <vektor> ]
DotPlot=DijagramTo??aka
DotPlot.Syntax=[ <lista neobra??enih podataka>, <stog susjednih to??aka (opcionalno)>, <faktor skaliranja (opcionalno)>]
DynamicCoordinates=Dinami??neKoordinate
DynamicCoordinates.Syntax=[ <to??ka>, <x koordinata>, <y koordinata> ]\n[ <to??ka>, <x koordinata>, <y koordinata>, <z koordinata> ]
Eccentricity=Ekscentricitet
Eccentricity.Syntax=[ <konika> ]
Eigenvalues=SvojstveneVrijednosti
Eigenvalues.SyntaxCAS=[ <matrica> ]
Eigenvectors=SvojstveniVektori
Eigenvectors.SyntaxCAS=[ <matrica> ]
Element.Syntax=[ <lista>, <pozicija elementa> ]\n[ <matrica>, <redak>, <stupac> ]\n[ <lista>, <indeks1>, <indeks2>, ... ]
Element.SyntaxCAS=[ <lista>, <pozicija elementa> ]\n[ <matrica>, <redak>, <stupac> ]
Eliminate=Eliminiraj
Eliminate.Syntax=[ <lista polinoma>, <lista varijabli> ]
Ellipse=Elipsa
Ellipse.Syntax=[ <??ari??te>, <??ari??te>, <glavna poluos> ]\n[ <??ari??te>, <??ari??te>, <du??ina> ]\n[ <??ari??te>, <??ari??te>, <to??ka> ]
Ends=Baze
Ends.Syntax=[ <kvadrika> ]
Envelope=Ovojnica
Envelope.Syntax=[ <put>, <to??ka> ]
Erlang=ErlangovaRazdioba
Erlang.Syntax=[ <oblik>, <Kamatna stopa>, <Vrijednost varijable> ]\n[ <oblik>, <Kamatna stopa>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <oblik>, <Kamatna stopa>, x, <kumulacija - logi??ka vrijednost> ]
Evaluate=Izra??unaj
Excentricity=LinearniEkscentricitet
Excentricity.Syntax=[ <konika> ]
Execute=Izvr??i
Execute.Syntax=[ <lista tekstova> ]\n[ <lista tekstova>, <parametar>, <parametar>, ... ]
Expand=Pro??iri
Expand.Syntax=[ <izraz> ]
Exponential=EksponencijalnaRazdioba
Exponential.Syntax=[ <lambda>, <Vrijednost varijable> ]\n[ <lambda>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <lambda>, x, <kumulacija - logi??ka vrijednost> ]
Exponential.SyntaxCAS=[ <lambda>, <Vrijednost varijable> ]
ExportImage=IzvozSlike
ExportImage.Syntax=[ <svojstvo>, <vrijednost>, <svojstvo>, <vrijednost>, ... ]
ExtendedGCD=EuklidovAlgoritam
ExtendedGCD.Syntax=[ <cijeli broj>, <cijeli broj>]\n[ <polinom>, <polinom>]
Extremum=Ekstrem
Extremum.Syntax=[ <polinom> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
Extremum.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
FDistribution=FRazdioba
FDistribution.Syntax=[ <brojnik stupnja slobode>, <nazivnik stupnja slobode>, <Vrijednost varijable> ]\n[ <brojnik stupnja slobode>, <nazivnik stupnja slobode>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <brojnik stupnja slobode>, <nazivnik stupnja slobode>, x, <kumulacija - logi??ka vrijednost> ]
FDistribution.SyntaxCAS=[ <brojnik stupnja slobode>, <nazivnik stupnja slobode>, <Vrijednost varijable> ]
Factor=Faktoriziraj
Factor.Syntax=[ <polinom> ]
Factor.SyntaxCAS=[ <Broj> ]\n[ <polinom> ]\n[ <izraz>, <varijabla> ]
Factors=Faktori
Factors.Syntax=[ <polinom> ]\n[ <Broj> ]
FillCells=Puni??elije
FillCells.Syntax=[ <raspon ??elija>, <objekt> ]\n[ <??elija>, <lista> ]\n[ <??elija>, <matrica> ]
FillColumn=PuniStupac
FillColumn.Syntax=[ <stupac>, <lista> ]
FillRow=PuniRedak
FillRow.Syntax=[ <redak>, <lista> ]
First=Po??etni
First.Syntax=[ <lista> ]\n[ <tekst> ]\n[ <lista>, <broj elemenata> ]\n[ <tekst>, <broj elemenata> ]\n[ <lokus>, <broj elemenata> ]
First.SyntaxCAS=[ <lista> ]\n[ <lista>, <broj elemenata> ]
FirstAxis=GlavnaOs
FirstAxis.Syntax=[ <konika> ]
FirstAxisLength=GlavnaPoluos
FirstAxisLength.Syntax=[ <konika> ]
Fit=Prilagodba
Fit.Syntax=[ <lista to??aka>, <lista funkcija> ]\n[ <lista to??aka>, <funkcija> ]
FitExp=PrilagodbaEksponencijalna
FitExp.Syntax=[ <lista to??aka> ]
FitGrowth=PrilagodbaRasta
FitGrowth.Syntax=[ <lista to??aka> ]
FitImplicit=PrilagodbaImplicitna
FitImplicit.Syntax=[ <lista to??aka>, <poredak> ]
FitLineX=PrilagodbaLinearnaX
FitLineX.Syntax=[ <lista to??aka> ]
FitLineY=PrilagodbaLinearna
FitLineY.Syntax=[ <lista to??aka> ]
FitLog=PrilagodbaLogaritamska
FitLog.Syntax=[ <lista to??aka> ]
FitLogistic=PrilagodbaLogisti??ka
FitLogistic.Syntax=[ <lista to??aka> ]
FitPoly=PrilagodbaPolinomna
FitPoly.Syntax=[ <lista to??aka>, <stupanj polinoma> ]\n[ <prostoru??na funkcija>, <stupanj polinoma> ]
FitPow=PrilagodbaPotencijska
FitPow.Syntax=[ <lista to??aka> ]
FitSin=PrilagodbaSinusna
FitSin.Syntax=[ <lista to??aka> ]
Flatten=Zaravnaj
Flatten.Syntax=[ <lista> ]
Focus=??ari??te
Focus.Syntax=[ <konika> ]
FractionText=TekstRazlomkom
FractionText.Syntax=[ <Broj> ]\n[ <to??ka> ]\n[ <Broj>, <Jedan razlomak> ]
Frequency=Frekvencija
Frequency.Syntax=[ <lista neobra??enih podataka> ]\n[ <kumulacija - logi??ka vrijednost>, <lista neobra??enih podataka> ]\n[ <lista granica razreda>, <lista neobra??enih podataka> ]\n[ <lista tekstova>, <lista tekstova> ]\n[ <kumulacija - logi??ka vrijednost>, <lista granica razreda>, <lista neobra??enih podataka> ]\n[ <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)> ]\n[ <kumulacija - logi??ka vrijednost>, <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)> ]
FrequencyPolygon=PoligonFrekvencija
FrequencyPolygon.Syntax=[ <lista granica razreda>, <lista visina> ]\n[ <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u - logi??ka vrijednost>, <faktor gusto??e (opcionalno)> ]\n[ <kumulacija - logi??ka vrijednost>, <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u - logi??ka vrijednost>, <faktor gusto??e (opcionalno)> ]
FrequencyTable=TablicaFrekvencija
FrequencyTable.Syntax=[ <lista neobra??enih podataka>, <faktor skaliranja (opcionalno)> ]\n[ <kumulacija - logi??ka vrijednost>, <lista neobra??enih podataka> ]\n[ <lista granica razreda>, <lista neobra??enih podataka> ]\n[ <kumulacija - logi??ka vrijednost>, <lista granica razreda>, <lista neobra??enih podataka> ]\n[ <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)> ]\n[ <kumulacija - logi??ka vrijednost>, <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)> ]
FromBase=IzBaze
FromBase.Syntax=[ <broj kao tekst>, <baza brojevnog sustava> ]
Function=Funkcija
Function.Syntax=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <lista brojeva> ]
Function.Syntax3D=[ <lista brojeva> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <izraz>, <varijabla 1>, <po??etna vrijednost>, <zavr??na vrijednost>, <varijabla 2>, <po??etna vrijednost>, <zavr??na vrijednost> ]
Function.SyntaxCAS=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
FutureValue=Budu??aVrijednost
FutureValue.Syntax=[ <Kamatna stopa>, <broj obroka>, <iznos>, <trenutna vrijednost (opcionalno)>, <tip (opcionalno)> ]
GCD=NZD
GCD.Syntax=[ <lista brojeva> ]\n[ <Broj>, <Broj> ]
GCD.SyntaxCAS=[ <lista brojeva> ]\n[ <lista polinoma> ]\n[ <Broj>, <Broj> ]\n[ <polinom>, <polinom> ]
Gamma=GamaRazdioba
Gamma.Syntax=[ <alfa>, <beta>, <Vrijednost varijable> ]\n[ <alfa>, <beta>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost>  ]\n[ <alfa>, <beta>, x, <kumulacija - logi??ka vrijednost> ]
Gamma.SyntaxCAS=[ <alfa>, <beta>, <Vrijednost varijable> ]
GeometricMean=GeometrijskaSredina
GeometricMean.Syntax=[ <lista brojeva> ]
GetTime=VrijemeSada
GetTime.Syntax=[]\n[ <format> ]
GroebnerDegRevLex.Syntax=[ <lista polinoma> ]\n[ <lista polinoma>, <lista varijabli> ]
GroebnerLex.Syntax=[ <lista polinoma> ]\n[ <lista polinoma>, <lista varijabli> ]
GroebnerLexDeg.Syntax=[ <lista polinoma> ]\n[ <lista polinoma>, <lista varijabli> ]
HarmonicMean=HarmonijskaSredina
HarmonicMean.Syntax=[ <lista brojeva> ]
Height=Visina
Height.Syntax=[ <tijelo> ]
HideLayer=SakrijSloj
HideLayer.Syntax=[ <Broj> ]
Histogram.Syntax=[ <lista granica razreda>, <lista visina> ]\n[ <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)> ]\n[ <kumulacija - logi??ka vrijednost>, <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)> ]
HistogramRight=HistogramDesni
HistogramRight.Syntax=[ <lista granica razreda>, <lista visina> ]\n[ <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)>  ]\n[ <kumulacija - logi??ka vrijednost>, <lista granica razreda>, <lista neobra??enih podataka>, <koristi gusto??u>, <faktor gusto??e (opcionalno)> ]
HyperGeometric=HipergeometrijskaRazdioba
HyperGeometric.Syntax=[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka> ]\n[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <kumulacija - logi??ka vrijednost> ]\n[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
HyperGeometric.SyntaxCAS=[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
Hyperbola=Hiperbola
Hyperbola.Syntax=[ <??ari??te>, <??ari??te>, <glavna poluos> ]\n[ <??ari??te>, <??ari??te>, <du??ina> ]\n[ <??ari??te>, <??ari??te>, <to??ka> ]
IFactor=IracionalnaFaktorizacija
IFactor.Syntax=[ <polinom> ]
IFactor.SyntaxCAS=[ <izraz> ]
Icosahedron=Ikosaedar
Icosahedron.Syntax=[ <jednakostrani??ni trokut> ]\n[ <to??ka>, <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <smjer> ]
Identity=Jedini??naMatrica
Identity.Syntax=[ <Broj> ]
If=Ako
If.Syntax=[ <uvjet>, <onda> ]\n[ <uvjet>, <onda>, <ina??e> ]
ImplicitCurve=ImplicitnaKrivulja
ImplicitCurve.Syntax=[ <lista to??aka> ]\n[ <f(x, y)> ]
ImplicitDerivative=ImplicitnoDeriviranje
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <izraz>, <zavisna varijabla>, <nezavisna varijabla> ]
Incircle=UpisanaKru??nica
Incircle.Syntax=[ <to??ka>, <to??ka>, <to??ka> ]
IndexOf=IndeksOd
IndexOf.Syntax=[ <objekt>, <lista> ]\n[ <tekst>, <tekst> ]\n[ <objekt>, <lista>, <po??etni indeks> ]\n[ <tekst>, <tekst>, <po??etni indeks> ]
Insert=Umetni
Insert.Syntax=[ <lista>, <lista>, <pozicija> ]\n[ <objekt>, <lista>, <pozicija> ]
Integral.Syntax=[ <funkcija> ]\n[ <funkcija>, <varijabla> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x>, <izvr??i - logi??ka vrijednost> ]
Integral.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <varijabla> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
IntegralBetween=IntegralIzme??u
IntegralBetween.Syntax=[ <funkcija>, <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x>, <izvr??i - logi??ka vrijednost> ]
IntegralBetween.SyntaxCAS=[ <funkcija>, <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <funkcija>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
IntegralSymbolic=IntegralNeodre??eni
IntegralSymbolic.Syntax=[ <funkcija> ]\n[ <funkcija>, <varijabla> ]
InteriorAngles=UnutarnjiKutovi
InteriorAngles.Syntax=[ <mnogokut> ]
Intersect=Sjeci??te
Intersect.Syntax=[ <objekt>, <objekt> ]\n[ <objekt>, <objekt>, <redni broj sjeci??ta> ]\n[ <objekt>, <objekt>, <po??etna to??ka> ]\n[ <funkcija>, <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <krivulja 1>, <krivulja 2>, <parametar 1>, <parametar 2> ]
Intersect.SyntaxCAS=[ <funkcija>, <funkcija> ]
IntersectConic=Presje??naKonika
IntersectConic.Syntax=[ <ravnina>, <kvadrika> ]\n[ <kvadrika>, <kvadrika> ]
IntersectPath=Presje??niLik
IntersectPath.Syntax=[ <pravac>, <mnogokut> ]\n[ <mnogokut>, <mnogokut> ]
IntersectPath.Syntax3D=[ <pravac>, <mnogokut> ]\n[ <mnogokut>, <mnogokut> ]\n[ <ravnina>, <mnogokut> ]\n[ <ravnina>, <kvadrika> ]
Intersection=Presjek
Intersection.Syntax=[ <lista>, <lista> ]
InverseBeta=InverznaBeta
InverseBeta.Syntax=[ <alfa>, <beta>, <vjerojatnost> ]
InverseBinomial=InverznaBinomnaRazdioba
InverseBinomial.Syntax=[ <broj poku??aja>, <Vjerojatnost pogotka>, <Kumulativna vjerojatost> ]
InverseBinomialMinimumTrials=InverznaBinomialnaNajmanjePoku??aja
InverseBinomialMinimumTrials.Syntax=[ <Kumulativna vjerojatost>, <Vjerojatnost pogotka>, <broj doga??aja> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Kumulativna vjerojatost>, <Vjerojatnost pogotka>, <broj doga??aja> ]
InverseCauchy=InverznaCauchyjevaRazdioba
InverseCauchy.Syntax=[ <medijan>, <skala>, <vjerojatnost> ]
InverseChiSquared=InverzniHiKvadrat
InverseChiSquared.Syntax=[ <stupanj slobode>, <vjerojatnost> ]
InverseExponential=InverznaEksponencijalnaRazdioba
InverseExponential.Syntax=[ <lambda>, <vjerojatnost> ]
InverseFDistribution=InverznaFRazdioba
InverseFDistribution.Syntax=[ <brojnik stupnja slobode>, <nazivnik stupnja slobode>, <vjerojatnost> ]
InverseGamma=InverznaGamaRazdioba
InverseGamma.Syntax=[ <alfa>, <beta>, <vjerojatnost> ]
InverseHyperGeometric=InverznaHipergeometrijskaRazdioba
InverseHyperGeometric.Syntax=[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <vjerojatnost> ]
InverseLaplace=InverzniLaplace
InverseLaplace.Syntax=[ <funkcija> ]\n[ <funkcija>, <varijabla> ]\n[ <funkcija>, <varijabla>, <varijabla> ]
InverseLogNormal=InverznaLogaritamskaNormalnaRazdioba
InverseLogNormal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <vjerojatnost> ]
InverseLogistic=InverznaLogisti??kaRazdioba
InverseLogistic.Syntax=[ <o??ekivanje>, <skala>, <vjerojatnost> ]
InverseNormal=InverznaNormalnaRazdioba
InverseNormal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <Kumulativna vjerojatost> ]
InversePascal=InverznaPascalovaRazdioba
InversePascal.Syntax=[ <n>, <p>, <vjerojatnost> ]
InversePoisson=InverznaPoissonovaRazdioba
InversePoisson.Syntax=[ <o??ekivanje>, <vjerojatnost> ]
InverseTDistribution=InverznaTRazdioba
InverseTDistribution.Syntax=[ <stupanj slobode>, <vjerojatnost> ]
InverseWeibull=InverznaWeibullovaRazdioba
InverseWeibull.Syntax=[ <oblik>, <skala>, <vjerojatnost> ]
InverseZipf=InverzniZipf
InverseZipf.Syntax=[ <broj elemenata>, <eksponent>, <vjerojatnost> ]
Invert=Inverz
Invert.Syntax=[ <matrica> ]\n[ <funkcija> ]
IsFactored=JeLiFaktoriziran
IsFactored.Syntax=[ <polinom> ]
IsInRegion=JeLiUPodru??ju
IsInRegion.Syntax=[ <to??ka>, <podru??je> ]
IsInteger=JeLiCijeliBroj
IsInteger.Syntax=[ <Broj> ]
IsPrime=JeLiProst
IsPrime.Syntax=[ <Broj> ]
IsTangent=JeLiTangenta
IsTangent.Syntax=[ <pravac>, <konika> ]
IsVertexForm=JeTjemeniOblik
IsVertexForm.Syntax=[ <funkcija> ]
Iteration=Iteracija
Iteration.Syntax=[ <funkcija>, <po??etna vrijednost>, <broj iteracija> ]\n[ <izraz>, <varijabla>, <po??etna vrijednost>, <broja??> ]
IterationList=IteracijskaLista
IterationList.Syntax=[ <funkcija>, <po??etna vrijednost>, <broj iteracija> ]\n[ <izraz>, <varijabla>, <po??etna vrijednost>, <broja??> ]
IterationList.SyntaxCAS=[ <funkcija>, <po??etna vrijednost>, <broj iteracija> ]
Join=Spoji
Join.Syntax=[ <lista listi> ]\n[ <lista>, <lista>, ... ]
JordanDiagonalization=JordanovaDijagonalizacija
JordanDiagonalization.SyntaxCAS=[ <matrica> ]
KeepIf=UvjetnoZadr??avanje
KeepIf.Syntax=[ <uvjet>, <lista> ]\n[ <uvjet>, <varijabla>, <lista> ]
LCM=NZV
LCM.Syntax=[ <lista brojeva> ]\n[ <Broj>, <Broj> ]
LCM.SyntaxCAS=[ <lista brojeva> ]\n[ <lista polinoma> ]\n[ <Broj>, <Broj> ]\n[ <polinom>, <polinom> ]
LUDecomposition=LUDekompozicija
LUDecomposition.Syntax=[ <matrica> ]
LaTeX=TekstFormulom
LaTeX.Syntax=[ <objekt> ]\n[ <objekt>, <zamjena varijabli - logi??ka vrijednost> ]\n[ <objekt>, <zamjena varijabli - logi??ka vrijednost>, <poka??i naziv ??? logi??ka vrijednost> ]
Laplace.Syntax=[ <funkcija> ]\n[ <funkcija>, <varijabla> ]\n[ <funkcija>, <varijabla>, <varijabla> ]
Last=Posljednji
Last.Syntax=[ <lista> ]\n[ <tekst> ]\n[ <lista>, <broj elemenata> ]\n[ <tekst>, <broj elemenata> ]
Last.SyntaxCAS=[ <lista> ]\n[ <lista>, <broj elemenata> ]
LeftSide=LijevaStrana
LeftSide.Syntax=[ <jednad??ba> ]
LeftSide.SyntaxCAS=[ <jednad??ba> ]\n[ <lista jednad??bi> ]\n[ <lista jednad??bi>, <indeks> ]
LeftSum=LijevaSuma
LeftSum.Syntax=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x>, <broj pravokutnika> ]
Length=Duljina
Length.Syntax=[ <objekt> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <po??etna to??ka>, <zavr??na to??ka> ]\n[ <krivulja>, <po??etna vrijednost t>, <zavr??na vrijednost t> ]\n[ <krivulja>, <po??etna to??ka>, <zavr??na to??ka> ]
Length.SyntaxCAS=[ <lista> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <varijabla>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
LetterToUnicode=UnikodZnaka
LetterToUnicode.Syntax=[ <znak> ]
Limit=Limes
Limit.Syntax=[ <funkcija>, <vrijednost> ]
Limit.SyntaxCAS=[ <izraz>, <vrijednost> ]\n[ <izraz>, <varijabla>, <vrijednost> ]
LimitAbove=LimesSdesna
LimitAbove.Syntax=[ <funkcija>, <vrijednost> ]
LimitAbove.SyntaxCAS=[ <izraz>, <vrijednost> ]\n[ <izraz>, <varijabla>, <vrijednost> ]
LimitBelow=LimesSlijeva
LimitBelow.Syntax=[ <funkcija>, <vrijednost> ]
LimitBelow.SyntaxCAS=[ <izraz>, <vrijednost> ]\n[ <izraz>, <varijabla>, <vrijednost> ]
Line=Pravac
Line.Syntax=[ <to??ka>, <to??ka> ]\n[ <to??ka>, <usporedni pravac> ]\n[ <to??ka>, <vektor smjera> ]
LineBisector=SimetralaDu??ine
LineBisector.Syntax=[ <du??ina> ]\n[ <to??ka>, <to??ka> ]
LineBisector.Syntax3D=[ <du??ina> ]\n[ <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <smjer> ]
LineGraph=LinijskiGraf
LineGraph.Syntax=[ <Lista x koordinata>, <Lista y koordinata> ]
Locus=Lokus
Locus.Syntax=[ <to??ka koja odre??uje crtu lokusa>, <to??ka> ]\n[ <to??ka koja odre??uje crtu lokusa>, <kliza??> ]\n[ <polje nagiba>, <to??ka> ]\n[ <f(x, y)>, <to??ka> ]
LocusEquation=Jednad??baLokusa
LocusEquation.Syntax=[ <lokus> ]\n[ <to??ka lokusa>, <gibaju??a to??ka> ]\n[ <logi??ki izraz>, <gibaju??a to??ka> ]
LogNormal=LogaritamskaNormalnaRazdioba
LogNormal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <Vrijednost varijable> ]\n[ <o??ekivanje>, <standardna devijacija>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost>  ]\n[ <o??ekivanje>, <standardna devijacija>, x, <kumulacija - logi??ka vrijednost> ]
Logistic=Logisti??kaRazdioba
Logistic.Syntax=[ <o??ekivanje>, <skala>, <Vrijednost varijable> ]\n[ <o??ekivanje>, <skala>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost>  ]\n[ <o??ekivanje>, <skala>, x, <kumulacija - logi??ka vrijednost> ]
LowerSum=DonjaSuma
LowerSum.Syntax=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x>, <broj pravokutnika> ]
MAD=SAD
MatrixPlot=Matri??niGraf
MatrixRank=RangMatrice
MatrixRank.Syntax=[ <matrica> ]
Max=Maksimum
Max.Syntax=[ <interval> ]\n[ <Broj>, <Broj> ]\n[ <lista> ]\n[ <lista podataka>, <lista frekvencija> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
Max.SyntaxCAS=[ <lista> ]\n[ <interval> ]\n[ <Broj>, <Broj> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <lista podataka>, <lista frekvencija> ]
Maximize=Maksimiziraj
Maximize.Syntax=[ <zavisan broj>, <nezavisan broj> ]\n[ <zavisan broj>, <to??ka na putanji> ]
Mean=Aritmeti??kaSredina
Mean.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
MeanX=Aritmeti??kaSredinaX
MeanX.Syntax=[ <lista to??aka> ]
MeanY=Aritmeti??kaSredinaY
MeanY.Syntax=[ <lista to??aka> ]
Median=Medijan
Median.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
Median.SyntaxCAS=[ <lista brojeva> ]
Midpoint=Polovi??te
Midpoint.Syntax=[ <du??ina> ]\n[ <konika> ]\n[ <interval> ]\n[ <to??ka>, <to??ka> ]
Min=Minimum
Min.Syntax=[ <interval> ]\n[ <Broj>, <Broj> ]\n[ <lista> ]\n[ <lista podataka>, <lista frekvencija> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
Min.SyntaxCAS=[ <lista> ]\n[ <interval> ]\n[ <Broj>, <Broj> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <lista podataka>, <lista frekvencija> ]
MinimalPolynomial=MinimalniPolinom
MinimalPolynomial.Syntax=[ <matrica> ]
Minimize=Minimiziraj
Minimize.Syntax=[ <zavisan broj>, <nezavisan broj> ]\n[ <zavisan broj>, <to??ka na putanji> ]
MinimumSpanningTree=NajmanjeRazgranatoStablo
MinimumSpanningTree.Syntax=[ <lista to??aka> ]
Mirror=Zrcaljenje
Mirror.Syntax=[ <objekt>, <to??ka> ]\n[ <objekt>, <pravac> ]\n[ <objekt>, <kru??nica> ]
Mirror.Syntax3D=[ <objekt>, <to??ka> ]\n[ <objekt>, <pravac> ]\n[ <objekt>, <ravnina> ]\n[ <objekt>, <kru??nica> ]
MixedNumber=Mje??ovitiRazlomak
MixedNumber.SyntaxCAS=[ <Broj> ]
Mod=OstatakDijeljenja
Mod.Syntax=[ <broj djeljenik>, <broj djelitelj> ]\n[ <polinom djeljenik>, <polinom djelitelj> ]
Mode=Naj??e????aVrijednost
Mode.Syntax=[ <lista brojeva> ]
ModularExponent=ModularnoPotenciranje
ModularExponent.Syntax=[ <Broj>, <Broj>, <Broj> ]
NDerivative=DerivacijaN
NDerivative.Syntax=[ <funkcija> ]\n[ <funkcija>, <poredak> ]
NIntegral.Syntax=[ <funkcija> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <po??etna vrijednost x>, <Start y-Value>, <zavr??na vrijednost x> ]
NIntegral.SyntaxCAS=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]\n[ <funkcija>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
NInvert=NInverzna
NInvert.Syntax=[ <funkcija> ]
NSolutions=NRje??enja
NSolutions.Syntax=[ <jednad??ba> ]
NSolutions.SyntaxCAS=[ <jednad??ba> ]\n[ <jednad??ba>, <varijabla> ]\n[ <jednad??ba>, <varijabla = po??etna vrijednost> ]\n[ <lista jednad??bi>, <lista varijabli> ]
NSolve=NRije??i
NSolve.Syntax=[ <jednad??ba> ]
NSolve.SyntaxCAS=[ <jednad??ba> ]\n[ <jednad??ba>, <varijabla> ]\n[ <jednad??ba>, <varijabla = po??etna vrijednost> ]\n[ <lista jednad??bi>, <lista varijabli> ]
NSolveODE=NRije??iODJ
NSolveODE.Syntax=[ <lista derivacija>, <po??etna x-koordinata>, <lista po??etnih y-koordinata>, <krajnja x-koordinata> ]
Name=Naziv
Name.Syntax=[ <objekt> ]
Net=Mre??a
Net.Syntax=[ <poliedar>, <Broj> ]\n[ <poliedar>, <Broj>, <strana>, <brid>, <brid>, ... ]
NextPrime=Sljede??iProstiBroj
NextPrime.Syntax=[ <Broj> ]
Normal=NormalnaRazdioba
Normal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <Vrijednost varijable> ]\n[ <o??ekivanje>, <standardna devijacija>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <o??ekivanje>, <standardna devijacija>, x, <kumulacija - logi??ka vrijednost> ]
NormalQuantilePlot=GrafKvantilaNormalneRazdiobe
NormalQuantilePlot.Syntax=[ <lista neobra??enih podataka> ]
Normalize=Normaliziraj
Normalize.Syntax=[ <lista brojeva> ]\n[ <lista to??aka> ]
Numerator=Brojnik
Numerator.Syntax=[ <Broj> ]\n[ <funkcija> ]
Numerator.SyntaxCAS=[ <izraz> ]
Numeric=Aproksimacija
Numeric.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <broj zna??ajnih znamenki> ]
Object=Objekt
Object.Syntax=[ <naziv objekta kao tekst> ]
Octahedron=Oktaedar
Octahedron.Syntax=[ <jednakostrani??ni trokut> ]\n[ <to??ka>, <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <smjer> ]
Ordinal=RedniBroj
Ordinal.Syntax=[ <cijeli broj> ]
OrdinalRank=ListaRednihBrojeva
OrdinalRank.Syntax=[ <lista> ]
OrthogonalLine=Okomica
OrthogonalLine.Syntax=[ <to??ka>, <pravac> ]\n[ <to??ka>, <du??ina> ]\n[ <to??ka>, <vektor> ]
OrthogonalLine.Syntax3D=[ <to??ka>, <pravac> ]\n[ <to??ka>, <du??ina> ]\n[ <to??ka>, <vektor> ]\n[ <to??ka>, <ravnina> ]\n[ <pravac>, <pravac> ]\n[ <to??ka>, <smjer>, <smjer> ]\n[ <to??ka>, <pravac>, <Kontekst> ]
OrthogonalPlane=OkomitaRavnina
OrthogonalPlane.Syntax=[ <to??ka>, <pravac> ]\n[ <to??ka>, <vektor> ]
OrthogonalVector=OkomitVektor
OrthogonalVector.Syntax=[ <pravac> ]\n[ <du??ina> ]\n[ <vektor> ]
OrthogonalVector.Syntax3D=[ <pravac> ]\n[ <du??ina> ]\n[ <vektor> ]\n[ <ravnina> ]
OrthogonalVector.SyntaxCAS=[ <vektor> ]
OsculatingCircle=Kru??nicaZakrivljenosti
OsculatingCircle.Syntax=[ <to??ka>, <objekt> ]
PMCC=KoeficijentKorelacije
PMCC.Syntax=[ <lista to??aka> ]\n[ <Lista x koordinata>, <Lista y koordinata> ]
Pan=PomakPogleda
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <to??ka>, <pravac> ]
Parameter=Parametar
Parameter.Syntax=[ <parabola> ]
ParametricDerivative=ParametarskaDerivacija
ParametricDerivative.Syntax=[ <krivulja> ]
ParseToFunction=Ra????laniNaFunkciju
ParseToFunction.Syntax=[ <funkcija>, <niz znakova> ]
ParseToNumber=Ra????laniNaBroj
ParseToNumber.Syntax=[ <Broj>, <niz znakova> ]
PartialFractions=ParcijalniRazlomci
PartialFractions.Syntax=[ <funkcija> ]
PartialFractions.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <varijabla> ]
Pascal=PascalovaRazdioba
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <kumulacija - logi??ka vrijednost> ]\n[ <n>, <p>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
PathParameter=ParametarPutanje
PathParameter.Syntax=[ <to??ka na putanji> ]
Payment=IznosObroka
Payment.Syntax=[ <Kamatna stopa>, <broj obroka>, <sada??nja vrijednost>, <budu??a vrijednost (opcionalno)>, <tip (opcionalno)> ]
PenStroke.Syntax=[ <to??ka>, ..., <to??ka> ]
Percentile=Percentil
Percentile.Syntax=[ <lista brojeva>, <postotak> ]
Perimeter=Opseg
Perimeter.Syntax=[ <mnogokut> ]\n[ <konika> ]\n[ <lokus> ]
Periods=BrojObroka
Periods.Syntax=[ <Kamatna stopa>, <iznos>, <sada??nja vrijednost>, <budu??a vrijednost (opcionalno)>, <tip (opcionalno)> ]
PieChart=TortniDijagram
PieChart.Syntax=[ <lista frekvencija> ]\n[ <lista frekvencija>, <sredi??te>, <duljina polumjera> ]
Plane=Ravnina
Plane.Syntax=[ <mnogokut> ]\n[ <konika> ]\n[ <to??ka>, <ravnina> ]\n[ <to??ka>, <pravac> ]\n[ <pravac>, <pravac> ]\n[ <to??ka>, <to??ka>, <to??ka> ]\n[ <to??ka>, <vektor>, <vektor> ]
PlaneBisector=RavninaSimetrije
PlaneBisector.Syntax=[ <du??ina> ]\n[ <to??ka>, <to??ka> ]
PlaySound=Zvuk
PlaySound.Syntax=[ <URL> ]\n[ <sviraj ??? logi??ka vrijednost> ]\n[ <funkcija>, <najmanja vrijednost>, <najve??a vrijednost> ]\n[ <funkcija>, <najmanja vrijednost>, <najve??a vrijednost>, <frekvencija uzorka>, <dubina uzorka> ]
PlotSolve=Rije??iGrafi??ki
PlotSolve.Syntax=[ <jednad??ba po x> ]
Point=To??ka
Point.Syntax=[ <objekt> ]\n[ <objekt>, <parametar> ]\n[ <to??ka>, <vektor> ]\n[ <lista> ]
PointIn=To??kaUPodru??ju
PointIn.Syntax=[ <podru??je> ]
PointList=ZapisKaoListaTo??aka
PointList.Syntax=[ <lista> ]
Poisson=PoissonovaRazdioba
Poisson.Syntax=[ <o??ekivanje> ]\n[ <o??ekivanje>, <kumulacija - logi??ka vrijednost> ]\n[ <o??ekivanje>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
Poisson.SyntaxCAS=[ <o??ekivanje>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
Polar=Polara
Polar.Syntax=[ <to??ka>, <konika> ]\n[ <pravac>, <konika> ]
PolyLine=RazlomljenaCrta
PolyLine.Syntax=[ <lista to??aka> ]\n[ <to??ka>, ..., <to??ka> ]
Polygon=Mnogokut
Polygon.Syntax=[ <lista to??aka> ]\n[ <to??ka>, ..., <to??ka> ]\n[ <to??ka>, <to??ka>, <broj vrhova> ]
Polygon.Syntax3D=[ <lista to??aka> ]\n[ <to??ka>, ..., <to??ka> ]\n[ <to??ka>, <to??ka>, <broj vrhova> ]\n[ <to??ka>, <to??ka>, <broj vrhova>, <smjer> ]
Polynomial=Polinom
Polynomial.Syntax=[ <funkcija> ]\n[ <lista to??aka> ]
Polynomial.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <varijabla> ]
PresentValue=TrenutnaVrijednost
PresentValue.Syntax=[ <Kamatna stopa>, <broj obroka>, <iznos>, <budu??a vrijednost (opcionalno)>, <tip (opcionalno)> ]
PreviousPrime=PrethodniProstBroj
PreviousPrime.Syntax=[ <Broj> ]
PrimeFactors=ProstiFaktori
PrimeFactors.Syntax=[ <Broj> ]
Prism=Prizma
Prism.Syntax=[ <mnogokut>, <to??ka> ]\n[ <mnogokut>, <duljina visine> ]\n[ <to??ka>, <to??ka>, ... ]
Product=Umno??ak
Product.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <broj elemenata> ]\n[ <lista brojeva>, <lista frekvencija> ]\n[ <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
Product.SyntaxCAS=[ <lista izraza> ]\n[ <izraz>, <varijabla>, <po??etni indeks>, <krajnji indeks> ]
Prove=Provjeri
Prove.Syntax=[ <logi??ki izraz> ]
ProveDetails=ProvjeriPojedinosti
ProveDetails.Syntax=[ <logi??ki izraz> ]
Pyramid=Piramida
Pyramid.Syntax=[ <mnogokut>, <to??ka> ]\n[ <mnogokut>, <visina> ]\n[ <to??ka>, <to??ka>, <to??ka>, <to??ka>, ... ]
Q1=Kvartil1
Q1.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
Q3=Kvartil3
Q3.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
QRDecomposition=QRDekompozicija
QRDecomposition.Syntax=[ <matrica> ]
QuadricSide=Strana
QuadricSide.Syntax=[ <kvadrika> ]
RSquare=RKvadrat
RSquare.Syntax=[ <lista to??aka>, <funkcija> ]
Radius=Polumjer
Radius.Syntax=[ <konika> ]
Random=Slu??ajniBrojIzme??u
Random.Syntax=[ <minimalni cijeli broj>, <maksimalni cijeli broj> ]\n[ <minimalni cijeli broj>, <maksimalni cijeli broj>, <broj uzoraka> ]\n[ <minimalni cijeli broj>, <maksimalni cijeli broj>, <logi??ka varijabla za fiksiranje> ]
Random.SyntaxCAS=[ <minimalni cijeli broj>, <maksimalni cijeli broj> ]\n[ <minimalni cijeli broj>, <maksimalni cijeli broj>, <broj uzoraka> ]
RandomBinomial=BinomnaSlu??ajnaVarijabla
RandomBinomial.Syntax=[ <broj poku??aja>, <vjerojatnost> ]
RandomDiscrete=Slu??ajniBrojDiskretni
RandomDiscrete.Syntax=[ <lista>, <lista> ]
RandomElement=Slu??ajniElement
RandomElement.Syntax=[ <lista> ]
RandomNormal=NormalnaSlu??ajnaVarijabla
RandomNormal.Syntax=[ <o??ekivanje>, <standardna devijacija> ]
RandomPointIn=Slu??ajnaTo??kaU
RandomPointIn.Syntax=[ <podru??je> ]\n[ <lista to??aka> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=PoissonovaSlu??ajnaVarijabla
RandomPoisson.Syntax=[ <o??ekivanje> ]
RandomPolynomial=Slu??ajniPolinom
RandomPolynomial.Syntax=[ <stupanj>, <najmanja vrijednost koeficijenata>, <najve??a vrijednost koeficijenata> ]
RandomPolynomial.SyntaxCAS=[ <stupanj>, <najmanja vrijednost koeficijenata>, <najve??a vrijednost koeficijenata> ]\n[ <varijabla>, <stupanj>, <najmanja vrijednost koeficijenata>, <najve??a vrijednost koeficijenata> ]
RandomUniform=Slu??ajniUniformniBroj
RandomUniform.Syntax=[ <min>, <max> ]\n[ <min>, <max>, <broj uzoraka> ]
Rate=KamatnaStopa
Rate.Syntax=[ <broj obroka>, <iznos>, <sada??nja vrijednost>, <budu??a vrijednost (opcionalno)>, <tip (opcionalno)>, <pretpostavka (opcionalno)> ]
Rationalize=Racionaliziraj
Rationalize.SyntaxCAS=[ <Broj> ]
Ray=Zraka
Ray.Syntax=[ <po??etna to??ka>, <to??ka> ]\n[ <po??etna to??ka>, <vektor smjera> ]
ReadText=Pro??itajTekst
ReadText.Syntax=[ <tekst> ]
RectangleSum=SumaPravokutnika
RectangleSum.Syntax=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x>, <broj pravokutnika>, <pozicija po??etnog pravokutnika> ]
ReducedRowEchelonForm=ReduciraniRedakEchelonoveForme
ReducedRowEchelonForm.Syntax=[ <matrica> ]
Relation=Veza
Relation.Syntax=[ <lista> ]\n[ <objekt>, <objekt> ]
RemovableDiscontinuity=UklonjivaPrekidnost
RemovableDiscontinuity.Syntax=[ <funkcija> ]
Remove=Ukloni
Remove.Syntax=[ <lista>, <lista> ]
RemoveUndefined=UkloniNedefinirano
RemoveUndefined.Syntax=[ <lista> ]
Rename=Preimenuj
Rename.Syntax=[ <objekt>, <naziv> ]
Repeat=Ponovi
Repeat.Syntax=[ <Broj>, <naredba skriptiranja>, <naredba skriptiranja>, ... ]
ReplaceAll=ZamijeniSve
ReplaceAll.Syntax=[ <tekst>, <podudarni tekst>, <tekst za zamjenu> ]
ResidualPlot=DijagramRasipanja
ResidualPlot.Syntax=[ <lista to??aka>, <funkcija> ]
Reverse=InverzniNiz
Reverse.Syntax=[ <lista> ]
RightSide=DesnaStrana
RightSide.Syntax=[ <jednad??ba> ]
RightSide.SyntaxCAS=[ <jednad??ba> ]\n[ <lista jednad??bi> ]\n[ <lista jednad??bi>, <indeks> ]
RigidPolygon=??vrstiMnogokut
RigidPolygon.Syntax=[ <mnogokut> ]\n[ <mnogokut>, <pomak x>, <pomak y> ]\n[ <slobodna to??ka>, ..., <slobodna to??ka> ]
Root=Nulto??ka
Root.Syntax=[ <polinom> ]\n[ <funkcija>, <po??etna vrijednost x> ]\n[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
Root.SyntaxCAS=[ <polinom> ]
RootList=ListaNulto??aka
RootList.Syntax=[ <lista> ]
RootMeanSquare=KvadratnaSredina
RootMeanSquare.Syntax=[ <lista brojeva> ]
Roots=Nulto??ke
Roots.Syntax=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x> ]
Rotate=Rotacija
Rotate.Syntax=[ <objekt>, <kut> ]\n[ <objekt>, <kut>, <to??ka> ]
Rotate.Syntax3D=[ <objekt>, <kut> ]\n[ <objekt>, <kut>, <to??ka> ]\n[ <objekt>, <kut>, <os rotacije> ]\n[ <objekt>, <kut>, <to??ka na osi>, <smjer pravca ili ravnina> ]
RotateText=RotirajTekst
RotateText.Syntax=[ <tekst>, <kut> ]
Row=Redak
Row.Syntax=[ <??elija tablice> ]
RunClickScript=Izvr??iNaKlik
RunClickScript.Syntax=[ <objekt> ]
RunUpdateScript=Izvr??iA??uriranje
RunUpdateScript.Syntax=[ <objekt> ]
SD=StandardnaDevijacijaPopulacije
SDX=StandardnaDevijacijaX
SDX.Syntax=[ <lista to??aka> ]
SDY=StandardnaDevijacijaY
SDY.Syntax=[ <lista to??aka> ]
SVD.Syntax=[ <matrica> ]
SXX.Syntax=[ <lista brojeva> ]\n[ <lista to??aka> ]
SXY.Syntax=[ <lista to??aka> ]\n[ <lista brojeva>, <lista brojeva> ]
SYY.Syntax=[ <lista to??aka> ]
Sample=Uzorak
Sample.Syntax=[ <lista>, <veli??ina> ]\n[ <lista>, <veli??ina>, <ponavljanje - logi??ka vrijednost> ]
SampleSD=StandardnaDevijacijaUzorka
SampleSD.SyntaxCAS=[ <lista brojeva> ]
SampleSDX=StandardnaDevijacijaUzorkaX
SampleSDX.Syntax=[ <lista to??aka> ]
SampleSDY=StandardnaDevijacijaUzorkaY
SampleSDY.Syntax=[ <lista to??aka> ]
SampleVariance=VarijancaUzorka
SampleVariance.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
SampleVariance.SyntaxCAS=[ <lista brojeva> ]
ScientificText=ZnanstveniZapis
ScientificText.Syntax=[ <Broj> ]\n[ <Broj>, <preciznost> ]
SecondAxis=SporednaOs
SecondAxis.Syntax=[ <konika> ]
SecondAxisLength=SporednaPoluos
SecondAxisLength.Syntax=[ <konika> ]
Sector=Isje??ak
Sector.Syntax=[ <konika>, <to??ka>, <to??ka> ]\n[ <konika>, <vrijednost parametra>, <vrijednost parametra> ]
Segment=Du??ina
Segment.Syntax=[ <to??ka>, <to??ka> ]\n[ <to??ka>, <duljina> ]
SelectObjects=OdaberiObjekte
SelectObjects.Syntax=[ ]\n[ <objekt>, <objekt>, ... ]
SelectedElement=OdabraniElement
SelectedElement.Syntax=[ <lista> ]
SelectedIndex=OdabraniIndeks
SelectedIndex.Syntax=[ <lista> ]
Semicircle=Polukru??nica
Semicircle.Syntax=[ <to??ka>, <to??ka> ]
Sequence=Niz
Sequence.Syntax=[ <zavr??na vrijednost> ]\n[ <po??etna vrijednost>, <zavr??na vrijednost> ]\n[ <po??etna vrijednost>, <zavr??na vrijednost>, <korak pove??anja> ]\n[ <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]\n[ <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost>, <korak pove??anja> ]
SetActiveView=AktivirajPrikaz
SetActiveView.Syntax=[ <prikaz> ]\n[ <ravnina> ]
SetAxesRatio=PostaviOmjerOsi
SetAxesRatio.Syntax=[ <Broj>, <Broj> ]
SetAxesRatio.Syntax3D=[ <Broj>, <Broj> ]\n[ <Broj>, <Broj>, <Broj> ]
SetBackgroundColor=PostaviBojuPozadine
SetBackgroundColor.Syntax=[ <boja> ]\n[ <objekt>, <boja> ]\n[ <crvena>, <zelena>, <plava> ]\n[ <objekt>, <crvena>, <zelena>, <plava> ]
SetCaption=PostaviNatpis
SetCaption.Syntax=[ <objekt>, <tekst> ]
SetColor=PostaviBoju
SetColor.Syntax=[ <objekt>, <boja> ]\n[ <objekt>, <crvena>, <zelena>, <plava> ]
SetConditionToShowObject=PostaviUvjetZaPrikazObjekta
SetConditionToShowObject.Syntax=[ <objekt>, <uvjet> ]
SetConstructionStep=PostaviKorakKonstrukcije
SetConstructionStep.Syntax=[ <Broj> ]
SetCoords=PostaviKoordinate
SetCoords.Syntax=[ <objekt>, <x>, <y> ]\n[ <objekt>, <x>, <y>, <z> ]
SetDecoration=PostaviUkras
SetDecoration.Syntax=[ <objekt>, <Broj> ]\n[ <du??ina>, <Broj>, <Broj>]
SetDynamicColor=PostaviDinami??neBoje
SetDynamicColor.Syntax=[ <objekt>, <crvena>, <zelena>, <plava> ]\n[ <objekt>, <crvena>, <zelena>, <plava>, <neprozirnost> ]
SetFilling=PostaviIspunu
SetFilling.Syntax=[ <objekt>, <Broj> ]
SetFixed=PostaviNepomi??no
SetFixed.Syntax=[ <objekt>, <true | false> ]\n[ <objekt>, <true | false>, <true | false> ]
SetImage=PostaviSliku
SetImage.Syntax=[ <objekt>, <slika> ]\n[ <objekt>, <tekst> ]
SetLabelMode=PostaviNa??inOznake
SetLabelMode.Syntax=[ <objekt>, <Broj> ]
SetLayer=PostaviSloj
SetLayer.Syntax=[ <objekt>, <sloj> ]
SetLevelOfDetail=PostaviRazinuDetalja
SetLevelOfDetail.Syntax=[ <ploha>, <razina detalja> ]
SetLineStyle=PostaviStilCrte
SetLineStyle.Syntax=[ <objekt>, <Broj> ]
SetLineThickness=PostaviDebljinuCrte
SetLineThickness.Syntax=[ <objekt>, <Broj> ]
SetPerspective=PostaviPogled
SetPerspective.Syntax=[ <tekst> ]
SetPointSize=PostaviVeli??inuTo??ke
SetPointSize.Syntax=[ <objekt>, <Broj> ]
SetPointStyle=PostaviStilTo??ke
SetPointStyle.Syntax=[ <to??ka>, <Broj> ]
SetSeed=PostaviGenerator
SetSeed.Syntax=[ <cijeli broj> ]
SetSpinSpeed=BrzinaOkretanja
SetSpinSpeed.Syntax=[ <Broj> ]
SetTooltipMode=PostaviNa??inInfoObla??i??a
SetTooltipMode.Syntax=[ <objekt>, <Broj> ]
SetTrace=PostaviTrag
SetTrace.Syntax=[ <objekt>, <true | false> ]
SetValue=PostaviVrijednost
SetValue.Syntax=[ <logi??ka vrijednost>, <0|1> ]\n[ <objekt>, <objekt> ]\n[ <lista>, <Broj>, <objekt> ]
SetViewDirection=PostaviSmjerPogleda
SetViewDirection.Syntax=[ ]\n[ <smjer> ]\n[ <smjer>, <logi??ka vrijednost animacije> ]
SetVisibleInView=PostaviVidljivoUPrikazu
SetVisibleInView.Syntax=[ <objekt>, <grafi??ki prikaz broj 1|2>, <logi??ka vrijednost> ]
Shear=Smicanje
Shear.Syntax=[ <objekt>, <pravac>, <omjer> ]
ShortestDistance=Najkra??iPut
ShortestDistance.Syntax=[ <lista du??ina>, <po??etna to??ka>, <zavr??na to??ka>, <faktor uklju??ivanja - logi??ka vrijednost> ]
ShowAxes=Poka??iOsi
ShowAxes.Syntax=[]\n[ <logi??ka vrijednost> ]\n[ <prikaz>, <logi??ka vrijednost> ]
ShowGrid=Poka??iMre??u
ShowGrid.Syntax=[]\n[ <logi??ka vrijednost> ]\n[ <prikaz>, <logi??ka vrijednost> ]
ShowLabel=Poka??iOznaku
ShowLabel.Syntax=[ <objekt>, <logi??ka vrijednost> ]
ShowLayer=Poka??iSloj
ShowLayer.Syntax=[ <Broj> ]
Shuffle=Pomije??aj
Shuffle.Syntax=[ <lista> ]
SigmaXX.Syntax=[ <lista to??aka> ]\n[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
SigmaXY.Syntax=[ <lista to??aka> ]\n[ <Lista x koordinata>, <Lista y koordinata> ]
SigmaYY.Syntax=[ <lista to??aka> ]
Simplify=Pojednostavni
Simplify.Syntax=[ <funkcija> ]\n[ <tekst> ]
Simplify.SyntaxCAS=[ <funkcija> ]
Slider=Kliza??
Slider.Syntax=[ <min>, <max>, <korak pove??anja>, <Brzina>, <??irina u pikselima>, <je kut>, <horizontalni>, <animirani>, <slu??ajno generirani> ]
Slope=Nagib
Slope.Syntax=[ <pravac> ]
SlopeField=PoljeSmjerova
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <broj n> ]\n[ <f(x, y)>, <broj n>, <faktor duljine a> ]\n[ <f(x, y)>, <broj n>, <faktor duljine a>, <min x>, <min y>, <max x>, <max y> ]
SlowPlot=PolakoCrtaj
SlowPlot.Syntax=[ <funkcija> ]\n[ <funkcija>, <ponavljanje - logi??ka vrijednost> ]
Solutions=Rje??enja
Solutions.Syntax=[ <jednad??ba> ]
Solutions.SyntaxCAS=[ <jednad??ba> ]\n[ <jednad??ba>, <varijabla> ]\n[ <lista jednad??bi>, <lista varijabli> ]
Solve=Rije??i
Solve.Syntax=[ <jednad??ba> ]
Solve.SyntaxCAS=[ <jednad??ba po x> ]\n[ <jednad??ba>, <varijabla> ]\n[ <lista jednad??bi>, <lista varijabli> ]\n[ <lista parametarskih jednad??bi>, <lista varijabli> ]\n[ <jednad??ba>, <varijabla>, <lista pretpostavki> ]
SolveCubic=Rije??iKubnu
SolveCubic.SyntaxCAS=[ <kubni polinom> ]
SolveODE=Rije??iODJ
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <to??ka na f> ]\n[ <f'(x, y)>, <po??etna vrijednost x>, <po??etna vrijednost y>, <zavr??na vrijednost x>, <korak> ]\n[ <y'>, <x'>, <po??etna vrijednost x>, <po??etna vrijednost y>, <zavr??na vrijednost t>, <korak> ]\n[ <b(x)>, <c(x)>, <f(x)>, <po??etna vrijednost x>, <po??etna vrijednost y>, <Po??etna vrijednost y'>, <zavr??na vrijednost x>, <korak> ]
SolveODE.SyntaxCAS=[ <jednad??ba> ]\n[ <jednad??ba>, <to??ka na f> ]\n[ <jednad??ba>, <to??ka na f>, <to??ka na f'> ]\n[ <jednad??ba>, <zavisna varijabla>, <nezavisna varijabla>, <to??ka na f> ] \n[ <jednad??ba>, <zavisna varijabla>, <nezavisna varijabla>, <to??ka na f>, <to??ka na f'> ]
SolveQuartic=Rije??iKvatriku
SolveQuartic.SyntaxCAS=[ <polinom ??etvrtog stupnja> ]
Sort=Sortiraj
Sort.Syntax=[ <lista> ]\n[ <vrijednosti>, <klju??evi> ]
Spearman.Syntax=[ <lista to??aka> ]\n[ <lista brojeva>, <lista brojeva> ]
Sphere=Sfera
Sphere.Syntax=[ <to??ka>, <duljina polumjera> ]\n[ <to??ka>, <to??ka> ]
Spline=Splajn
Spline.Syntax=[ <lista to??aka> ]\n[ <lista to??aka>, <Stupanj ??? 3> ]\n[ <lista to??aka>, <Stupanj ??? 3>, <Te??inska funkcija> ]
Split=Razdvoji
Split.Syntax=[ <tekst>, <lista tekstova za razdvajanje> ]
StartAnimation=Animiraj
StartAnimation.Syntax=[ ]\n[ <logi??ka vrijednost> ]\n[ <kliza?? ili to??ka>, <kliza?? ili to??ka>, ... ]\n[ <kliza?? ili to??ka>, <kliza?? ili to??ka>, ..., <logi??ka vrijednost> ]
StartRecord=PokreniZapis
StartRecord.Syntax=[ ]\n[ <logi??ka vrijednost> ]
StemPlot=StabloListDijagram
StemPlot.Syntax=[ <lista> ]\n[ <lista>, <pode??avanje -1|0|1> ]
StepGraph=Stepeni??astiDijagram
StepGraph.Syntax=[ <lista to??aka> ]\n[ <lista to??aka>, <povezano - logi??ka vrijednost> ]\n[ <Lista x koordinata>, <Lista y koordinata> ]\n[ <lista to??aka>, <povezano - logi??ka vrijednost>, <stil to??ke> ]\n[ <Lista x koordinata>, <Lista y koordinata>, <povezano - logi??ka vrijednost> ]\n[ <Lista x koordinata>, <Lista y koordinata>, <povezano - logi??ka vrijednost>, <stil to??ke> ]
StickGraph=??ipkastiDijagram
StickGraph.Syntax=[ <lista to??aka> ]\n[ <lista to??aka>, <horizontalne linije - logi??ka vrijednost> ]\n[ <Lista x koordinata>, <Lista y koordinata> ]\n[ <Lista x koordinata>, <Lista y koordinata>, <horizontalne linije - logi??ka vrijednost> ]
Stretch=Razvuci
Stretch.Syntax=[ <objekt>, <vektor> ]\n[ <objekt>, <pravac>, <omjer> ]
Substitute=Supstitucija
Substitute.SyntaxCAS=[ <izraz>, <lista supstitucija> ]\n[ <izraz>, <od>, <do> ]
Sum=Zbroj
Sum.Syntax=[ <lista> ]\n[ <lista>, <broj elemenata> ]\n[ <lista>, <lista frekvencija> ]\n[ <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
Sum.SyntaxCAS=[ <lista> ]\n[ <izraz>, <varijabla>, <po??etna vrijednost>, <zavr??na vrijednost> ]
SumSquaredErrors=ZbrojKvadrataPogre??aka
SumSquaredErrors.Syntax=[ <lista to??aka>, <funkcija> ]
SurdText=PrirodniZapis
SurdText.Syntax=[ <to??ka> ]\n[ <Broj> ]\n[ <Broj>, <lista> ]
Surface=Ploha
Surface.Syntax=[ <funkcija>, <kut> ]\n[ <krivulja>, <kut>, <pravac> ]\n[ <izraz>, <izraz>, <izraz>, <varijabla 1>, <po??etna vrijednost>, <zavr??na vrijednost>, <varijabla 2>, <po??etna vrijednost>, <zavr??na vrijednost> ]
TDistribution=TRazdioba
TDistribution.Syntax=[ <stupanj slobode>, <Vrijednost varijable> ]\n[ <stupanj slobode>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <stupanj slobode>, x, <kumulacija - logi??ka vrijednost> ]
TDistribution.SyntaxCAS=[ <stupanj slobode>, <Vrijednost varijable> ]
TMean2Estimate=O??ekivanaTSrednjaVrijednost2
TMean2Estimate.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <Razina pouzdanosti>, <vrsta varijabilnosti - logi??ka vrijednost> ]\n[ <srednja vrijednost uzorka 1>, <standardna devijacija uzorka 1>, <veli??ina uzorka 1>, <srednja vrijednost uzorka 2>, <standardna devijacija uzorka 2>, <veli??ina uzorka 2>, <Razina pouzdanosti>, <vrsta varijabilnosti - logi??ka vrijednost> ]
TMeanEstimate=O??ekivanaTSrednjaVrijednost
TMeanEstimate.Syntax=[ <lista podataka uzorka>, <Razina pouzdanosti> ]\n[ <srednja vrijednost uzorka>, <standardna devijacija uzorka>, <veli??ina uzorka>, <Razina pouzdanosti> ]
TTest.Syntax=[ <lista podataka uzorka>, <o??ekivana srednja vrijednost>, <broj krakova> ]\n[ <srednja vrijednost uzorka>, <standardna devijacija uzorka>, <veli??ina uzorka>, <o??ekivana srednja vrijednost>, <broj krakova> ]
TTest2.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <broj krakova>, <vrsta varijabilnosti - logi??ka vrijednost> ]\n[ <srednja vrijednost uzorka 1>, <standardna devijacija uzorka 1>, <veli??ina uzorka 1>, <srednja vrijednost uzorka 2>, <standardna devijacija uzorka 2>, <veli??ina uzorka 2>, <broj krakova>, <vrsta varijabilnosti - logi??ka vrijednost> ]
TTestPaired=TTestUpareni
TTestPaired.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <broj krakova> ]
TableText=TekstKaoTablica
TableText.Syntax=[ <lista>, <lista>, ... ]\n[ <lista>, <lista>, ..., <poravnanje teksta> ]\n[ <lista>, <lista>, ..., <poravnanje teksta>, <Najmanja duljina ??elije> ]\n[ <lista>, <lista>, ..., <poravnanje teksta>, <Najmanja duljina ??elije>, <Najmanja visina ??elije> ]
Take=Podskup
Take.Syntax=[ <lista>, <po??etna pozicija>, <zavr??na pozicija> ]\n[ <lista>, <po??etna pozicija> ]\n[ <tekst>, <po??etna pozicija>, <zavr??na pozicija> ]\n[ <tekst>, <po??etna pozicija> ]
Take.SyntaxCAS=[ <lista>, <po??etna pozicija> ]\n[ <lista>, <po??etna pozicija>, <zavr??na pozicija> ]\n[ <tekst>, <po??etna pozicija>, <zavr??na pozicija> ]\n[ <tekst>, <po??etna pozicija> ]
Tangent=Tangenta
Tangent.Syntax=[ <to??ka>, <konika> ]\n[ <to??ka>, <funkcija> ]\n[ <to??ka na krivulji>, <krivulja> ]\n[ <x vrijednost>, <funkcija> ]\n[ <pravac>, <konika> ]\n[ <konika>, <konika> ]
Tangent.SyntaxCAS=[ <Broj>, <funkcija> ]\n[ <to??ka>, <objekt> ]
TaylorSeries=TaylorovPolinom
TaylorSeries.Syntax=[ <funkcija>, <x vrijednost>, <redni broj> ]
TaylorSeries.SyntaxCAS=[ <izraz>, <x vrijednost>, <redni broj> ]\n[ <izraz>, <varijabla>, <Vrijednost varijable>, <redni broj> ]
Tetrahedron=PravilniTetraedar
Tetrahedron.Syntax=[ <jednakostrani??ni trokut> ]\n[ <to??ka>, <to??ka>, <to??ka> ]\n[ <to??ka>, <to??ka>, <smjer> ]
Text=Tekst
Text.Syntax=[ <objekt> ]\n[ <objekt>, <zamjena varijabli - logi??ka vrijednost> ]\n[ <objekt>, <to??ka> ]\n[ <objekt>, <to??ka>, <zamjena varijabli - logi??ka vrijednost> ]\n[ <objekt>, <to??ka>, <zamjena varijabli - logi??ka vrijednost>, <Boolean za LaTeX formulu> ]\n[ <objekt>, <to??ka>, <zamjena varijabli - logi??ka vrijednost>, <Boolean za LaTeX formulu>, <Horizontalno poravnanje -1|0|1> ]\n[ <objekt>, <to??ka>, <zamjena varijabli - logi??ka vrijednost>, <Boolean za LaTeX formulu>, <Horizontalno poravnanje -1|0|1>, <Vertikalno poravnanje -1|0|1> ]
TextToUnicode=UnikodTeksta
TextToUnicode.Syntax=[ <tekst> ]
Textfield=TekstualnoPolje
Textfield.Syntax=[ <povezani objekt> ]
TiedRank=VezaniRedniBroj
TiedRank.Syntax=[ <lista> ]
ToBase=UBazu
ToBase.Syntax=[ <Broj>, <baza brojevnog sustava> ]
ToComplex=KompleksniZapis
ToComplex.Syntax=[ <vektor> ]
ToExponential=EksponencijalniZapis
ToExponential.SyntaxCAS=[ <kompleksni broj> ]
ToPoint=KoordinatniZapis
ToPoint.Syntax=[ <kompleksni broj> ]
ToPolar=PolarneKoordinate
ToPolar.Syntax=[ <kompleksni broj> ]\n[ <vektor> ]
ToolImage=SlikaAlata
ToolImage.Syntax=[ <Broj> ]\n[ <Broj>, <to??ka> ]\n[ <Broj>, <to??ka>, <to??ka> ]
Top=Vrh
Top.Syntax=[ <kvadrika> ]
Translate=Translacija
Translate.Syntax=[ <objekt>, <vektor> ]\n[ <vektor>, <po??etna to??ka> ]
Transpose=TransponiranaMatrica
Transpose.Syntax=[ <matrica> ]
TrapezoidalSum=TrapeznaSuma
TrapezoidalSum.Syntax=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x>, <broj trapeza> ]
TravelingSalesman=Putuju??iTrgovac
TravelingSalesman.Syntax=[ <lista to??aka> ]
TriangleCenter=Karakteristi??naTo??kaTrokuta
TriangleCenter.Syntax=[ <to??ka>, <to??ka>, <to??ka>, <Broj> ]
TriangleCurve=Te??inskaKrivuljaTorkuta
TriangleCurve.Syntax=[ <to??ka>, <to??ka>, <to??ka>, <jednad??ba> ]
Triangular=TrokutastaRazdioba
Triangular.Syntax=[ <Donja granica>, <Gornja granica>, <Mod>, <Vrijednost varijable> ]\n[ <Donja granica>, <Gornja granica>, <Mod>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <Donja granica>, <Gornja granica>, <Mod>, x, <kumulacija - logi??ka vrijednost> ]
TrigCombine=TrigKombiniraj
TrigCombine.Syntax=[ <izraz> ]\n[ <izraz>, <ciljna funkcija> ]
TrigExpand=TrigPro??iri
TrigExpand.Syntax=[ <izraz> ]\n[ <izraz>, <ciljna funkcija> ]
TrigExpand.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <ciljna funkcija> ]\n[ <izraz>, <ciljna funkcija>, <ciljna varijabla> ]\n[ <izraz>, <ciljna funkcija>, <ciljna varijabla>, <ciljna varijabla> ]
TrigSimplify=TrigPojednostavni
TrigSimplify.Syntax=[ <izraz> ]
Trilinear=TrilinearnaTo??ka
Trilinear.Syntax=[ <to??ka>, <to??ka>, <to??ka>, <Broj>, <Broj>, <Broj> ]
TurningPoint=To??kaPregiba
TurningPoint.Syntax=[ <polinom> ]
TurningPoint.SyntaxCAS=[ <funkcija> ]
Turtle=Kornja??a
Turtle.Syntax=[]
TurtleBack=Kornja??aNatrag
TurtleBack.Syntax=[ <kornja??a>, <udaljenost> ]
TurtleDown=Kornja??aCrta
TurtleDown.Syntax=[ <kornja??a> ]
TurtleForward=Kornja??aNaprijed
TurtleForward.Syntax=[ <kornja??a>, <udaljenost> ]
TurtleLeft=Kornja??aLijevo
TurtleLeft.Syntax=[ <kornja??a>, <kut> ]
TurtleRight=Kornja??aDesno
TurtleRight.Syntax=[ <kornja??a>, <kut> ]
TurtleUp=Kornja??aNeCrta
TurtleUp.Syntax=[ <kornja??a> ]
Type=TipObjekta
Type.Syntax=[ <objekt> ]
UnicodeToLetter=ZnakIzUnikoda
UnicodeToLetter.Syntax=[ <cijeli broj> ]
UnicodeToText=TekstIzUnikoda
UnicodeToText.Syntax=[ <lista cijelih brojeva> ]
Uniform=UniformnaRazdioba
Uniform.Syntax=[ <Donja granica>, <Gornja granica>, <Vrijednost varijable> ]\n[ <Donja granica>, <Gornja granica>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <Donja granica>, <Gornja granica>, x, <kumulacija - logi??ka vrijednost> ]
Union=Unija
Union.Syntax=[ <lista>, <lista> ]\n[ <mnogokut>, <mnogokut> ]
Unique=Jedinstveni
Unique.Syntax=[ <lista> ]
UnitOrthogonalVector=Jedini??niOkomitVektor
UnitOrthogonalVector.Syntax=[ <pravac> ]\n[ <du??ina> ]\n[ <vektor> ]
UnitOrthogonalVector.Syntax3D=[ <pravac> ]\n[ <du??ina> ]\n[ <vektor> ]\n[ <ravnina> ]
UnitOrthogonalVector.SyntaxCAS=[ <vektor> ]
UnitVector=Jedini??niVektor
UnitVector.Syntax=[ <objekt> ]
UnitVector.SyntaxCAS=[ <vektor> ]
UpdateConstruction=A??urirajKonstrukciju
UpdateConstruction.Syntax=[ ]\n[ <broj ponavljanja> ]
UpperSum=GornjaSuma
UpperSum.Syntax=[ <funkcija>, <po??etna vrijednost x>, <zavr??na vrijednost x>, <broj pravokutnika> ]
Variance=Varijanca
Variance.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
Vector=Vektor
Vector.Syntax=[ <to??ka> ]\n[ <po??etna to??ka>, <zavr??na to??ka> ]
Vertex=Tjeme
Vertex.Syntax=[ <konika> ]\n[ <Nejednakost> ]\n[ <mnogokut> ]\n[ <mnogokut>, <indeks> ]\n[ <du??ina>, <indeks> ]
VerticalText=VertikalniTekst
VerticalText.Syntax=[ <tekst> ]\n[ <tekst>, <to??ka> ]
Volume=Obujam
Volume.Syntax=[ <tijelo> ]
Voronoi=VoronoijevDijagram
Voronoi.Syntax=[ <lista to??aka> ]
Weibull=WeibullovaRazdioba
Weibull.Syntax=[ <oblik>, <skala>, <Vrijednost varijable> ]\n[ <oblik>, <skala>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]\n[ <oblik>, <skala>, x, <kumulacija - logi??ka vrijednost> ]
Weibull.SyntaxCAS=[ <oblik>, <skala>, <Vrijednost varijable> ]
ZMean2Estimate=O??ekivanaZSrednjaVrijednost2
ZMean2Estimate.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <??1>, <??2>, <Razina pouzdanosti> ]\n[ <srednja vrijednost uzorka 1>, <??1>, <veli??ina uzorka 1>, <srednja vrijednost uzorka 2>, <??2>, <veli??ina uzorka 2>, <Razina pouzdanosti> ]
ZMean2Test=ZSrednjaVrijednost2Test
ZMean2Test.Syntax=[ <lista podataka uzorka 1>, <??1>, <lista podataka uzorka 2>, <??2>, <broj krakova> ]\n[ <srednja vrijednost uzorka 1>, <??1>, <veli??ina uzorka 1>, <srednja vrijednost uzorka 2>, <??2>, <veli??ina uzorka 2>, <broj krakova> ]
ZMeanEstimate=O??ekivanaZSrednjaVrijednost
ZMeanEstimate.Syntax=[ <lista podataka uzorka>, <??>, <Razina pouzdanosti> ]\n[ <srednja vrijednost uzorka>, <??>, <veli??ina uzorka>, <Razina pouzdanosti> ]
ZMeanTest=ZSrednjaVrijednostTest
ZMeanTest.Syntax=[ <lista podataka uzorka>, <??>, <o??ekivana srednja vrijednost>, <broj krakova> ]\n[ <srednja vrijednost uzorka>, <??>, <veli??ina uzorka>, <o??ekivana srednja vrijednost>, <broj krakova> ]
ZProportion2Estimate=ZO??ekivaniUdio2
ZProportion2Estimate.Syntax=[ <udio uzorka 1>, <veli??ina uzorka 1>, <udio uzorka 2>, <veli??ina uzorka 2>, <Razina pouzdanosti> ]
ZProportion2Test=ZTestProporcija2
ZProportion2Test.Syntax=[ <udio uzorka 1>, <veli??ina uzorka 1>, <udio uzorka 2>, <veli??ina uzorka 2>, <broj krakova> ]
ZProportionEstimate=ZO??ekivaniUdio
ZProportionEstimate.Syntax=[ <udio uzorka>, <veli??ina uzorka>, <Razina pouzdanosti> ]
ZProportionTest=ZTestProporcije
ZProportionTest.Syntax=[ <udio uzorka>, <veli??ina uzorka>, <hipoteza o proporciji>, <broj krakova> ]
Zip.Syntax=[ <izraz>, <varijabla1>, <lista1>, <varijabla2>, <lista2>, ... ]
Zipf.Syntax=[ <broj elemenata>, <eksponent> ]\n[ <broj elemenata>, <eksponent>, <kumulacija - logi??ka vrijednost> ]\n[ <broj elemenata>, <eksponent>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
Zipf.SyntaxCAS=[ <broj elemenata>, <eksponent>, <Vrijednost varijable>, <kumulacija - logi??ka vrijednost> ]
ZoomIn=Pove??ajPrikaz
ZoomIn.Syntax=[ ]\n[ <faktor> ]\n[ <faktor>, <sredi??nja to??ka> ]\n[ <min x>, <min y>, <max x>, <max y> ]\n[ <min x>, <min y>, <Min z>, <max x>, <max y>, <Max z> ]
ZoomOut=SmanjiPrikaz
ZoomOut.Syntax=[ <faktor> ]\n[ <faktor>, <sredi??nja to??ka> ]
mad=sop
mad.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
mean=asred
mean.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
nCr.Syntax=[ <broj n>, <broj r> ]
stdev.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]
stdevp.Syntax=[ <lista neobra??enih podataka> ]\n[ <lista brojeva>, <lista frekvencija> ]