# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen> ]
Angle.Syntax=[ <Objeto> ]\n[ <Vector>, <Vector> ]\n[ <Recta>, <Recta> ]\n[ <Punto origen>, <V??rtice>, <Punto origen> ]\n[ <Punto origen>, <V??rtice>, <??ngulo de rotaci??n (en sentido antihorario)> ]
Angle.Syntax3D=[ <Objeto> ]\n[ <Vector>, <Vector> ]\n[ <Recta>, <Recta> ]\n[ <Recta>, <Plano> ]\n[ <Plano>, <Plano> ]\n[ <Punto origen>, <V??rtice>, <Punto origen> ]\n[ <Punto origen>, <V??rtice>, <??ngulo de rotaci??n (en sentido antihorario)> ]\n[ <Punto origen>, <Punto origen>, <Punto origen>, <Direcci??n> ]
AngularBisector.Syntax=[ <Recta>, <Recta> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]
Append.Syntax=[ <Lista>, <Objeto> ]\n[ <Objeto>, <Lista> ]
ApplyMatrix.Syntax=[ <Matriz>, <Objeto> ]
Arc.Syntax=[ <Circunferencia>, <Punto origen>, <Punto origen> ]\n[ <Elipse>, <Punto origen>, <Punto origen> ]\n[ <Circunferencia>, <Valor inicial del par??metro>, <Valor inicial del par??metro> ]\n[ <Elipse>, <Valor inicial del par??metro>, <Valor inicial del par??metro> ]
AreCollinear.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen> ]
AreConcurrent.Syntax=[ <Recta>, <Recta>, <Recta> ]
AreConcyclic.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen>, <Punto origen> ]
AreCongruent.Syntax=[ <Objeto>, <Objeto> ]
AreEqual.Syntax=[ <Objeto>, <Objeto> ]
AreParallel.Syntax=[ <Recta>, <Recta> ]
ArePerpendicular.Syntax=[ <Recta>, <Recta> ]
Area.Syntax=[ <C??nica> ]\n[ <Pol??gono> ]\n[ <Punto origen>, ..., <Punto origen> ]
Assume.SyntaxCAS=[ <Condici??n>, <Expresi??n> ]
Asymptote.Syntax=[ <Objeto> ]
AttachCopyToView.Syntax=[ <Objeto>, <Vista 0|1|2> ]\n[ <Objeto>, <Vista 0|1|2>, <Punto 1>, <Punto 2>, <P??xel del punto 1>, <P??xel del punto 2> ]
Axes.Syntax=[ <C??nica> ]
Axes.Syntax3D=[ <C??nica> ]\n[ <Cu??drica> ]
AxisStepX.Syntax=[ ]
AxisStepY.Syntax=[ ]
BarChart.Syntax=[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Lista de datos brutos>, <Ancho de barras>, <Factor de escala vertical(opcional)> ]\n[ <Lista de datos>, <Lista de frecuencias>, <Ancho de barras> ]\n[ <Valor inicial>, <Valor final>, <Lista de alturas> ]\n[ <Valor inicial>, <Valor final>, <Expresi??n>, <Variable>, <Del n??mero>, <Al n??mero> ]\n[ <Valor inicial>, <Valor final>, <Expresi??n>, <Variable>, <Del n??mero>, <Al n??mero>, <Paso> ]
Barycenter.Syntax=[ <Lista de puntos>, <Lista de pesos> ]
Bernoulli.Syntax=[ <Probabilidad>, <Acumulada o no (true/false)> ]
BetaDist.Syntax=[ <Alfa>, <Beta>, <Valor> ]\n[ <Alfa>, <Beta>, <Valor>, <Acumulada o no (true/false)>  ]\n[ <Alfa>, <Beta>, x, <Acumulada o no (true/false)> ]
Binomial.Syntax=[ <N??mero n>, <N??mero r> ]
BinomialDist.Syntax=[ <N??mero de ensayos>, <Probabilidad de ??xito> ]\n[ <N??mero de ensayos>, <Probabilidad de ??xito>, <Acumulada o no (true/false)> ]\n[ <N??mero de ensayos>, <Probabilidad de ??xito>, <Lista de valores> ]\n[ <N??mero de ensayos>, <Probabilidad de ??xito>, <Valor>, <Acumulada o no (true/false)> ]
BinomialDist.SyntaxCAS=[ <N??mero de ensayos>, <Probabilidad de ??xito>, <Valor>, <Acumulada o no (true/false)> ]
Bottom.Syntax=[ <Cu??drica> ]
BoxPlot.Syntax=[ <Offset_y>, <Escala_y>, <Lista de datos brutos> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos brutos>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos>, <Lista de frecuencias>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Valor inicial>, <Q1>, <Mediana>, <Q3>, <Valor final> ]
Button.Syntax=[ ]\n[ <Texto> ]
CASLoaded.Syntax=[]
CFactor=FactorizaC
CFactor.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Variable> ]
CIFactor.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Variable> ]
CSolutions.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]
CSolve=ResuelveC
CSolve.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]
Cauchy.Syntax=[ <Mediana>, <Escala>, <Valor> ]\n[ <Mediana>, <Escala>, <Valor>, <Acumulada o no (true/false)>  ]\n[ <Mediana>, <Escala>, x, <Acumulada o no (true/false)> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor> ]
Cell.Syntax=[ <Columna>, <Fila> ]
CellRange.Syntax=[ <Celda inicial>, <Celda final> ]
Center.Syntax=[ <C??nica> ]
Center.Syntax3D=[ <C??nica> ]\n[ <Cu??drica> ]
CenterView.Syntax=[ <Punto central> ]
Centroid.Syntax=[ <Pol??gono> ]
CharacteristicPolynomial.Syntax=[ <Matriz> ]
Checkbox.Syntax=[ ]\n[ <Texto> ]\n[ <Lista> ]\n[ <Texto>, <Lista> ]
ChiSquared.Syntax=[ <Grados de libertad>, <Valor> ]\n[ <Grados de libertad>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
ChiSquared.SyntaxCAS=[ <Grados de libertad>, <Variable> ]
ChiSquaredTest.Syntax=[ <Matriz> ]\n[ <Lista>, <Lista> ]\n[ <Matriz>, <Matriz> ]
Circle.Syntax=[ <Punto origen>, <N??mero(radio)> ]\n[ <Punto origen>, <Segmento> ]\n[ <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]
Circle.Syntax3D=[ <Punto origen>, <N??mero(radio)> ]\n[ <Punto origen>, <Segmento> ]\n[ <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <Recta>, <Punto origen> ]\n[ <Punto origen>, <Radio>, <Direcci??n> ]\n[ <Punto origen>, <Punto origen>, <Direcci??n> ]
CircleArc.Syntax=[ <Punto (centro)>, <Punto origen>, <Punto origen> ]
CircleSector.Syntax=[ <Punto (centro)>, <Punto origen>, <Punto origen> ]
CircumcircleArc.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen> ]
CircumcircleSector.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen> ]
Circumference.Syntax=[ <C??nica> ]
Classes.Syntax=[ <Lista de datos>, <N??mero de clases> ]\n[ <Lista de datos>, <Inicio>, <Ancho de las clases> ]
ClosestPoint.Syntax=[ <Recorrido o Regi??n>, <Punto origen> ]\n[ <Recta>, <Recta> ]
ClosestPointRegion.Syntax=[ <Regi??n>, <Punto origen> ]
Coefficients.Syntax=[ <Polinomio> ]\n[ <C??nica> ]
Coefficients.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
Column.Syntax=[ <Celda de la Hoja de C??lculo> ]
ColumnName.Syntax=[ <Celda de la Hoja de C??lculo> ]
CommonDenominator.Syntax=[ <Expresi??n>, <Expresi??n> ]
CompleteSquare.Syntax=[ <Funci??n Cuadr??tica> ]
ComplexRoot=Ra??zC
ComplexRoot.Syntax=[ <Polinomio> ]
Cone.Syntax=[ <Circunferencia>, <Altura> ]\n[ <Punto origen>, <Punto origen>, <Radio> ]\n[ <Punto origen>, <Vector>, <??ngulo de rotaci??n (en sentido antihorario)> ]
ConeInfinite.Syntax=[ <Punto origen>, <Vector>, <??ngulo de rotaci??n (en sentido antihorario)> ]\n[ <Punto origen>, <Punto origen>, <??ngulo de rotaci??n (en sentido antihorario)> ]\n[ <Punto origen>, <Recta>, <??ngulo de rotaci??n (en sentido antihorario)> ]
Conic.Syntax=[ <Lista> ]\n[ <Punto origen>, <Punto origen>, <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <N??mero>, <N??mero>, <N??mero>, <N??mero>, <N??mero>, <N??mero> ]
ConstructionStep.Syntax=[ ]\n[ <Objeto> ]
ContingencyTable.Syntax=[ <Lista de textos>, <Lista de textos> ]\n[ <Lista de textos>, <Lista de textos>, <Opciones> ]\n[ <Lista de valores (filas)>, <Lista de valores (columnas)>, <Tabla de frecuencias> ]\n[ <Lista de valores (filas)>, <Lista de valores (columnas)>, <Tabla de frecuencias> , <Opciones> ]
ContinuedFraction.Syntax=[ <N??mero> ]\n[ <N??mero>, <Nivel> ]\n[ <N??mero>, <Nivel>, <Abreviado o no (true/false)> ]
ConvexHull=CierreConvexo
ConvexHull.Syntax=[ <Lista de puntos> ]
CopyFreeObject.Syntax=[ <Objeto> ]
Corner.Syntax=[ <N??mero de esquina> ]\n[ <Imagen>, <N??mero de esquina> ]\n[ <Texto>, <N??mero de esquina> ]\n[ <Vista Gr??fica>, <N??mero de esquina> ]
CountIf.Syntax=[ <Condici??n>, <Lista> ]\n[ <Condici??n>, <Variable>, <Lista> ]
Covariance.Syntax=[ <Lista de puntos> ]\n[ <Lista de n??meros>, <Lista de n??meros> ]
Cross.Syntax=[ <Vector>, <Vector> ]
CrossRatio.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen>, <Punto origen> ]
Cube.Syntax=[ <Cuadrado> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Direcci??n> ]
Cubic.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen>, <N??mero> ]
Curvature.Syntax=[ <Punto origen>, <Objeto> ]
CurvatureVector.Syntax=[ <Punto origen>, <Objeto> ]
CurveCartesian.Syntax=[ <Expresi??n>, <Expresi??n>, <Par??metro>, <Valor inicial>, <Valor final> ]
CurveCartesian.Syntax3D=[ <Expresi??n>, <Expresi??n>, <Par??metro>, <Valor inicial>, <Valor final> ]\n[ <Expresi??n>, <Expresi??n>, <Expresi??n>, <Par??metro>, <Valor inicial>, <Valor final> ]
Cylinder.Syntax=[ <Circunferencia>, <Altura> ]\n[ <Punto origen>, <Punto origen>, <Radio> ]
CylinderInfinite.Syntax=[ <Recta>, <Radio> ]\n[ <Punto origen>, <Vector>, <Radio> ]\n[ <Punto origen>, <Punto origen>, <Radio> ]
DataFunction.Syntax=[ <Lista de n??meros>, <Lista de n??meros> ]
Defined.Syntax=[ <Objeto> ]
Degree.Syntax=[ <Polinomio> ]
Degree.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
DelauneyTriangulation.Syntax=[ <Lista de puntos> ]
Delete.Syntax=[ <Objeto> ]
Denominator.Syntax=[ <N??mero> ]\n[ <Funci??n> ]
Denominator.SyntaxCAS=[ <Expresi??n> ]
Derivative.Syntax=[ <Funci??n> ]\n[ <Curva> ]\n[ <Funci??n>, <N??mero> ]\n[ <Funci??n>, <Variable> ]\n[ <Curva>, <N??mero> ]\n[ <Funci??n>, <Variable>, <N??mero> ]
Derivative.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Variable> ]\n[ <Expresi??n>, <Variable>, <N??mero> ]
Determinant.Syntax=[ <Matriz> ]
Diameter.Syntax=[ <Vector>, <C??nica> ]\n[ <Recta>, <C??nica> ]
Difference.Syntax=[ <Pol??gono>, <Pol??gono> ]
Dilate.Syntax=[ <Objeto>, <N??mero (factor de escala)> ]\n[ <Objeto>, <N??mero (factor de escala)>, <Punto (centro)> ]
Dimension.Syntax=[ <Objeto> ]
Direction.Syntax=[ <Recta> ]
Directrix.Syntax=[ <C??nica> ]
Distance.Syntax=[ <Punto origen>, <Objeto> ]\n[ <Recta>, <Recta> ]\n[ <Plano>, <Plano> ]
Distance.SyntaxCAS=[ <Punto origen>, <Objeto> ]
Div.Syntax=[ <N??mero dividendo>, <N??mero divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Division.Syntax=[ <N??mero dividendo>, <N??mero divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Divisors.Syntax=[ <N??mero> ]
DivisorsList.Syntax=[ <N??mero> ]
DivisorsSum.Syntax=[ <N??mero> ]
Dodecahedron.Syntax=[ <Pent??gono regular> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Direcci??n> ]
Dot.Syntax=[ <Vector>, <Vector> ]
DotPlot.Syntax=[ <Lista de datos brutos>, <Pila de puntos adyacentes (opcional)>, <Factor de escala (opcional)>]
DynamicCoordinates.Syntax=[ <Punto origen>, <Coordenada x>, <Coordenada y> ]\n[ <Punto origen>, <Coordenada x>, <Coordenada y>, <Coordenada z> ]
Eccentricity.Syntax=[ <C??nica> ]
Eigenvalues=Autovalores
Eigenvalues.SyntaxCAS=[ <Matriz> ]
Eigenvectors=Autovectores
Eigenvectors.SyntaxCAS=[ <Matriz> ]
Element.Syntax=[ <Lista>, <N??mero (posici??n)> ]\n[ <Matriz>, <Fila>, <Columna> ]\n[ <Lista>, <??ndice 1>, <??ndice 2>, ... ]
Element.SyntaxCAS=[ <Lista>, <N??mero (posici??n)> ]\n[ <Matriz>, <Fila>, <Columna> ]
Eliminate.Syntax=[ <Lista de Polinomios>, <Lista de Variables> ]
Ellipse.Syntax=[ <Punto (foco)>, <Punto (foco)>, <N??mero (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto origen> ]
Ends.Syntax=[ <Cu??drica> ]
Envelope.Syntax=[ <Recorrido o Regi??n>, <Punto origen> ]
Erlang.Syntax=[ <Figura>, <Raz??n>, <Valor> ]\n[ <Figura>, <Raz??n>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Figura>, <Raz??n>, x, <Acumulada o no (true/false)> ]
Excentricity.Syntax=[ <C??nica> ]
Execute.Syntax=[ <Lista de textos> ]\n[ <Lista de textos>, <Par??metro>, <Par??metro>, ... ]
Expand.Syntax=[ <Expresi??n> ]
Exponential.Syntax=[ <Lambda>, <Valor> ]\n[ <Lambda>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Lambda>, x, <Acumulada o no (true/false)> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valor> ]
ExportImage.Syntax=[ <Propiedad>, <Valor>, <Propiedad>, <Valor>, ... ]
ExtendedGCD.Syntax=[ <Entero>, <Entero>]\n[ <Polinomio>, <Polinomio>]
Extremum.Syntax=[ <Polinomio> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Extremum.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
FDistribution.Syntax=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Valor> ]\n[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, x, <Acumulada o no (true/false)> ]
FDistribution.SyntaxCAS=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Valor> ]
Factor.Syntax=[ <Polinomio> ]
Factor.SyntaxCAS=[ <N??mero> ]\n[ <Polinomio> ]\n[ <Expresi??n>, <Variable> ]
Factors.Syntax=[ <Polinomio> ]\n[ <N??mero> ]
FillCells.Syntax=[ <Rango de celdas>, <Objeto> ]\n[ <Celda>, <Lista> ]\n[ <Celda>, <Matriz> ]
FillColumn.Syntax=[ <Columna>, <Lista> ]
FillRow.Syntax=[ <Fila>, <Lista> ]
First.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <N??mero de elementos> ]\n[ <Texto>, <N??mero de elementos> ]\n[ <Lugar Geom??trico>, <N??mero de elementos> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <N??mero de elementos> ]
FirstAxis.Syntax=[ <C??nica> ]
FirstAxisLength.Syntax=[ <C??nica> ]
Fit.Syntax=[ <Lista de puntos>, <Lista de funciones> ]\n[ <Lista de puntos>, <Funci??n> ]
FitExp.Syntax=[ <Lista de puntos> ]
FitGrowth.Syntax=[ <Lista de puntos> ]
FitImplicit.Syntax=[ <Lista de puntos>, <Orden> ]
FitLineX.Syntax=[ <Lista de puntos> ]
FitLineY.Syntax=[ <Lista de puntos> ]
FitLog.Syntax=[ <Lista de puntos> ]
FitLogistic.Syntax=[ <Lista de puntos> ]
FitPoly.Syntax=[ <Lista de puntos>, <Grado del polinomio> ]\n[ <Funci??n mano alzada>, <Grado del polinomio> ]
FitPow.Syntax=[ <Lista de puntos> ]
FitSin.Syntax=[ <Lista de puntos> ]
Flatten.Syntax=[ <Lista> ]
Focus.Syntax=[ <C??nica> ]
FractionText.Syntax=[ <N??mero> ]\n[ <Punto origen> ]\n[ <N??mero>, <Una sola fracci??n> ]
Frequency.Syntax=[ <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de l??mites de clases>, <Lista de datos brutos> ]\n[ <Lista de textos>, <Lista de textos> ]\n[ <Acumulada o no (true/false)>, <Lista de l??mites de clases>, <Lista de datos brutos> ]\n[ <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyPolygon.Syntax=[ <Lista de l??mites de clases>, <Lista de alturas> ]\n[ <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyTable.Syntax=[ <Lista de datos brutos>, <Factor de escala (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de l??mites de clases>, <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de l??mites de clases>, <Lista de datos brutos> ]\n[ <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FromBase.Syntax=[ <N??mero entre comillas (como texto)>, <Base> ]
Function.Syntax=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Lista de n??meros> ]
Function.Syntax3D=[ <Lista de n??meros> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Expresi??n>, <Variable 1>, <Valor inicial>, <Valor final>, <Variable 2>, <Valor inicial>, <Valor final> ]
Function.SyntaxCAS=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
FutureValue.Syntax=[ <Inter??s>, <N??mero de per??odos>, <Pago>, <Valor actual (opcional)>, <Tipo (opcional)> ]
GCD.Syntax=[ <Lista de n??meros> ]\n[ <N??mero>, <N??mero> ]
GCD.SyntaxCAS=[ <Lista de n??meros> ]\n[ <Lista de Polinomios> ]\n[ <N??mero>, <N??mero> ]\n[ <Polinomio>, <Polinomio> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <Valor> ]\n[ <Alfa>, <Beta>, <Valor>, <Acumulada o no (true/false)>  ]\n[ <Alfa>, <Beta>, x, <Acumulada o no (true/false)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor> ]
GeometricMean.Syntax=[ <Lista de n??meros> ]
GetTime.Syntax=[]\n[ <Formato> ]
GroebnerDegRevLex.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
GroebnerLex.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
GroebnerLexDeg.Syntax=[ <Lista de Polinomios> ]\n[ <Lista de Polinomios>, <Lista de Variables> ]
HarmonicMean.Syntax=[ <Lista de n??meros> ]
Height.Syntax=[ <S??lido> ]
HideLayer.Syntax=[ <N??mero> ]
Histogram.Syntax=[ <Lista de l??mites de clases>, <Lista de alturas> ]\n[ <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
HistogramRight.Syntax=[ <Lista de l??mites de clases>, <Lista de alturas> ]\n[ <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)>  ]\n[ <Acumulada o no (true/false)>, <Lista de l??mites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
HyperGeometric.Syntax=[ <Tama??o de poblaci??n>, <N??mero de ??xitos>, <Tama??o de muestra> ]\n[ <Tama??o de poblaci??n>, <N??mero de ??xitos>, <Tama??o de muestra>, <Acumulada o no (true/false)> ]\n[ <Tama??o de poblaci??n>, <N??mero de ??xitos>, <Tama??o de muestra>, <Valor>, <Acumulada o no (true/false)> ]
HyperGeometric.SyntaxCAS=[ <Tama??o de poblaci??n>, <N??mero de ??xitos>, <Tama??o de muestra>, <Valor>, <Acumulada o no (true/false)> ]
Hyperbola.Syntax=[ <Punto (foco)>, <Punto (foco)>, <N??mero (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto origen> ]
IFactor.Syntax=[ <Polinomio> ]
IFactor.SyntaxCAS=[ <Expresi??n> ]
Icosahedron.Syntax=[ <Tri??ngulo equil??tero> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Direcci??n> ]
Identity.Syntax=[ <N??mero> ]
If.Syntax=[ <Condici??n>, <Entonces> ]\n[ <Condici??n>, <Entonces>, <Si no> ]
ImplicitCurve.Syntax=[ <Lista de puntos> ]\n[ <f(x, y)> ]
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expresi??n>, <Variable dependiente>, <Variable independiente> ]
Incircle.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen> ]
IndexOf.Syntax=[ <Objeto>, <Lista> ]\n[ <Texto>, <Texto> ]\n[ <Objeto>, <Lista>, <??ndice inicial> ]\n[ <Texto>, <Texto>, <??ndice inicial> ]
Insert.Syntax=[ <Lista>, <Lista>, <Posici??n> ]\n[ <Objeto>, <Lista>, <Posici??n> ]
Integral.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Evaluar o no (true/false)> ]
Integral.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Variable>, <Valor inicial>, <Valor final> ]
IntegralBetween.Syntax=[ <Funci??n>, <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Evaluar o no (true/false)> ]
IntegralBetween.SyntaxCAS=[ <Funci??n>, <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Funci??n>, <Variable>, <Valor inicial>, <Valor final> ]
IntegralSymbolic.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]
InteriorAngles.Syntax=[ <Pol??gono> ]
Intersect.Syntax=[ <Objeto>, <Objeto> ]\n[ <Objeto>, <Objeto>, <??ndice del punto de intersecci??n> ]\n[ <Objeto>, <Objeto>, <Punto inicial> ]\n[ <Funci??n>, <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Curva 1>, <Curva 2>, <Par??metro 1>, <Par??metro 2> ]
Intersect.SyntaxCAS=[ <Funci??n>, <Funci??n> ]
IntersectConic=C??nicaIntersecci??n
IntersectConic.Syntax=[ <Plano>, <Cu??drica> ]\n[ <Cu??drica>, <Cu??drica> ]
IntersectPath.Syntax=[ <Recta>, <Pol??gono> ]\n[ <Pol??gono>, <Pol??gono> ]
IntersectPath.Syntax3D=[ <Recta>, <Pol??gono> ]\n[ <Pol??gono>, <Pol??gono> ]\n[ <Plano>, <Pol??gono> ]\n[ <Plano>, <Cu??drica> ]
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Probabilidad> ]
InverseBinomial.Syntax=[ <N??mero de ensayos>, <Probabilidad de ??xito>, <Probabilidad acumulada> ]
InverseBinomialMinimumTrials.Syntax=[ <Probabilidad acumulada>, <Probabilidad de ??xito>, <N??mero de ??xitos> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Probabilidad acumulada>, <Probabilidad de ??xito>, <N??mero de ??xitos> ]
InverseCauchy.Syntax=[ <Mediana>, <Escala>, <Probabilidad> ]
InverseChiSquared.Syntax=[ <Grados de libertad>, <Probabilidad> ]
InverseExponential.Syntax=[ <Lambda>, <Probabilidad> ]
InverseFDistribution.Syntax=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Probabilidad> ]
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probabilidad> ]
InverseHyperGeometric.Syntax=[ <Tama??o de poblaci??n>, <N??mero de ??xitos>, <Tama??o de muestra>, <Probabilidad> ]
InverseLaplace.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Variable>, <Variable> ]
InverseLogNormal.Syntax=[ <Media>, <Desviaci??n est??ndar>, <Probabilidad> ]
InverseLogistic.Syntax=[ <Media>, <Escala>, <Probabilidad> ]
InverseNormal.Syntax=[ <Media>, <Desviaci??n est??ndar>, <Probabilidad acumulada> ]
InversePascal.Syntax=[ <N??mero de ??xitos>, <Probabilidad de ??xito>, <Probabilidad> ]
InversePoisson.Syntax=[ <Media>, <Probabilidad> ]
InverseTDistribution.Syntax=[ <Grados de libertad>, <Probabilidad> ]
InverseWeibull.Syntax=[ <Figura>, <Escala>, <Probabilidad> ]
InverseZipf.Syntax=[ <N??mero de elementos>, <Exponente>, <Probabilidad> ]
Invert.Syntax=[ <Matriz> ]\n[ <Funci??n> ]
IsFactored.Syntax=[ <Polinomio> ]
IsInRegion.Syntax=[ <Punto origen>, <Regi??n> ]
IsInteger.Syntax=[ <N??mero> ]
IsPrime.Syntax=[ <N??mero> ]
IsTangent.Syntax=[ <Recta>, <C??nica> ]
IsVertexForm.Syntax=[ <Funci??n> ]
Iteration.Syntax=[ <Funci??n>, <Valor inicial>, <N??mero de iteraciones> ]\n[ <Expresi??n>, <Variables>, <{Valores iniciales}>, <N??mero de iteraciones> ]
IterationList.Syntax=[ <Funci??n>, <Valor inicial>, <N??mero de iteraciones> ]\n[ <Expresi??n>, <Variables>, <{Valores iniciales}>, <N??mero de iteraciones> ]
IterationList.SyntaxCAS=[ <Funci??n>, <Valor inicial>, <N??mero de iteraciones> ]
Join.Syntax=[ <Lista de listas> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization=Can??nicaJordan
JordanDiagonalization.SyntaxCAS=[ <Matriz> ]
KeepIf.Syntax=[ <Condici??n>, <Lista> ]\n[ <Condici??n>, <Variable>, <Lista> ]
LCM.Syntax=[ <Lista de n??meros> ]\n[ <N??mero>, <N??mero> ]
LCM.SyntaxCAS=[ <Lista de n??meros> ]\n[ <Lista de Polinomios> ]\n[ <N??mero>, <N??mero> ]\n[ <Polinomio>, <Polinomio> ]
LUDecomposition.Syntax=[ <Matriz> ]
LaTeX.Syntax=[ <Objeto> ]\n[ <Objeto>, <Sustituye o no las variables (true/false)> ]\n[ <Objeto>, <Sustituye o no las variables (true/false)>, <Muestra o no el nombre (true/false)> ]
Laplace.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Variable>, <Variable> ]
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <N??mero de elementos> ]\n[ <Texto>, <N??mero de elementos> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <N??mero de elementos> ]
LeftSide.Syntax=[ <Ecuaci??n> ]
LeftSide.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Lista de Ecuaciones> ]\n[ <Lista de Ecuaciones>, <N??mero (??ndice)> ]
LeftSum.Syntax=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <N??mero de rect??ngulos> ]
Length.Syntax=[ <Objeto> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Punto inicial>, <Punto final> ]\n[ <Curva>, <Valor inicial de t>, <Valor final de t> ]\n[ <Curva>, <Punto inicial>, <Punto final> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Variable>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
LetterToUnicode.Syntax=[ <Letra (entre comillas)> ]
Limit.Syntax=[ <Funci??n>, <Valor> ]
Limit.SyntaxCAS=[ <Expresi??n>, <Valor> ]\n[ <Expresi??n>, <Variable>, <Valor> ]
LimitAbove.Syntax=[ <Funci??n>, <Valor> ]
LimitAbove.SyntaxCAS=[ <Expresi??n>, <Valor> ]\n[ <Expresi??n>, <Variable>, <Valor> ]
LimitBelow.Syntax=[ <Funci??n>, <Valor> ]
LimitBelow.SyntaxCAS=[ <Expresi??n>, <Valor> ]\n[ <Expresi??n>, <Variable>, <Valor> ]
Line.Syntax=[ <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Recta (paralela)> ]\n[ <Punto origen>, <Vector director> ]
LineBisector.Syntax=[ <Segmento> ]\n[ <Punto origen>, <Punto origen> ]
LineBisector.Syntax3D=[ <Segmento> ]\n[ <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Direcci??n> ]
LineGraph.Syntax=[ <Lista de abscisas>, <Lista de ordenadas> ]
Locus.Syntax=[ <Punto que trazar?? el lugar>, <Punto origen> ]\n[ <Punto que trazar?? el lugar>, <Deslizador> ]\n[ <Campode direcciones>, <Punto origen> ]\n[ <f(x, y)>, <Punto origen> ]
LocusEquation.Syntax=[ <Lugar Geom??trico> ]\n[ <Punto del lugar>, <Punto variable> ]\n[ <Expresi??n l??gica>, <Punto variable> ]
LogNormal.Syntax=[ <Media>, <Desviaci??n est??ndar>, <Valor> ]\n[ <Media>, <Desviaci??n est??ndar>, <Valor>, <Acumulada o no (true/false)>  ]\n[ <Media>, <Desviaci??n est??ndar>, x, <Acumulada o no (true/false)> ]
Logistic.Syntax=[ <Media>, <Escala>, <Valor> ]\n[ <Media>, <Escala>, <Valor>, <Acumulada o no (true/false)>  ]\n[ <Media>, <Escala>, x, <Acumulada o no (true/false)> ]
LowerSum.Syntax=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <N??mero de rect??ngulos> ]
MatrixRank.Syntax=[ <Matriz> ]
Max.Syntax=[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Lista> ]\n[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Lista de datos>, <Lista de frecuencias> ]
Maximize.Syntax=[ <N??mero dependiente>, <N??mero libre> ]\n[ <N??mero dependiente>, <Punto en el recorrido> ]
Mean.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
MeanX.Syntax=[ <Lista de puntos> ]
MeanY.Syntax=[ <Lista de puntos> ]
Median.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
Median.SyntaxCAS=[ <Lista de n??meros> ]
Midpoint.Syntax=[ <Segmento> ]\n[ <C??nica> ]\n[ <Intervalo> ]\n[ <Punto origen>, <Punto origen> ]
Min.Syntax=[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Lista> ]\n[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Lista de datos>, <Lista de frecuencias> ]
MinimalPolynomial.Syntax=[ <Matriz> ]
Minimize.Syntax=[ <N??mero dependiente>, <N??mero libre> ]\n[ <N??mero dependiente>, <Punto en el recorrido> ]
MinimumSpanningTree.Syntax=[ <Lista de puntos> ]
Mirror.Syntax=[ <Objeto>, <Punto origen> ]\n[ <Objeto>, <Recta> ]\n[ <Objeto>, <Circunferencia> ]
Mirror.Syntax3D=[ <Objeto>, <Punto origen> ]\n[ <Objeto>, <Recta> ]\n[ <Objeto>, <Plano> ]\n[ <Objeto>, <Circunferencia> ]
MixedNumber.SyntaxCAS=[ <N??mero> ]
Mod.Syntax=[ <N??mero dividendo>, <N??mero divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Mode.Syntax=[ <Lista de n??meros> ]
ModularExponent.Syntax=[ <N??mero>, <N??mero>, <N??mero> ]
NDerivative.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Orden> ]
NIntegral.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Start y-Value>, <Extremo superior del intervalo> ]
NIntegral.SyntaxCAS=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Funci??n>, <Variable>, <Valor inicial>, <Valor final> ]
NInvert.Syntax=[ <Funci??n> ]
NSolutions.Syntax=[ <Ecuaci??n> ]
NSolutions.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Ecuaci??n>, <Variable = valor inicial> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]
NSolve=ResuelveN
NSolve.Syntax=[ <Ecuaci??n> ]
NSolve.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Ecuaci??n>, <Variable = valor inicial> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]
NSolveODE.Syntax=[ <Lista de derivadas>, <Valor inicial de x>, <Lista de valores iniciales de y>, <Valor final de x> ]
Name.Syntax=[ <Objeto> ]
Net.Syntax=[ <Poliedro>, <N??mero> ]\n[ <Poliedro>, <N??mero>, <Cara>, <Arista>, <Arista>, ... ]
NextPrime.Syntax=[ <N??mero> ]
Normal.Syntax=[ <Media>, <Desviaci??n est??ndar>, <Valor> ]\n[ <Media>, <Desviaci??n est??ndar>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Media>, <Desviaci??n est??ndar>, x, <Acumulada o no (true/false)> ]
NormalQuantilePlot.Syntax=[ <Lista de datos brutos> ]
Normalize.Syntax=[ <Lista de n??meros> ]\n[ <Lista de puntos> ]
Numerator.Syntax=[ <N??mero> ]\n[ <Funci??n> ]
Numerator.SyntaxCAS=[ <Expresi??n> ]
Numeric.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <N??mero de cifras significativas> ]
Object.Syntax=[ <Nombre del objeto (como texto)> ]
Octahedron.Syntax=[ <Tri??ngulo equil??tero> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Direcci??n> ]
Ordinal.Syntax=[ <Entero> ]
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine.Syntax=[ <Punto origen>, <Recta> ]\n[ <Punto origen>, <Segmento> ]\n[ <Punto origen>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Punto origen>, <Recta> ]\n[ <Punto origen>, <Segmento> ]\n[ <Punto origen>, <Vector> ]\n[ <Punto origen>, <Plano> ]\n[ <Recta>, <Recta> ]\n[ <Punto origen>, <Direcci??n>, <Direcci??n> ]\n[ <Punto origen>, <Recta>, <Contexto: un plano (ej. planoXY) o la palabra "espacio" (sin comillas)> ]
OrthogonalPlane.Syntax=[ <Punto origen>, <Recta> ]\n[ <Punto origen>, <Vector> ]
OrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
OrthogonalVector.Syntax3D=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]\n[ <Plano> ]
OrthogonalVector.SyntaxCAS=[ <Vector> ]
OsculatingCircle.Syntax=[ <Punto origen>, <Objeto> ]
PMCC.Syntax=[ <Lista de puntos> ]\n[ <Lista de abscisas>, <Lista de ordenadas> ]
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Punto origen>, <Recta> ]
Parameter.Syntax=[ <C??nica> ]
ParametricDerivative.Syntax=[ <Curva> ]
ParseToFunction.Syntax=[ <Funci??n>, <Expresi??n (texto)> ]
ParseToNumber.Syntax=[ <N??mero>, <Expresi??n (texto)> ]
PartialFractions.Syntax=[ <Funci??n> ]
PartialFractions.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]
Pascal.Syntax=[ <N??mero de ??xitos>, <Probabilidad de ??xito> ]\n[ <N??mero de ??xitos>, <Probabilidad de ??xito>, <Acumulada o no (true/false)> ]\n[ <N??mero de ??xitos>, <Probabilidad de ??xito>, <Valor>, <Acumulada o no (true/false)> ]
Pascal.SyntaxCAS=[ <N??mero de ??xitos>, <Probabilidad de ??xito>, <Valor>, <Acumulada o no (true/false)> ]
PathParameter.Syntax=[ <Punto sobre el recorrido> ]
Payment.Syntax=[ <Inter??s>, <N??mero de per??odos>, <Valor actual>, <Valor futuro(opcional)>, <Tipo (opcional)> ]
PenStroke.Syntax=[ <Punto origen>, ..., <Punto origen> ]
Percentile.Syntax=[ <Lista de n??meros>, <Porcentaje> ]
Perimeter.Syntax=[ <Pol??gono> ]\n[ <C??nica> ]\n[ <Lugar Geom??trico> ]
Periods.Syntax=[ <Inter??s>, <Pago>, <Valor actual>, <Valor futuro(opcional)>, <Tipo (opcional)> ]
PieChart.Syntax=[ <Lista de frecuencias> ]\n[ <Lista de frecuencias>, <Centro>, <Radio> ]
Plane.Syntax=[ <Pol??gono> ]\n[ <C??nica> ]\n[ <Punto origen>, <Plano> ]\n[ <Punto origen>, <Recta> ]\n[ <Recta>, <Recta> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Vector>, <Vector> ]
PlaneBisector.Syntax=[ <Segmento> ]\n[ <Punto origen>, <Punto origen> ]
PlaySound.Syntax=[ <Archivo> ]\n[ <Suena o no (true/false)> ]\n[ <Funci??n>, <Valor m??nimo>, <Valor m??ximo> ]\n[ <Funci??n>, <Valor m??nimo>, <Valor m??ximo>, <Frecuencia de muestreo>, <Profundidad de muestreo> ]
PlotSolve.Syntax=[ <Ecuaci??n en x> ]
Point.Syntax=[ <Objeto> ]\n[ <Objeto>, <Par??metro> ]\n[ <Punto origen>, <Vector> ]\n[ <Lista> ]
PointIn.Syntax=[ <Regi??n> ]
PointList.Syntax=[ <Lista> ]
Poisson.Syntax=[ <Media> ]\n[ <Media>, <Acumulada o no (true/false)> ]\n[ <Media>, <Valor>, <Acumulada o no (true/false)> ]
Poisson.SyntaxCAS=[ <Media>, <Valor>, <Acumulada o no (true/false)> ]
Polar.Syntax=[ <Punto origen>, <C??nica> ]\n[ <Recta>, <C??nica> ]
PolyLine.Syntax=[ <Lista de puntos> ]\n[ <Punto origen>, ..., <Punto origen> ]
Polygon.Syntax=[ <Lista de puntos> ]\n[ <Punto origen>, ..., <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <N??mero de v??rtices> ]
Polygon.Syntax3D=[ <Lista de puntos> ]\n[ <Punto origen>, ..., <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <N??mero de v??rtices> ]\n[ <Punto origen>, <Punto origen>, <N??mero de v??rtices>, <Direcci??n> ]
Polynomial.Syntax=[ <Funci??n> ]\n[ <Lista de puntos> ]
Polynomial.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]
PresentValue.Syntax=[ <Inter??s>, <N??mero de per??odos>, <Pago>, <Valor futuro(opcional)>, <Tipo (opcional)> ]
PreviousPrime.Syntax=[ <N??mero> ]
PrimeFactors.Syntax=[ <N??mero> ]
Prism.Syntax=[ <Pol??gono>, <Punto origen> ]\n[ <Pol??gono>, <N??mero (altura)> ]\n[ <Punto origen>, <Punto origen>, ... ]
Product.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <N??mero de elementos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]
Product.SyntaxCAS=[ <Lista de expresiones> ]\n[ <Expresi??n>, <Variable>, <??ndice inicial>, <??ndice final> ]
Prove.Syntax=[ <Expresi??n l??gica> ]
ProveDetails.Syntax=[ <Expresi??n l??gica> ]
Pyramid.Syntax=[ <Pol??gono>, <Punto origen> ]\n[ <Pol??gono>, <Altura> ]\n[ <Punto origen>, <Punto origen>, <Punto origen>, <Punto origen>, ... ]
Q1=Q1
Q1.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
Q3=Q3
Q3.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
QRDecomposition.Syntax=[ <Matriz> ]
QuadricSide.Syntax=[ <Cu??drica> ]
RSquare.Syntax=[ <Lista de puntos>, <Funci??n> ]
Radius.Syntax=[ <C??nica> ]
Random.Syntax=[ <M??nimo (entero)>, <M??ximo (entero)> ]\n[ <M??nimo (entero)>, <M??ximo (entero)>, <N??mero de muestras> ]\n[ <M??nimo (entero)>, <M??ximo (entero)>, <Fijo o no (true/false)> ]
Random.SyntaxCAS=[ <M??nimo (entero)>, <M??ximo (entero)> ]\n[ <M??nimo (entero)>, <M??ximo (entero)>, <N??mero de muestras> ]
RandomBinomial=BinomialAleatoria
RandomBinomial.Syntax=[ <N??mero de ensayos>, <Probabilidad> ]
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement.Syntax=[ <Lista> ]
RandomNormal=NormalAleatoria
RandomNormal.Syntax=[ <Media>, <Desviaci??n est??ndar> ]
RandomPointIn.Syntax=[ <Regi??n> ]\n[ <Lista de puntos> ]\n[ <xM??n>, <xM??x>, <yM??n>, <yM??x> ]
RandomPoisson=PoissonAleatoria
RandomPoisson.Syntax=[ <Media> ]
RandomPolynomial.Syntax=[ <Grado>, <M??nimo para coeficientes>, <M??ximo para coeficientes> ]
RandomPolynomial.SyntaxCAS=[ <Grado>, <M??nimo para coeficientes>, <M??ximo para coeficientes> ]\n[ <Variable>, <Grado>, <M??nimo para coeficientes>, <M??ximo para coeficientes> ]
RandomUniform=UniformeAleatoria
RandomUniform.Syntax=[ <M??nimo>, <M??ximo> ]\n[ <M??nimo>, <M??ximo>, <N??mero de muestras> ]
Rate.Syntax=[ <N??mero de per??odos>, <Pago>, <Valor actual>, <Valor futuro(opcional)>, <Tipo (opcional)>, <Estimaci??n (opcional)> ]
Rationalize.SyntaxCAS=[ <N??mero> ]
Ray.Syntax=[ <Punto inicial>, <Punto origen> ]\n[ <Punto inicial>, <Vector director> ]
ReadText.Syntax=[ <Texto> ]
RectangleSum.Syntax=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <N??mero de rect??ngulos>, <Posici??n del rect??ngulo inicial> ]
ReducedRowEchelonForm.Syntax=[ <Matriz> ]
Relation.Syntax=[ <Lista> ]\n[ <Objeto>, <Objeto> ]
RemovableDiscontinuity.Syntax=[ <Funci??n> ]
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined.Syntax=[ <Lista> ]
Rename.Syntax=[ <Objeto>, <Nombre (entre comillas)> ]
Repeat.Syntax=[ <N??mero>, <Comando de Guiones>, <Comando de Guiones>, ... ]
ReplaceAll.Syntax=[ <Texto>, <Texto a buscar>, <Texto de reemplazo> ]
ResidualPlot.Syntax=[ <Lista de puntos>, <Funci??n> ]
Reverse.Syntax=[ <Lista> ]
RightSide.Syntax=[ <Ecuaci??n> ]
RightSide.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Lista de Ecuaciones> ]\n[ <Lista de Ecuaciones>, <N??mero (??ndice)> ]
RigidPolygon.Syntax=[ <Pol??gono> ]\n[ <Pol??gono>, <Traslada x>, <Traslada y> ]\n[ <Punto libre>, ..., <Punto libre> ]
Root.Syntax=[ <Polinomio> ]\n[ <Funci??n>, <Valor inicial de x> ]\n[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Root.SyntaxCAS=[ <Polinomio> ]
RootList.Syntax=[ <Lista> ]
RootMeanSquare.Syntax=[ <Lista de n??meros> ]
Roots.Syntax=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Rotate.Syntax=[ <Objeto>, <??ngulo de rotaci??n (en sentido antihorario)> ]\n[ <Objeto>, <??ngulo de rotaci??n (en sentido antihorario)>, <Punto origen> ]
Rotate.Syntax3D=[ <Objeto>, <??ngulo de rotaci??n (en sentido antihorario)> ]\n[ <Objeto>, <??ngulo de rotaci??n (en sentido antihorario)>, <Punto origen> ]\n[ <Objeto>, <??ngulo de rotaci??n (en sentido antihorario)>, <Eje de rotaci??n> ]\n[ <Objeto>, <??ngulo de rotaci??n (en sentido antihorario)>, <Punto sobre eje>, <Eje director o Plano> ]
RotateText.Syntax=[ <Texto>, <??ngulo de rotaci??n (en sentido antihorario)> ]
Row.Syntax=[ <Celda de la Hoja de C??lculo> ]
RunClickScript.Syntax=[ <Objeto> ]
RunUpdateScript.Syntax=[ <Objeto> ]
SDX.Syntax=[ <Lista de puntos> ]
SDY.Syntax=[ <Lista de puntos> ]
SVD.Syntax=[ <Matriz> ]
SXX.Syntax=[ <Lista de n??meros> ]\n[ <Lista de puntos> ]
SXY.Syntax=[ <Lista de puntos> ]\n[ <Lista de n??meros>, <Lista de n??meros> ]
SYY.Syntax=[ <Lista de puntos> ]
Sample.Syntax=[ <Lista>, <Tama??o> ]\n[ <Lista>, <Tama??o>, <Con reemplazamiento o no (true/false)> ]
SampleSD.SyntaxCAS=[ <Lista de n??meros> ]
SampleSDX.Syntax=[ <Lista de puntos> ]
SampleSDY.Syntax=[ <Lista de puntos> ]
SampleVariance.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
SampleVariance.SyntaxCAS=[ <Lista de n??meros> ]
ScientificText.Syntax=[ <N??mero> ]\n[ <N??mero>, <Precisi??n> ]
SecondAxis.Syntax=[ <C??nica> ]
SecondAxisLength.Syntax=[ <C??nica> ]
Sector.Syntax=[ <C??nica>, <Punto origen>, <Punto origen> ]\n[ <C??nica>, <Valor inicial del par??metro>, <Valor inicial del par??metro> ]
Segment.Syntax=[ <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <N??mero (longitud)> ]
SelectObjects.Syntax=[ ]\n[ <Objeto>, <Objeto>, ... ]
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex.Syntax=[ <Lista> ]
Semicircle.Syntax=[ <Punto origen>, <Punto origen> ]
Sequence.Syntax=[ <Valor final> ]\n[ <Valor inicial>, <Valor final> ]\n[ <Valor inicial>, <Valor final>, <Incremento> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final>, <Incremento> ]
SetActiveView.Syntax=[ <Plano> ]\n[ <Plano> ]
SetAxesRatio.Syntax=[ <N??mero>, <N??mero> ]
SetAxesRatio.Syntax3D=[ <N??mero>, <N??mero> ]\n[ <N??mero>, <N??mero>, <N??mero> ]
SetBackgroundColor.Syntax=[ <Nombre del color (entre comillas)> ]\n[ <Objeto>, <Nombre del color (entre comillas)> ]\n[ <Rojo>, <Verde>, <Azul> ]\n[ <Objeto>, <Rojo>, <Verde>, <Azul> ]
SetCaption.Syntax=[ <Objeto>, <Texto> ]
SetColor.Syntax=[ <Objeto>, <Nombre del color (entre comillas)> ]\n[ <Objeto>, <Rojo>, <Verde>, <Azul> ]
SetConditionToShowObject.Syntax=[ <Objeto>, <Condici??n> ]
SetConstructionStep.Syntax=[ <N??mero> ]
SetCoords.Syntax=[ <Objeto>, <x>, <y> ]\n[ <Objeto>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Objeto>, <N??mero> ]\n[ <Segmento>, <N??mero>, <N??mero>]
SetDynamicColor.Syntax=[ <Objeto>, <Rojo>, <Verde>, <Azul> ]\n[ <Objeto>, <Rojo>, <Verde>, <Azul>, <Opacidad> ]
SetFilling=Sombreado
SetFilling.Syntax=[ <Objeto>, <N??mero> ]
SetFixed.Syntax=[ <Objeto>, <true | false> ]\n[ <Objeto>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Objeto>, <Imagen> ]\n[ <Objeto>, <Texto> ]
SetLabelMode.Syntax=[ <Objeto>, <N??mero> ]
SetLayer.Syntax=[ <Objeto>, <Capa> ]
SetLevelOfDetail.Syntax=[ <Superficie>, <Nivel de detalle> ]
SetLineStyle.Syntax=[ <Objeto>, <N??mero> ]
SetLineThickness.Syntax=[ <Objeto>, <N??mero> ]
SetPerspective.Syntax=[ <Texto> ]
SetPointSize.Syntax=[ <Objeto>, <N??mero> ]
SetPointStyle.Syntax=[ <Punto origen>, <N??mero> ]
SetSeed.Syntax=[ <Entero> ]
SetSpinSpeed.Syntax=[ <N??mero> ]
SetTooltipMode.Syntax=[ <Objeto>, <N??mero> ]
SetTrace.Syntax=[ <Objeto>, <true | false> ]
SetValue.Syntax=[ <Valor l??gico>, <true/false (?? 1/0)> ]\n[ <Objeto>, <Objeto> ]\n[ <Lista>, <N??mero>, <Objeto> ]
SetViewDirection.Syntax=[ ]\n[ <Direcci??n> ]\n[ <Direcci??n>, <Par??metro l??gico> ]
SetVisibleInView.Syntax=[ <Objeto>, <N??mero de Vista (1 o 2)>, <Valor l??gico> ]
Shear.Syntax=[ <Objeto>, <Recta>, <Raz??n> ]
ShortestDistance.Syntax=[ <Lista de segmentos>, <Punto inicial>, <Punto final>, <Baremado o no (true/false)> ]
ShowAxes.Syntax=[]\n[ <Valor l??gico> ]\n[ <Plano>, <Valor l??gico> ]
ShowGrid.Syntax=[]\n[ <Valor l??gico> ]\n[ <Plano>, <Valor l??gico> ]
ShowLabel.Syntax=[ <Objeto>, <Valor l??gico> ]
ShowLayer.Syntax=[ <N??mero> ]
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista de puntos> ]\n[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
SigmaXY.Syntax=[ <Lista de puntos> ]\n[ <Lista de abscisas>, <Lista de ordenadas> ]
SigmaYY.Syntax=[ <Lista de puntos> ]
Simplify.Syntax=[ <Funci??n> ]\n[ <Texto> ]
Simplify.SyntaxCAS=[ <Funci??n> ]
Slider.Syntax=[ <M??nimo>, <M??ximo>, <Incremento>, <Velocidad>, <Ancho>, <??ngulo o no (true/false)>, <Horizontal o no (true/false)>, <Animado o no (true/false)>, <Aleatorio o no (true/false)> ]
Slope.Syntax=[ <Recta> ]
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <N??mero n> ]\n[ <f(x, y)>, <N??mero n>, <Factor longitud a> ]\n[ <f(x, y)>, <N??mero n>, <Factor longitud a>, <M??n x>, <M??n y>, <M??x x>, <M??x y> ]
SlowPlot=TrazadoLento
SlowPlot.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Repetir (true/false)> ]
Solutions.Syntax=[ <Ecuaci??n> ]
Solutions.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]
Solve.Syntax=[ <Ecuaci??n> ]
Solve.SyntaxCAS=[ <Ecuaci??n en x> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]\n[ <Lista de ecuaciones param??tricas>, <Lista de Variables> ]\n[ <Ecuaci??n>, <Variable>, <Lista de suposiciones> ]
SolveCubic=SolucionesC??bica
SolveCubic.SyntaxCAS=[ <Polinomio C??bico> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Punto en f> ]\n[ <f'(x, y)>, <x inicial>, <y inicial>, <x final>, <Paso> ]\n[ <y'>, <x'>, <x inicial>, <y inicial>, <t final>, <Paso> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x inicial>, <y inicial>, <y' inicial>, <x final>, <Paso> ]
SolveODE.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Punto(s) de f> ]\n[ <Ecuaci??n>, <Punto(s) de f>, <Punto(s) de f'> ]\n[ <Ecuaci??n>, <Variable dependiente>, <Variable independiente>, <Punto(s) de f> ] \n[ <Ecuaci??n>, <Variable dependiente>, <Variable independiente>, <Punto(s) de f>, <Punto(s) de f'> ]
SolveQuartic.SyntaxCAS=[ <Polinomio Cu??rtico> ]
Sort.Syntax=[ <Lista> ]\n[ <Lista>, <Lista modelo> ]
Spearman.Syntax=[ <Lista de puntos> ]\n[ <Lista de n??meros>, <Lista de n??meros> ]
Sphere.Syntax=[ <Punto origen>, <Radio> ]\n[ <Punto origen>, <Punto origen> ]
Spline.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Grado ??? 3> ]\n[ <Lista de puntos>, <Grado ??? 3>, <Funci??n peso> ]
Split.Syntax=[ <Texto>, <Lista de textos para separar> ]
StartAnimation.Syntax=[ ]\n[ <Valor l??gico> ]\n[ <Deslizador o punto>, <Deslizador o punto>, ... ]\n[ <Deslizador o punto>, <Deslizador o punto>, ..., <Valor l??gico> ]
StartRecord.Syntax=[ ]\n[ <Valor l??gico> ]
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Ajuste (-1 | 0 | 1)> ]
StepGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Conectados o no (true/false)> ]\n[ <Lista de abscisas>, <Lista de ordenadas> ]\n[ <Lista de puntos>, <Conectados o no (true/false)>, <Estilo de punto> ]\n[ <Lista de abscisas>, <Lista de ordenadas>, <Conectados o no (true/false)> ]\n[ <Lista de abscisas>, <Lista de ordenadas>, <Conectados o no (true/false)>, <Estilo de punto> ]
StickGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Horizontal o no (true/false)> ]\n[ <Lista de abscisas>, <Lista de ordenadas> ]\n[ <Lista de abscisas>, <Lista de ordenadas>, <Horizontal o no (true/false)> ]
Stretch.Syntax=[ <Objeto>, <Vector> ]\n[ <Objeto>, <Recta>, <Raz??n> ]
Substitute.SyntaxCAS=[ <Expresi??n>, <Lista de reemplazos> ]\n[ <Expresi??n>, <De>, <A> ]
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <N??mero de elementos> ]\n[ <Lista>, <Lista de frecuencias> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]
SumSquaredErrors.Syntax=[ <Lista de puntos>, <Funci??n> ]
SurdText.Syntax=[ <Punto origen> ]\n[ <N??mero> ]\n[ <N??mero>, <Lista> ]
Surface.Syntax=[ <Funci??n>, <??ngulo de rotaci??n (en sentido antihorario)> ]\n[ <Curva>, <??ngulo de rotaci??n (en sentido antihorario)>, <Recta> ]\n[ <Expresi??n>, <Expresi??n>, <Expresi??n>, <Variable 1>, <Valor inicial>, <Valor final>, <Variable 2>, <Valor inicial>, <Valor final> ]
TDistribution.Syntax=[ <Grados de libertad>, <Valor> ]\n[ <Grados de libertad>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
TDistribution.SyntaxCAS=[ <Grados de libertad>, <Valor> ]
TMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Nivel de confianza>, <Agrupado o no (true/false)> ]\n[ <Media (muestral 1)>, <Desviaci??n est??ndar (muestral 1)>, <Tama??o (muestra 1)>, <Media (muestral 2)>, <Desviaci??n est??ndar (muestral 2)>, <Tama??o (muestra 2)>, <Nivel de confianza>, <Agrupado o no (true/false)> ]
TMeanEstimate.Syntax=[ <Lista de datos (muestra)>, <Nivel de confianza> ]\n[ <Media (muestra)>, <Desviaci??n est??ndar (muestra)>, <Tama??o de muestra>, <Nivel de confianza> ]
TTest.Syntax=[ <Lista de datos (muestra)>, <Media (hip??tesis)>, <Cola> ]\n[ <Media (muestra)>, <Desviaci??n est??ndar (muestra)>, <Tama??o de muestra>, <Media (hip??tesis)>, <Cola> ]
TTest2.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Cola>, <Agrupado o no (true/false)> ]\n[ <Media (muestral 1)>, <Desviaci??n est??ndar (muestral 1)>, <Tama??o (muestra 1)>, <Media (muestral 2)>, <Desviaci??n est??ndar (muestral 2)>, <Tama??o (muestra 2)>, <Cola>, <Agrupado o no (true/false)> ]
TTestPaired.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Cola> ]
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Alineaci??n del texto> ]\n[ <Lista>, <Lista>, ..., <Alineaci??n del texto>, <Anchura m??nima de celda> ]\n[ <Lista>, <Lista>, ..., <Alineaci??n del texto>, <Anchura m??nima de celda>, <Altura m??nima de celda> ]
Take.Syntax=[ <Lista>, <Posici??n inicial>, <Posici??n final> ]\n[ <Lista>, <Posici??n inicial> ]\n[ <Texto>, <Posici??n inicial>, <Posici??n final> ]\n[ <Texto>, <Posici??n inicial> ]
Take.SyntaxCAS=[ <Lista>, <Posici??n inicial> ]\n[ <Lista>, <Posici??n inicial>, <Posici??n final> ]\n[ <Texto>, <Posici??n inicial>, <Posici??n final> ]\n[ <Texto>, <Posici??n inicial> ]
Tangent.Syntax=[ <Punto origen>, <C??nica> ]\n[ <Punto origen>, <Funci??n> ]\n[ <Punto sobre la curva>, <Curva> ]\n[ <Valor de x (punto o n??mero)>, <Funci??n> ]\n[ <Recta>, <C??nica> ]\n[ <C??nica>, <C??nica> ]
Tangent.SyntaxCAS=[ <N??mero>, <Funci??n> ]\n[ <Punto origen>, <Objeto> ]
TaylorSeries.Syntax=[ <Funci??n>, <Valor de x (punto o n??mero)>, <N??mero (orden)> ]
TaylorSeries.SyntaxCAS=[ <Expresi??n>, <Valor de x (punto o n??mero)>, <N??mero (orden)> ]\n[ <Expresi??n>, <Variable>, <Valor>, <N??mero (orden)> ]
Tetrahedron.Syntax=[ <Tri??ngulo equil??tero> ]\n[ <Punto origen>, <Punto origen>, <Punto origen> ]\n[ <Punto origen>, <Punto origen>, <Direcci??n> ]
Text.Syntax=[ <Objeto> ]\n[ <Objeto>, <Sustituye o no las variables (true/false)> ]\n[ <Objeto>, <Punto origen> ]\n[ <Objeto>, <Punto origen>, <Sustituye o no las variables (true/false)> ]\n[ <Objeto>, <Punto origen>, <Sustituye o no las variables (true/false)>, <Valor l??gico para f??rmula LaTeX> ]\n[ <Objeto>, <Punto origen>, <Sustituye o no las variables (true/false)>, <Valor l??gico para f??rmula LaTeX>, <Alineaci??n horizontal -1|0|1> ]\n[ <Objeto>, <Punto origen>, <Sustituye o no las variables (true/false)>, <Valor l??gico para f??rmula LaTeX>, <Alineaci??n horizontal -1|0|1>, <Alineaci??n vertical -1|0|1> ]
TextToUnicode.Syntax=[ <Texto> ]
Textfield.Syntax=[ <Objeto asociado> ]
TiedRank.Syntax=[ <Lista> ]
ToBase.Syntax=[ <N??mero>, <Base> ]
ToComplex.Syntax=[ <Vector> ]
ToExponential.SyntaxCAS=[ <N??mero Complejo> ]
ToPoint.Syntax=[ <N??mero Complejo> ]
ToPolar.Syntax=[ <N??mero Complejo> ]\n[ <Vector> ]
ToolImage.Syntax=[ <N??mero> ]\n[ <N??mero>, <Punto origen> ]\n[ <N??mero>, <Punto origen>, <Punto origen> ]
Top.Syntax=[ <Cu??drica> ]
Translate.Syntax=[ <Objeto>, <Vector> ]\n[ <Vector>, <Punto inicial> ]
Transpose.Syntax=[ <Matriz> ]
TrapezoidalSum.Syntax=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <N??mero de trapezoides> ]
TravelingSalesman.Syntax=[ <Lista de puntos> ]
TriangleCenter.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen>, <N??mero> ]
TriangleCurve.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen>, <Ecuaci??n> ]
Triangular.Syntax=[ <L??mite inferior>, <L??mite superior>, <Modo>, <Valor> ]\n[ <L??mite inferior>, <L??mite superior>, <Modo>, <Valor>, <Acumulada o no (true/false)> ]\n[ <L??mite inferior>, <L??mite superior>, <Modo>, x, <Acumulada o no (true/false)> ]
TrigCombine.Syntax=[ <Expresi??n> ]\n[ <Expresi??n>, <Funci??n modelo> ]
TrigExpand.Syntax=[ <Expresi??n> ]\n[ <Expresi??n>, <Funci??n modelo> ]
TrigExpand.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Funci??n modelo> ]\n[ <Expresi??n>, <Funci??n modelo>, <Variable modelo> ]\n[ <Expresi??n>, <Funci??n modelo>, <Variable modelo>, <Variable modelo> ]
TrigSimplify.Syntax=[ <Expresi??n> ]
Trilinear.Syntax=[ <Punto origen>, <Punto origen>, <Punto origen>, <N??mero>, <N??mero>, <N??mero> ]
TurningPoint.Syntax=[ <Polinomio> ]
TurningPoint.SyntaxCAS=[ <Funci??n> ]
Turtle.Syntax=[]
TurtleBack.Syntax=[ <Tortuga>, <Distancia> ]
TurtleDown.Syntax=[ <Tortuga> ]
TurtleForward.Syntax=[ <Tortuga>, <Distancia> ]
TurtleLeft.Syntax=[ <Tortuga>, <??ngulo de rotaci??n (en sentido antihorario)> ]
TurtleRight.Syntax=[ <Tortuga>, <??ngulo de rotaci??n (en sentido antihorario)> ]
TurtleUp.Syntax=[ <Tortuga> ]
Type.Syntax=[ <Objeto> ]
UnicodeToLetter.Syntax=[ <Entero> ]
UnicodeToText.Syntax=[ <Lista de enteros (unicode)> ]
Uniform.Syntax=[ <L??mite inferior>, <L??mite superior>, <Valor> ]\n[ <L??mite inferior>, <L??mite superior>, <Valor>, <Acumulada o no (true/false)> ]\n[ <L??mite inferior>, <L??mite superior>, x, <Acumulada o no (true/false)> ]
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Pol??gono>, <Pol??gono> ]
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
UnitOrthogonalVector.Syntax3D=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]\n[ <Plano> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vector> ]
UnitVector.Syntax=[ <Objeto> ]
UnitVector.SyntaxCAS=[ <Vector> ]
UpdateConstruction.Syntax=[ ]\n[ <N??mero de veces> ]
UpperSum.Syntax=[ <Funci??n>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <N??mero de rect??ngulos> ]
Variance.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
Vector.Syntax=[ <Punto origen> ]\n[ <Punto inicial>, <Punto final> ]
Vertex.Syntax=[ <C??nica> ]\n[ <Sistema de inecuaciones> ]\n[ <Pol??gono> ]\n[ <Pol??gono>, <N??mero (??ndice)> ]\n[ <Segmento>, <N??mero (??ndice)> ]
VerticalText.Syntax=[ <Texto> ]\n[ <Texto>, <Punto origen> ]
Volume.Syntax=[ <S??lido> ]
Voronoi.Syntax=[ <Lista de puntos> ]
Weibull.Syntax=[ <Figura>, <Escala>, <Valor> ]\n[ <Figura>, <Escala>, <Valor>, <Acumulada o no (true/false)> ]\n[ <Figura>, <Escala>, x, <Acumulada o no (true/false)> ]
Weibull.SyntaxCAS=[ <Figura>, <Escala>, <Valor> ]
ZMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <??1>, <??2>, <Nivel de confianza> ]\n[ <Media (muestral 1)>, <??1>, <Tama??o (muestra 1)>, <Media (muestral 2)>, <??2>, <Tama??o (muestra 2)>, <Nivel de confianza> ]
ZMean2Test.Syntax=[ <Lista de datos (muestra 1)>, <??1>, <Lista de datos (muestra 2)>, <??2>, <Cola> ]\n[ <Media (muestral 1)>, <??1>, <Tama??o (muestra 1)>, <Media (muestral 2)>, <??2>, <Tama??o (muestra 2)>, <Cola> ]
ZMeanEstimate.Syntax=[ <Lista de datos (muestra)>, <??>, <Nivel de confianza> ]\n[ <Media (muestra)>, <??>, <Tama??o de muestra>, <Nivel de confianza> ]
ZMeanTest.Syntax=[ <Lista de datos (muestra)>, <??>, <Media (hip??tesis)>, <Cola> ]\n[ <Media (muestra)>, <??>, <Tama??o de muestra>, <Media (hip??tesis)>, <Cola> ]
ZProportion2Estimate.Syntax=[ <Proporci??n (muestra 1)>, <Tama??o (muestra 1)>, <Proporci??n (muestra 2)>, <Tama??o (muestra 2)>, <Nivel de confianza> ]
ZProportion2Test.Syntax=[ <Proporci??n (muestra 1)>, <Tama??o (muestra 1)>, <Proporci??n (muestra 2)>, <Tama??o (muestra 2)>, <Cola> ]
ZProportionEstimate.Syntax=[ <Proporci??n (muestra)>, <Tama??o de muestra>, <Nivel de confianza> ]
ZProportionTest.Syntax=[ <Proporci??n (muestra)>, <Tama??o de muestra>, <Proporci??n (hip??tesis)>, <Cola> ]
Zip.Syntax=[ <Expresi??n>, <Variable 1>, <Lista 1>, <Variable 2>, <Lista 2>, ... ]
Zipf.Syntax=[ <N??mero de elementos>, <Exponente> ]\n[ <N??mero de elementos>, <Exponente>, <Acumulada o no (true/false)> ]\n[ <N??mero de elementos>, <Exponente>, <Valor>, <Acumulada o no (true/false)> ]
Zipf.SyntaxCAS=[ <N??mero de elementos>, <Exponente>, <Valor>, <Acumulada o no (true/false)> ]
ZoomIn.Syntax=[ ]\n[ <Factor de escala> ]\n[ <Factor de escala>, <Punto central> ]\n[ <M??n x>, <M??n y>, <M??x x>, <M??x y> ]\n[ <M??n x>, <M??n y>, <M??n z>, <M??x x>, <M??x y>, <M??x z> ]
ZoomOut.Syntax=[ <Factor de escala> ]\n[ <Factor de escala>, <Punto central> ]
mad.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
mean.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
nCr.Syntax=[ <N??mero n>, <N??mero r> ]
stdev=dsvst
stdev.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]
stdevp=dsvstm
stdevp.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de n??meros>, <Lista de frecuencias> ]