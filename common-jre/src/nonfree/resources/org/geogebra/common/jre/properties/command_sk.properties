# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA=AnVar
ANOVA.Syntax=[ <Zoznam>, <Zoznam>, ... ]
AffineRatio=DeliaciPomer
AffineRatio.Syntax=[ <Bod>, <Bod>, <Bod> ]
Angle=Uhol
Angle.Syntax=[ <Objekt> ]\n[ <Vektor>, <Vektor> ]\n[ <Priamka>, <Priamka> ]\n[ <Bod>, <Vrchol>, <Bod> ]\n[ <Bod>, <Vrchol>, <Uhol> ]
Angle.Syntax3D=[ <Objekt> ]\n[ <Vektor>, <Vektor> ]\n[ <Priamka>, <Priamka> ]\n[ <Priamka>, <Rovina> ]\n[ <Rovina>, <Rovina> ]\n[ <Bod>, <Vrchol>, <Bod> ]\n[ <Bod>, <Vrchol>, <Uhol> ]\n[ <Bod>, <Bod>, <Bod>, <Smer> ]
AngularBisector=OsUhla
AngularBisector.Syntax=[ <Priamka>, <Priamka> ]\n[ <Bod>, <Bod>, <Bod> ]
Append=Pripoji??
Append.Syntax=[ <Zoznam>, <Objekt> ]\n[ <Objekt>, <Zoznam> ]
ApplyMatrix=TranfS??radn??c
ApplyMatrix.Syntax=[ <Matica>, <Objekt> ]
Arc=Obl??k
Arc.Syntax=[ <Kru??nica>, <Bod>, <Bod> ]\n[ <Elipsa>, <Bod>, <Bod> ]\n[ <Kru??nica>, <Hodnota parametra>, <Hodnota parametra> ]\n[ <Elipsa>, <Hodnota parametra>, <Hodnota parametra> ]
AreCollinear=S??Koline??rne
AreCollinear.Syntax=[ <Bod>, <Bod>, <Bod> ]
AreConcurrent=S??R??znobe??n??
AreConcurrent.Syntax=[ <Priamka>, <Priamka>, <Priamka> ]
AreConcyclic=S??Koncyklick??
AreConcyclic.Syntax=[ <Bod>, <Bod>, <Bod>, <Bod> ]
AreCongruent=Zodpovedaj??Si
AreCongruent.Syntax=[ <Objekt>, <Objekt> ]
AreEqual=S??Zhodn??
AreEqual.Syntax=[ <Objekt>, <Objekt> ]
AreParallel=S??Rovnobe??n??
AreParallel.Syntax=[ <Priamka>, <Priamka> ]
ArePerpendicular=S??Kolm??
ArePerpendicular.Syntax=[ <Priamka>, <Priamka> ]
Area=Obsah
Area.Syntax=[ <Ku??e??ose??ka> ]\n[ <Mnohouholn??k> ]\n[ <Bod>, ..., <Bod> ]
Assume.SyntaxCAS=[ <Podmienka>, <V??raz> ]
Asymptote=Asymptota
Asymptote.Syntax=[ <Objekt> ]
AttachCopyToView=Prilo??K??piuKVzh??adu
AttachCopyToView.Syntax=[ <Objekt>, <Vzh??ad 0|1|2> ]\n[ <Objekt>, <Vzh??ad 0|1|2>, <Bod 1>, <Bod 2>, <Obraz bodu 1>, <Obraz bodu 2> ]
Axes=Osi
Axes.Syntax=[ <Ku??e??ose??ka> ]
Axes.Syntax3D=[ <Ku??e??ose??ka> ]\n[ <Kvadratick?? tvar> ]
AxisStepX=KrokOsiX
AxisStepX.Syntax=[ ]
AxisStepY=KrokOsiY
AxisStepY.Syntax=[ ]
BarChart=St??pcov??Graf
BarChart.Syntax=[ <Zoznam ??dajov>, <Zoznam po??etnost??> ]\n[ <Zoznam zdrojov??ch ??dajov>, <????rka st??pcov>, <Vertik??ln?? faktor (opcion??lne)> ]\n[ <Zoznam ??dajov>, <Zoznam po??etnost??>, <????rka st??pcov> ]\n[ <od>, <do>, <Zoznam v????ok> ]\n[ <od>, <do>, <V??raz>, <Premenn??>, <od ????sla>, <do ????sla> ]\n[ <od>, <do>, <V??raz>, <Premenn??>, <od ????sla>, <do ????sla>, <????rka kroku> ]
Barycenter=Barycentrum
Barycenter.Syntax=[ <Zoznam bodov>, <Zoznam v??h> ]
Bernoulli.Syntax=[ <Pravdepodobnos??>, <Logicky kumulat??vne> ]
BetaDist.Syntax=[ <Alpha>, <Beta>, <Po??et ??spechov> ]\n[ <Alpha>, <Beta>, <Po??et ??spechov>, <Logicky kumulat??vne>  ]\n[ <Alpha>, <Beta>, x, <Logicky kumulat??vne> ]
Binomial=Binomick??Koeficient
Binomial.Syntax=[ <????slo n>, <????slo k> ]
BinomialDist=Binomick??Rozdelenie
BinomialDist.Syntax=[ <Po??et pokusov>, <Pravdepodobnos?? ??spechu> ]\n[ <Po??et pokusov>, <Pravdepodobnos?? ??spechu>, <Logicky kumulat??vne> ]\n[ <Po??et pokusov>, <Pravdepodobnos?? ??spechu>, <List of Values> ]\n[ <Po??et pokusov>, <Pravdepodobnos?? ??spechu>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
BinomialDist.SyntaxCAS=[ <Po??et pokusov>, <Pravdepodobnos?? ??spechu>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
Bottom=Spodok
Bottom.Syntax=[ <Kvadratick?? tvar> ]
BoxPlot=BoxDiagram
BoxPlot.Syntax=[ <yOffset>, <yRozsah>, <Zoznam zdrojov??ch ??dajov> ]\n[ <yOffset>, <yRozsah>, <Zoznam zdrojov??ch ??dajov>, <Logicky od??ahl??> ]\n[ <yOffset>, <yRozsah>, <Zoznam ??dajov>, <Zoznam po??etnost??>, <Logicky od??ahl??> ]\n[ <yOffset>, <yRozsah>, <od>, <Q1>, <Median>, <Q3>, <do> ]
Button=Tla??idlo
Button.Syntax=[ ]\n[ <Napdis> ]
CASLoaded.Syntax=[]
CFactor=CFaktor
CFactor.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Premenn??> ]
CIFactor=CIFaktor
CIFactor.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Premenn??> ]
CSolutions=CRie??enie
CSolutions.SyntaxCAS=[ <Rovnica> ]\n[ <Rovnica>, <Premenn??> ]\n[ <Zoznam rovn??c>, <Zoznam premenn??ch> ]
CSolve=CRie??i??
CSolve.SyntaxCAS=[ <Rovnica> ]\n[ <Rovnica>, <Premenn??> ]\n[ <Zoznam rovn??c>, <Zoznam premenn??ch> ]
Cauchy.Syntax=[ <Median>, <Rozsah>, <Po??et ??spechov> ]\n[ <Median>, <Rozsah>, <Po??et ??spechov>, <Logicky kumulat??vne>  ]\n[ <Median>, <Rozsah>, x, <Logicky kumulat??vne> ]
Cauchy.SyntaxCAS=[ <Median>, <Rozsah>, <Po??et ??spechov> ]
Cell=Bunka
Cell.Syntax=[ <Stlpec>, <Riadok> ]
CellRange=RozsahBunky
CellRange.Syntax=[ <Za??iatok bunky>, <Koniec bunky> ]
Center=StredKu??e??ose??ky
Center.Syntax=[ <Ku??e??ose??ka> ]
Center.Syntax3D=[ <Ku??e??ose??ka> ]\n[ <Kvadratick?? tvar> ]
CenterView=StredN??kresne
CenterView.Syntax=[ <Stred n??kresne> ]
Centroid=??a??isko
Centroid.Syntax=[ <Mnohouholn??k> ]
CharacteristicPolynomial.Syntax=[ <Matica> ]
Checkbox=Pol????ko
Checkbox.Syntax=[ ]\n[ <Napdis> ]\n[ <Zoznam> ]\n[ <Napdis>, <Zoznam> ]
ChiSquared=ChiKvadr??t
ChiSquared.Syntax=[ <Stupe?? vo??nosti>, <Po??et ??spechov> ]\n[ <Stupe?? vo??nosti>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Stupe?? vo??nosti>, x, <Logicky kumulat??vne> ]
ChiSquared.SyntaxCAS=[ <Stupe?? vo??nosti>, <Premenn??> ]
ChiSquaredTest=ChiKvadr??tTest
ChiSquaredTest.Syntax=[ <Matica> ]\n[ <Zoznam>, <Zoznam> ]\n[ <Matica>, <Matica> ]
Circle=Kru??nica
Circle.Syntax=[ <Bod>, <Polomer - ????slo> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Bod> ]
Circle.Syntax3D=[ <Bod>, <Polomer - ????slo> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Priamka>, <Bod> ]\n[ <Bod>, <Radius>, <Smer> ]\n[ <Bod>, <Bod>, <Smer> ]
CircleArc=Kru??nicov??Obl??k
CircleArc.Syntax=[ <Stred>, <Bod>, <Bod> ]
CircleSector=Kruhov??V??sek
CircleSector.Syntax=[ <Stred>, <Bod>, <Bod> ]
CircumcircleArc=Op??san??Kru??nicov??Obl??k
CircumcircleArc.Syntax=[ <Bod>, <Bod>, <Bod> ]
CircumcircleSector=Op??san??Kruhov??V??sek
CircumcircleSector.Syntax=[ <Bod>, <Bod>, <Bod> ]
Circumference=Obvod
Circumference.Syntax=[ <Ku??e??ose??ka> ]
Classes=Triedy
Classes.Syntax=[ <Zoznam ??dajov>, <Po??et tried> ]\n[ <Zoznam ??dajov>, <??tart>, <????rka tried> ]
ClosestPoint=Najbli??????Bod
ClosestPoint.Syntax=[ <Cesta>, <Bod> ]\n[ <Priamka>, <Priamka> ]
ClosestPointRegion=NajblizsiBodOblasti
ClosestPointRegion.Syntax=[ <Oblas??>, <Bod> ]
Coefficients=Koeficienty
Coefficients.Syntax=[ <Polyn??m> ]\n[ <Ku??e??ose??ka> ]
Coefficients.SyntaxCAS=[ <Polyn??m> ]\n[ <Polyn??m>, <Premenn??> ]
Column=St??pec
Column.Syntax=[ <Tabu??ka> ]
ColumnName=N??zovSt??pca
ColumnName.Syntax=[ <Tabu??ka> ]
Command=Pr??kaz
CommonDenominator=Spolo??n??Menovate??
CommonDenominator.Syntax=[ <V??raz>, <V??raz> ]
CompleteSquare=??pln????tvorec
CompleteSquare.Syntax=[ <Kvadratick?? funkciaj> ]
ComplexRoot=Komplexn??Kore??
ComplexRoot.Syntax=[ <Polyn??m> ]
Cone=Ku??e??
Cone.Syntax=[ <Kru??nica>, <V????ka> ]\n[ <Bod>, <Bod>, <Radius> ]\n[ <Bod>, <Vektor>, <Uhol> ]
ConeInfinite=Nekone??n??Ku??e??
ConeInfinite.Syntax=[ <Bod>, <Vektor>, <Uhol> ]\n[ <Bod>, <Bod>, <Uhol> ]\n[ <Bod>, <Priamka>, <Uhol> ]
Conic=Ku??e??ose??ka
Conic.Syntax=[ <Zoznam> ]\n[ <Bod>, <Bod>, <Bod>, <Bod>, <Bod> ]\n[ <????slo>, <????slo>, <????slo>, <????slo>, <????slo>, <????slo> ]
ConstructionStep=Kon??tru??n??Krok
ConstructionStep.Syntax=[ ]\n[ <Objekt> ]
ContingencyTable=Kontingen??n??Tabu??ka
ContingencyTable.Syntax=[ <Zoznam textu>, <Zoznam textu> ]\n[ <Zoznam textu>, <Zoznam textu>, <Mo??nosti> ]\n[ <Zoznam hodn??t riadkov>, <Zoznam hodn??t st??pcov>, <Tabu??ka po??etnost??> ]\n[ <Zoznam hodn??t riadkov>, <Zoznam hodn??t st??pcov>, <Tabu??ka po??etnost??> , <Mo??nosti> ]
ContinuedFraction=Re??azov??Zlomok
ContinuedFraction.Syntax=[ <????slo> ]\n[ <????slo>, <Stupe??> ]\n[ <????slo>, <Stupe??>, <Skr??tene true|false> ]
ConvexHull=Konvexn??Obal
ConvexHull.Syntax=[ <Zoznam bodov> ]
CopyFreeObject=Kop??rova??Vo??n??Objekt
CopyFreeObject.Syntax=[ <Objekt> ]
Corner=Rohov??Bod
Corner.Syntax=[ <????slo rohu> ]\n[ <Obraz>, <????slo rohu> ]\n[ <Text>, <????slo rohu> ]\n[ <Grafick?? vzh??ad>, <????slo rohu> ]
CountIf=S????ta??Ak
CountIf.Syntax=[ <Podmienka>, <Zoznam> ]\n[ <Podmienka>, <Premenn??>, <Zoznam> ]
Covariance=Kovariancia
Covariance.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam ??isel>, <Zoznam ??isel> ]
Cross=Vektorov??S????in
Cross.Syntax=[ <Vektor>, <Vektor> ]
CrossRatio=Dvojpomer
CrossRatio.Syntax=[ <Bod>, <Bod>, <Bod>, <Bod> ]
Cube=Kocka
Cube.Syntax=[ <Square> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Smer> ]
Cubic=Kubick??
Cubic.Syntax=[ <Bod>, <Bod>, <Bod>, <????slo> ]
Curvature=Zakrivenie
Curvature.Syntax=[ <Bod>, <Objekt> ]
CurvatureVector=VektorZakrivenia
CurvatureVector.Syntax=[ <Bod>, <Objekt> ]
CurveCartesian=Krivka
CurveCartesian.Syntax=[ <V??raz>, <V??raz>, <Parameter>, <od>, <do> ]
CurveCartesian.Syntax3D=[ <V??raz>, <V??raz>, <Parameter>, <od>, <do> ]\n[ <V??raz>, <V??raz>, <V??raz>, <Parameter>, <od>, <do> ]
Cylinder=Valec
Cylinder.Syntax=[ <Kru??nica>, <V????ka> ]\n[ <Bod>, <Bod>, <Radius> ]
CylinderInfinite=Nekone??n??Valec
CylinderInfinite.Syntax=[ <Priamka>, <Radius> ]\n[ <Bod>, <Vektor>, <Radius> ]\n[ <Bod>, <Bod>, <Radius> ]
DataFunction=D??tov??Funkcia
DataFunction.Syntax=[ <Zoznam ??isel>, <Zoznam ??isel> ]
Defined=Definovan??
Defined.Syntax=[ <Objekt> ]
Degree=Stupe??
Degree.Syntax=[ <Polyn??m> ]
Degree.SyntaxCAS=[ <Polyn??m> ]\n[ <Polyn??m>, <Premenn??> ]
DelauneyTriangulation=DelaunayTriangulariz??cia
DelauneyTriangulation.Syntax=[ <Zoznam bodov> ]
Delete=Zmaza??
Delete.Syntax=[ <Objekt> ]
Denominator=Menovate??
Denominator.Syntax=[ <????slo> ]\n[ <Funkcia> ]
Denominator.SyntaxCAS=[ <V??raz> ]
DensityPlot=Tla??Hustotu
Derivative=Deriv??cia
Derivative.Syntax=[ <Funkcia> ]\n[ <Krivka> ]\n[ <Funkcia>, <????slo> ]\n[ <Funkcia>, <Premenn??> ]\n[ <Krivka>, <????slo> ]\n[ <Funkcia>, <Premenn??>, <????slo> ]
Derivative.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Premenn??> ]\n[ <V??raz>, <Premenn??>, <????slo> ]
Determinant.Syntax=[ <Matica> ]
Diameter=PriemerKu??elose??ky
Diameter.Syntax=[ <Vektor>, <Ku??e??ose??ka> ]\n[ <Priamka>, <Ku??e??ose??ka> ]
Difference=Rozdiel
Difference.Syntax=[ <Mnohouholn??k>, <Mnohouholn??k> ]
Dilate=Rovno??ahlos??
Dilate.Syntax=[ <Objekt>, <Koeficient rovno??ahlosti> ]\n[ <Objekt>, <Koeficient rovno??ahlosti>, <Stred rovno??ahlosti> ]
Dimension=Dimenzia
Dimension.Syntax=[ <Objekt> ]
Direction=Smer
Direction.Syntax=[ <Priamka> ]
Directrix=Ur??uj??caPriamka
Directrix.Syntax=[ <Ku??e??ose??ka> ]
Distance=Vzdialenos??
Distance.Syntax=[ <Bod>, <Objekt> ]\n[ <Priamka>, <Priamka> ]\n[ <Rovina>, <Rovina> ]
Distance.SyntaxCAS=[ <Bod>, <Objekt> ]
Div=Deli??
Div.Syntax=[ <Delenec>, <Delite??> ]\n[ <Polyn??m>, <Polyn??m> ]
Division=Delenie
Division.Syntax=[ <Delenec>, <Delite??> ]\n[ <Polyn??m>, <Polyn??m> ]
Divisors=Delite??
Divisors.Syntax=[ <????slo> ]
DivisorsList=ZoznamDelite??ov
DivisorsList.Syntax=[ <????slo> ]
DivisorsSum=S????etDelite??ov
DivisorsSum.Syntax=[ <????slo> ]
Dodecahedron=Dodeka??der
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Smer> ]
Dot=Skal??rnyS????in
Dot.Syntax=[ <Vektor>, <Vektor> ]
DotPlot=Bodov??Diagram
DotPlot.Syntax=[ <Zoznam zdrojov??ch ??dajov>, <Zoskupeni?? bl??zke body (opcion??lne)>, <Faktor (opcion??lne)>]
DynamicCoordinates=Dynamick??S??radnice
DynamicCoordinates.Syntax=[ <Bod>, <x-ov?? s??radnica>, <y-ov?? s??radnica> ]\n[ <Bod>, <x-ov?? s??radnica>, <y-ov?? s??radnica>, <z-ov?? s??radnica> ]
Eccentricity=Excentricita
Eccentricity.Syntax=[ <Ku??e??ose??ka> ]
Eigenvalues.SyntaxCAS=[ <Matica> ]
Eigenvectors.SyntaxCAS=[ <Matica> ]
Element=Prvok
Element.Syntax=[ <Zoznam>, <Poz??cia> ]\n[ <Matica>, <Riadok>, <Stlpec> ]\n[ <Zoznam>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Zoznam>, <Poz??cia> ]\n[ <Matica>, <Riadok>, <Stlpec> ]
Eliminate=Eliminova??
Eliminate.Syntax=[ <Zoznam polyn??mov>, <Zoznam premenn??ch> ]
Ellipse=Elipsa
Ellipse.Syntax=[ <Ohnisko>, <Ohnisko>, <Hlavn?? polos> ]\n[ <Ohnisko>, <Ohnisko>, <??se??ka> ]\n[ <Ohnisko>, <Ohnisko>, <Bod> ]
Ends=Konce
Ends.Syntax=[ <Kvadratick?? tvar> ]
Envelope=KryciaKrivka
Envelope.Syntax=[ <Cesta>, <Bod> ]
Erlang.Syntax=[ <Tvar>, <Sadzba>, <Po??et ??spechov> ]\n[ <Tvar>, <Sadzba>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Tvar>, <Sadzba>, x, <Logicky kumulat??vne> ]
Evaluate=Vypo????ta??
Excentricity=Line??rnaExcentricita
Excentricity.Syntax=[ <Ku??e??ose??ka> ]
Execute=Vykona??
Execute.Syntax=[ <Zoznam textu> ]\n[ <Zoznam textu>, <Parameter>, <Parameter>, ... ]
Expand=Rozn??sob
Expand.Syntax=[ <V??raz> ]
Exponential=Exponenci??lneRozdelenie
Exponential.Syntax=[ <Lambda>, <Po??et ??spechov> ]\n[ <Lambda>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Lambda>, x, <Logicky kumulat??vne> ]
Exponential.SyntaxCAS=[ <Lambda>, <Po??et ??spechov> ]
ExportImage.Syntax=[ <Property>, <Hodnota>, <Property>, <Hodnota>, ... ]
ExtendedGCD.Syntax=[ <Cel?? ????slo>, <Cel?? ????slo>]\n[ <Polyn??m>, <Polyn??m>]
Extremum=Extr??m
Extremum.Syntax=[ <Polyn??m> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]
Extremum.SyntaxCAS=[ <Funkcia> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]
FDistribution=FRozdelenie
FDistribution.Syntax=[ <Stupe?? vo??nosti ??itate??a>, <Stupe?? vo??nosti menovate??a>, <Po??et ??spechov> ]\n[ <Stupe?? vo??nosti ??itate??a>, <Stupe?? vo??nosti menovate??a>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Stupe?? vo??nosti ??itate??a>, <Stupe?? vo??nosti menovate??a>, x, <Logicky kumulat??vne> ]
FDistribution.SyntaxCAS=[ <Stupe?? vo??nosti ??itate??a>, <Stupe?? vo??nosti menovate??a>, <Po??et ??spechov> ]
Factor=Rozlo??NaS????in
Factor.Syntax=[ <Polyn??m> ]
Factor.SyntaxCAS=[ <????slo> ]\n[ <Polyn??m> ]\n[ <V??raz>, <Premenn??> ]
Factors=Faktoriz??cia
Factors.Syntax=[ <Polyn??m> ]\n[ <????slo> ]
FillCells=Vypl??Bunku
FillCells.Syntax=[ <Rozsah buniek>, <Objekt> ]\n[ <Bunka>, <Zoznam> ]\n[ <Bunka>, <Matica> ]
FillColumn=Vypl??St??pec
FillColumn.Syntax=[ <Stlpec>, <Zoznam> ]
FillRow=Vypl??Riadok
FillRow.Syntax=[ <Riadok>, <Zoznam> ]
First=Prv??
First.Syntax=[ <Zoznam> ]\n[ <Text> ]\n[ <Zoznam>, <Po??et prvkov> ]\n[ <Text>, <Po??et prvkov> ]\n[ <Mno??ina bodov>, <Po??et prvkov> ]
First.SyntaxCAS=[ <Zoznam> ]\n[ <Zoznam>, <Po??et prvkov> ]
FirstAxis=Hlavn??Os
FirstAxis.Syntax=[ <Ku??e??ose??ka> ]
FirstAxisLength=D????kaHlavnejPoloOsi
FirstAxisLength.Syntax=[ <Ku??e??ose??ka> ]
Fit=Prilo??
Fit.Syntax=[ <Zoznam bodov>, <Zoznam funkci??> ]\n[ <Zoznam bodov>, <Funkcia> ]
FitExp=Prilo??Exp
FitExp.Syntax=[ <Zoznam bodov> ]
FitGrowth=Prilo??Rast
FitGrowth.Syntax=[ <Zoznam bodov> ]
FitImplicit=Prilo??Implicit
FitImplicit.Syntax=[ <Zoznam bodov>, <Stupe??> ]
FitLineX=Prilo??PriamkuX
FitLineX.Syntax=[ <Zoznam bodov> ]
FitLineY=Prilo??Priamku
FitLineY.Syntax=[ <Zoznam bodov> ]
FitLog=Prilo??Log
FitLog.Syntax=[ <Zoznam bodov> ]
FitLogistic=Prilo??Logistick??
FitLogistic.Syntax=[ <Zoznam bodov> ]
FitPoly=Prilo??Poly
FitPoly.Syntax=[ <Zoznam bodov>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow=Prilo??Mocn
FitPow.Syntax=[ <Zoznam bodov> ]
FitSin=Prilo??Sin
FitSin.Syntax=[ <Zoznam bodov> ]
Flatten=zrovna??
Flatten.Syntax=[ <Zoznam> ]
Focus=Ohnisko
Focus.Syntax=[ <Ku??e??ose??ka> ]
FractionText=ZlomokText
FractionText.Syntax=[ <????slo> ]\n[ <Bod> ]\n[ <????slo>, <Boolean Single fraction> ]
Frequency=Frekvencia
Frequency.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Logicky kumulat??vne>, <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam textu>, <Zoznam textu> ]\n[ <Logicky kumulat??vne>, <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)> ]\n[ <Logicky kumulat??vne>, <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)> ]
FrequencyPolygon=FrekvenciaPolygon
FrequencyPolygon.Syntax=[ <Zoznam hran??c tried>, <Zoznam v????ok> ]\n[ <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Boolean Use Density>, <Faktor hustoty (opcion??lne)> ]\n[ <Logicky kumulat??vne>, <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Boolean Use Density>, <Faktor hustoty (opcion??lne)> ]
FrequencyTable=FrekvenciaTabu??ky
FrequencyTable.Syntax=[ <Zoznam zdrojov??ch ??dajov>, <Faktor (opcion??lne)> ]\n[ <Logicky kumulat??vne>, <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov> ]\n[ <Logicky kumulat??vne>, <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)> ]\n[ <Logicky kumulat??vne>, <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)> ]
FromBase=SoZ??kladom
FromBase.Syntax=[ <????slo ako text>, <Z??klad> ]
Function=Funkcia
Function.Syntax=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Zoznam ??isel> ]
Function.Syntax3D=[ <Zoznam ??isel> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <V??raz>, <1. parameter>, <od>, <do>, <2. parameter>, <od>, <do> ]
Function.SyntaxCAS=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]
FutureValue=Bud??caHodnota
FutureValue.Syntax=[ <Sadzba>, <Po??et obdob??>, <Spl??tka>, <S????asn?? hodnota (volite??n??)>, <Typ (volite??n??)> ]
GCD=NSD
GCD.Syntax=[ <Zoznam ??isel> ]\n[ <????slo>, <????slo> ]
GCD.SyntaxCAS=[ <Zoznam ??isel> ]\n[ <Zoznam polyn??mov> ]\n[ <????slo>, <????slo> ]\n[ <Polyn??m>, <Polyn??m> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <Po??et ??spechov> ]\n[ <Alpha>, <Beta>, <Po??et ??spechov>, <Logicky kumulat??vne>  ]\n[ <Alpha>, <Beta>, x, <Logicky kumulat??vne> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <Po??et ??spechov> ]
GeometricMean=Geometrick??Priemer
GeometricMean.Syntax=[ <Zoznam ??isel> ]
GetTime=??as
GetTime.Syntax=[]\n[ <Form??t> ]
GroebnerDegRevLex.Syntax=[ <Zoznam polyn??mov> ]\n[ <Zoznam polyn??mov>, <Zoznam premenn??ch> ]
GroebnerLex.Syntax=[ <Zoznam polyn??mov> ]\n[ <Zoznam polyn??mov>, <Zoznam premenn??ch> ]
GroebnerLexDeg.Syntax=[ <Zoznam polyn??mov> ]\n[ <Zoznam polyn??mov>, <Zoznam premenn??ch> ]
HarmonicMean=Harmonick??Priemer
HarmonicMean.Syntax=[ <Zoznam ??isel> ]
Height=V????ka
Height.Syntax=[ <Teleso> ]
HideLayer=Skry??Vrstvu
HideLayer.Syntax=[ <????slo> ]
Histogram.Syntax=[ <Zoznam hran??c tried>, <Zoznam v????ok> ]\n[ <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)> ]\n[ <Logicky kumulat??vne>, <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)> ]
HistogramRight=HistogramPrav??
HistogramRight.Syntax=[ <Zoznam hran??c tried>, <Zoznam v????ok> ]\n[ <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)>  ]\n[ <Logicky kumulat??vne>, <Zoznam hran??c tried>, <Zoznam zdrojov??ch ??dajov>, <Pou??i?? hustotu>, <Faktor hustoty (opcion??lne)> ]
HyperGeometric=Hipergeometrick??Rozdelenie
HyperGeometric.Syntax=[ <Ve??kos?? popul??cie>, <Po??et ??spechov>, <Ve??kos?? vzorky> ]\n[ <Ve??kos?? popul??cie>, <Po??et ??spechov>, <Ve??kos?? vzorky>, <Logicky kumulat??vne> ]\n[ <Ve??kos?? popul??cie>, <Po??et ??spechov>, <Ve??kos?? vzorky>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
HyperGeometric.SyntaxCAS=[ <Ve??kos?? popul??cie>, <Po??et ??spechov>, <Ve??kos?? vzorky>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
Hyperbola.Syntax=[ <Ohnisko>, <Ohnisko>, <Hlavn?? polos> ]\n[ <Ohnisko>, <Ohnisko>, <??se??ka> ]\n[ <Ohnisko>, <Ohnisko>, <Bod> ]
IFactor=IFaktor
IFactor.Syntax=[ <Polyn??m> ]
IFactor.SyntaxCAS=[ <V??raz> ]
Icosahedron=Ikoza??der
Icosahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Smer> ]
Identity=Identita
Identity.Syntax=[ <????slo> ]
If=Ak
If.Syntax=[ <Podmienka>, <Potom> ]\n[ <Podmienka>, <Potom>, <Inak> ]
ImplicitCurve=Implicitn??Krivka
ImplicitCurve.Syntax=[ <Zoznam bodov> ]\n[ <f(x, y)> ]
ImplicitDerivative=Implicitn??Deriv??cia
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <V??raz>, <Z??visl?? premenn??>, <Nez??visl?? premenn??> ]
Incircle=Vp??san??Kru??nica
Incircle.Syntax=[ <Bod>, <Bod>, <Bod> ]
IndexOf=N??jdi
IndexOf.Syntax=[ <Objekt>, <Zoznam> ]\n[ <Text>, <Text> ]\n[ <Objekt>, <Zoznam>, <??tart od> ]\n[ <Text>, <Text>, <??tart od> ]
Insert=Vlo??
Insert.Syntax=[ <Zoznam>, <Zoznam>, <Poz??cia> ]\n[ <Objekt>, <Zoznam>, <Poz??cia> ]
Integral=Integr??l
Integral.Syntax=[ <Funkcia> ]\n[ <Funkcia>, <Premenn??> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu>, <Logick?? hodnota> ]
Integral.SyntaxCAS=[ <Funkcia> ]\n[ <Funkcia>, <Premenn??> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <Premenn??>, <od>, <do> ]
IntegralBetween=Integr??lMedzi
IntegralBetween.Syntax=[ <Funkcia>, <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu>, <Logick?? hodnota> ]
IntegralBetween.SyntaxCAS=[ <Funkcia>, <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <Funkcia>, <Premenn??>, <od>, <do> ]
IntegralSymbolic.Syntax=[ <Funkcia> ]\n[ <Funkcia>, <Premenn??> ]
InteriorAngles.Syntax=[ <Mnohouholn??k> ]
Intersect=Priese??n??k
Intersect.Syntax=[ <Objekt>, <Objekt> ]\n[ <Objekt>, <Objekt>, <????slo prese??n??ku> ]\n[ <Objekt>, <Objekt>, <Za??iato??n?? bod> ]\n[ <Funkcia>, <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <1. krivka>, <2. krivka>, <1. parameter>, <2. parameter> ]
Intersect.SyntaxCAS=[ <Funkcia>, <Funkcia> ]
IntersectConic=PrienikovaKuzelosecka
IntersectConic.Syntax=[ <Rovina>, <Kvadratick?? tvar> ]\n[ <Kvadratick?? tvar>, <Kvadratick?? tvar> ]
IntersectPath=PrienikCiest
IntersectPath.Syntax=[ <Priamka>, <Mnohouholn??k> ]\n[ <Mnohouholn??k>, <Mnohouholn??k> ]
IntersectPath.Syntax3D=[ <Priamka>, <Mnohouholn??k> ]\n[ <Mnohouholn??k>, <Mnohouholn??k> ]\n[ <Rovina>, <Mnohouholn??k> ]\n[ <Rovina>, <Kvadratick?? tvar> ]
Intersection=Prienik
Intersection.Syntax=[ <Zoznam>, <Zoznam> ]
InverseBeta.Syntax=[ <Alpha>, <Beta>, <Pravdepodobnos??> ]
InverseBinomial=Inverzn??Binomi??lne
InverseBinomial.Syntax=[ <Po??et pokusov>, <Pravdepodobnos?? ??spechu>, <Cumulative Probability> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulative Probability>, <Pravdepodobnos?? ??spechu>, <Po??et ??spechov> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulative Probability>, <Pravdepodobnos?? ??spechu>, <Po??et ??spechov> ]
InverseCauchy=Inverzn??Cauchy
InverseCauchy.Syntax=[ <Median>, <Rozsah>, <Pravdepodobnos??> ]
InverseChiSquared=Inverzn??ChiKvadr??t
InverseChiSquared.Syntax=[ <Stupe?? vo??nosti>, <Pravdepodobnos??> ]
InverseExponential=Inverzn??Exponenci??lne
InverseExponential.Syntax=[ <Lambda>, <Pravdepodobnos??> ]
InverseFDistribution=Inverzn??FRozdelenie
InverseFDistribution.Syntax=[ <Stupe?? vo??nosti ??itate??a>, <Stupe?? vo??nosti menovate??a>, <Pravdepodobnos??> ]
InverseGamma=Inverzn??Gamma
InverseGamma.Syntax=[ <Alpha>, <Beta>, <Pravdepodobnos??> ]
InverseHyperGeometric=Inverzn??Hypergeometrick??
InverseHyperGeometric.Syntax=[ <Ve??kos?? popul??cie>, <Po??et ??spechov>, <Ve??kos?? vzorky>, <Pravdepodobnos??> ]
InverseLaplace=Inverzn??Laplace
InverseLaplace.Syntax=[ <Funkcia> ]\n[ <Funkcia>, <Premenn??> ]\n[ <Funkcia>, <Premenn??>, <Premenn??> ]
InverseLogNormal=InverzneLogNorm??lne
InverseLogNormal.Syntax=[ <Priemer>, <??tandardn?? devi??cia>, <Pravdepodobnos??> ]
InverseLogistic=InverzneLogistick??
InverseLogistic.Syntax=[ <Priemer>, <Rozsah>, <Pravdepodobnos??> ]
InverseNormal=Inverzn??Norm??lne
InverseNormal.Syntax=[ <Priemer>, <??tandardn?? devi??cia>, <Cumulative Probability> ]
InversePascal=Inverzn??Pascal
InversePascal.Syntax=[ <Po??et ??spechov>, <Pravdepodobnos?? ??spechu>, <Pravdepodobnos??> ]
InversePoisson=Inverzn??Poisson
InversePoisson.Syntax=[ <Priemer>, <Pravdepodobnos??> ]
InverseTDistribution=Inverzn??TRozdelenie
InverseTDistribution.Syntax=[ <Stupe?? vo??nosti>, <Pravdepodobnos??> ]
InverseWeibull=Inverzn??Weibull
InverseWeibull.Syntax=[ <Tvar>, <Rozsah>, <Pravdepodobnos??> ]
InverseZipf=Inverzn??Zipf
InverseZipf.Syntax=[ <Po??et prvkov>, <Exponent>, <Pravdepodobnos??> ]
Invert=Invertova??
Invert.Syntax=[ <Matica> ]\n[ <Funkcia> ]
IsFactored.Syntax=[ <Polyn??m> ]
IsInRegion=JeVRegi??ne
IsInRegion.Syntax=[ <Bod>, <Oblas??> ]
IsInteger=JeCel??
IsInteger.Syntax=[ <????slo> ]
IsPrime=JePrvo????slo
IsPrime.Syntax=[ <????slo> ]
IsTangent.Syntax=[ <Priamka>, <Ku??e??ose??ka> ]
IsVertexForm.Syntax=[ <Funkcia> ]
Iteration=Iter??cia
Iteration.Syntax=[ <Funkcia>, <od>, <Po??et iter??ci??> ]\n[ <V??raz>, <Premenn??>, <Po??iato??n?? hodnota>, <Pr??rastok> ]
IterationList=ZoznamIter??ci??
IterationList.Syntax=[ <Funkcia>, <od>, <Po??et iter??ci??> ]\n[ <V??raz>, <Premenn??>, <Po??iato??n?? hodnota>, <Pr??rastok> ]
IterationList.SyntaxCAS=[ <Funkcia>, <od>, <Po??et iter??ci??> ]
Join=Zl????i??
Join.Syntax=[ <Zoznam zoznamov> ]\n[ <Zoznam>, <Zoznam>, ... ]
JordanDiagonalization.SyntaxCAS=[ <Matica> ]
KeepIf=Ponecha??Ak
KeepIf.Syntax=[ <Podmienka>, <Zoznam> ]\n[ <Podmienka>, <Premenn??>, <Zoznam> ]
LCM=NSN
LCM.Syntax=[ <Zoznam ??isel> ]\n[ <????slo>, <????slo> ]
LCM.SyntaxCAS=[ <Zoznam ??isel> ]\n[ <Zoznam polyn??mov> ]\n[ <????slo>, <????slo> ]\n[ <Polyn??m>, <Polyn??m> ]
LUDecomposition.Syntax=[ <Matica> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Objekt> ]\n[ <Objekt>, <Logick?? premenn?? pre substit??ciu premenn??ch> ]\n[ <Objekt>, <Logick?? premenn?? pre substit??ciu premenn??ch>, <Uk??za?? n??zov logickej premennej> ]
Laplace.Syntax=[ <Funkcia> ]\n[ <Funkcia>, <Premenn??> ]\n[ <Funkcia>, <Premenn??>, <Premenn??> ]
Last=Posledn??
Last.Syntax=[ <Zoznam> ]\n[ <Text> ]\n[ <Zoznam>, <Po??et prvkov> ]\n[ <Text>, <Po??et prvkov> ]
Last.SyntaxCAS=[ <Zoznam> ]\n[ <Zoznam>, <Po??et prvkov> ]
LeftSide=??av??Strana
LeftSide.Syntax=[ <Rovnica> ]
LeftSide.SyntaxCAS=[ <Rovnica> ]\n[ <Zoznam rovn??c> ]\n[ <Zoznam rovn??c>, <Index> ]
LeftSum=??av??Integr??ln??S????et
LeftSum.Syntax=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu>, <Po??et obd????n??kov> ]
Length=D????ka
Length.Syntax=[ <Objekt> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <od bodu>, <do bodu> ]\n[ <Krivka>, <t od>, <t do> ]\n[ <Krivka>, <od bodu>, <do bodu> ]
Length.SyntaxCAS=[ <Zoznam> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <Premenn??>, <Za??iatok intervalu>, <Koniec intervalu> ]
LetterToUnicode=ZnakNa????slo
LetterToUnicode.Syntax=[ <P??smeno> ]
Limit=Limita
Limit.Syntax=[ <Funkcia>, <Hodnota> ]
Limit.SyntaxCAS=[ <V??raz>, <Hodnota> ]\n[ <V??raz>, <Premenn??>, <Hodnota> ]
LimitAbove=LimitaZPrava
LimitAbove.Syntax=[ <Funkcia>, <Hodnota> ]
LimitAbove.SyntaxCAS=[ <V??raz>, <Hodnota> ]\n[ <V??raz>, <Premenn??>, <Hodnota> ]
LimitBelow=LimitaZ??ava
LimitBelow.Syntax=[ <Funkcia>, <Hodnota> ]
LimitBelow.SyntaxCAS=[ <V??raz>, <Hodnota> ]\n[ <V??raz>, <Premenn??>, <Hodnota> ]
Line=Priamka
Line.Syntax=[ <Bod>, <Bod> ]\n[ <Bod>, <Rovnobe??n?? priamka> ]\n[ <Bod>, <Smerov?? vektor> ]
LineBisector=Os??se??ky
LineBisector.Syntax=[ <??se??ka> ]\n[ <Bod>, <Bod> ]
LineBisector.Syntax3D=[ <??se??ka> ]\n[ <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Smer> ]
LineGraph.Syntax=[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c> ]
Locus=Mno??inaBodov
Locus.Syntax=[ <Bod vytv??raj??ci mno??inu>, <Bod> ]\n[ <Bod vytv??raj??ci mno??inu>, <Posuvn??k> ]\n[ <Smerov?? pole>, <Bod> ]\n[ <f(x, y)>, <Bod> ]
LocusEquation=RovnicaMno??inyBodov
LocusEquation.Syntax=[ <Mno??ina bodov> ]\n[ <Locus Point>, <Moving Point> ]\n[ <Logick?? v??raz>, <Moving Point> ]
LogNormal=LogNorm??lne
LogNormal.Syntax=[ <Priemer>, <??tandardn?? devi??cia>, <Po??et ??spechov> ]\n[ <Priemer>, <??tandardn?? devi??cia>, <Po??et ??spechov>, <Logicky kumulat??vne>  ]\n[ <Priemer>, <??tandardn?? devi??cia>, x, <Logicky kumulat??vne> ]
Logistic=Logistick??
Logistic.Syntax=[ <Priemer>, <Rozsah>, <Po??et ??spechov> ]\n[ <Priemer>, <Rozsah>, <Po??et ??spechov>, <Logicky kumulat??vne>  ]\n[ <Priemer>, <Rozsah>, x, <Logicky kumulat??vne> ]
LowerSum=Doln??Integr??lnyS????et
LowerSum.Syntax=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu>, <Po??et obd????n??kov> ]
MatrixPlot=Tla??Maticu
MatrixRank=Hodnos??Matice
MatrixRank.Syntax=[ <Matica> ]
Max.Syntax=[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Zoznam> ]\n[ <Zoznam ??dajov>, <Zoznam po??etnost??> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]
Max.SyntaxCAS=[ <Zoznam> ]\n[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Zoznam ??dajov>, <Zoznam po??etnost??> ]
Maximize=Maximalizova??
Maximize.Syntax=[ <Z??visl?? ????slo>, <Vo??n?? ????slo> ]\n[ <Z??visl?? ????slo>, <Bod na dr??he> ]
Mean=Priemer
Mean.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
MeanX=PriemerX
MeanX.Syntax=[ <Zoznam bodov> ]
MeanY=PriemerY
MeanY.Syntax=[ <Zoznam bodov> ]
Median=Medi??n
Median.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
Median.SyntaxCAS=[ <Zoznam ??isel> ]
Midpoint=Stred
Midpoint.Syntax=[ <??se??ka> ]\n[ <Ku??e??ose??ka> ]\n[ <Interval> ]\n[ <Bod>, <Bod> ]
Min.Syntax=[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Zoznam> ]\n[ <Zoznam ??dajov>, <Zoznam po??etnost??> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]
Min.SyntaxCAS=[ <Zoznam> ]\n[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Zoznam ??dajov>, <Zoznam po??etnost??> ]
MinimalPolynomial.Syntax=[ <Matica> ]
Minimize=Minimalizova??
Minimize.Syntax=[ <Z??visl?? ????slo>, <Vo??n?? ????slo> ]\n[ <Z??visl?? ????slo>, <Bod na dr??he> ]
MinimumSpanningTree=StromMinim??lnehoRozp??tia
MinimumSpanningTree.Syntax=[ <Zoznam bodov> ]
Mirror=S??mernos??
Mirror.Syntax=[ <Objekt>, <Bod> ]\n[ <Objekt>, <Priamka> ]\n[ <Objekt>, <Kru??nica> ]
Mirror.Syntax3D=[ <Objekt>, <Bod> ]\n[ <Objekt>, <Priamka> ]\n[ <Objekt>, <Rovina> ]\n[ <Objekt>, <Kru??nica> ]
MixedNumber=Prav??Zlomok
MixedNumber.SyntaxCAS=[ <????slo> ]
Mod.Syntax=[ <Delenec>, <Delite??> ]\n[ <Polyn??m>, <Polyn??m> ]
Mode=M??dus
Mode.Syntax=[ <Zoznam ??isel> ]
ModularExponent.Syntax=[ <????slo>, <????slo>, <????slo> ]
NDerivative.Syntax=[ <Funkcia> ]\n[ <Funkcia>, <Stupe??> ]
NIntegral=NumIntegr??l
NIntegral.Syntax=[ <Funkcia> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Start y-Value>, <Koniec intervalu> ]
NIntegral.SyntaxCAS=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]\n[ <Funkcia>, <Premenn??>, <od>, <do> ]
NInvert.Syntax=[ <Funkcia> ]
NSolutions=NumRie??enie
NSolutions.Syntax=[ <Rovnica> ]
NSolutions.SyntaxCAS=[ <Rovnica> ]\n[ <Rovnica>, <Premenn??> ]\n[ <Rovnica>, <Premenn?? = za??iato??n?? hodnota> ]\n[ <Zoznam rovn??c>, <Zoznam premenn??ch> ]
NSolve=NumRie??i??
NSolve.Syntax=[ <Rovnica> ]
NSolve.SyntaxCAS=[ <Rovnica> ]\n[ <Rovnica>, <Premenn??> ]\n[ <Rovnica>, <Premenn?? = za??iato??n?? hodnota> ]\n[ <Zoznam rovn??c>, <Zoznam premenn??ch> ]
NSolveODE=NumRie??i??ODR
NSolveODE.Syntax=[ <Zoznam deriv??ci??>, <Po??iato??n?? x-ov?? s??radnica>, <Zoznam po??iato??n??ch y-ov??ch s??radn??c>, <Posledn?? x-ov?? s??radnica> ]
Name=Pomenovanie
Name.Syntax=[ <Objekt> ]
Net=Sie??
Net.Syntax=[ <Mnohosten>, <????slo> ]\n[ <Mnohosten>, <????slo>, <Stena>, <Hrana>, <Hrana>, ... ]
NextPrime=Nasleduj??cePrvo????slo
NextPrime.Syntax=[ <????slo> ]
Normal=Norm??lneRozdelenie
Normal.Syntax=[ <Priemer>, <??tandardn?? devi??cia>, <Po??et ??spechov> ]\n[ <Priemer>, <??tandardn?? devi??cia>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Priemer>, <??tandardn?? devi??cia>, x, <Logicky kumulat??vne> ]
NormalQuantilePlot=Norm??lnyKvantilDiagram
NormalQuantilePlot.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]
Normalize=Normalizova??
Normalize.Syntax=[ <Zoznam ??isel> ]\n[ <Zoznam bodov> ]
Numerator=??itate??
Numerator.Syntax=[ <????slo> ]\n[ <Funkcia> ]
Numerator.SyntaxCAS=[ <V??raz> ]
Numeric=Numericky
Numeric.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <desatinn?? miesta> ]
Object=Objekt
Object.Syntax=[ <N??zov objektu ako text> ]
Octahedron=Okta??der
Octahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Smer> ]
Ordinal=Ordin??lne
Ordinal.Syntax=[ <Cel?? ????slo> ]
OrdinalRank=Ordin??lnaHodnos??
OrdinalRank.Syntax=[ <Zoznam> ]
OrthogonalLine=Kolmica
OrthogonalLine.Syntax=[ <Bod>, <Priamka> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Vektor> ]
OrthogonalLine.Syntax3D=[ <Bod>, <Priamka> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Vektor> ]\n[ <Bod>, <Rovina> ]\n[ <Priamka>, <Priamka> ]\n[ <Bod>, <Smer>, <Smer> ]\n[ <Bod>, <Priamka>, <Context> ]
OrthogonalPlane=Kolm??Rovina
OrthogonalPlane.Syntax=[ <Bod>, <Priamka> ]\n[ <Bod>, <Vektor> ]
OrthogonalVector=Kolm??Vektor
OrthogonalVector.Syntax=[ <Priamka> ]\n[ <??se??ka> ]\n[ <Vektor> ]
OrthogonalVector.Syntax3D=[ <Priamka> ]\n[ <??se??ka> ]\n[ <Vektor> ]\n[ <Rovina> ]
OrthogonalVector.SyntaxCAS=[ <Vektor> ]
OsculatingCircle=Oskula??n??Kru??nice
OsculatingCircle.Syntax=[ <Bod>, <Objekt> ]
PMCC=KoeficientKorel??cie
PMCC.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c> ]
Pan=Posun????Obrazovku
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Bod>, <Priamka> ]
Parameter.Syntax=[ <Ku??elose??ka> ]
ParametricDerivative=Parametrick??Deriv??cia
ParametricDerivative.Syntax=[ <Krivka> ]
ParseToFunction=Anal??zaDoFunkcie
ParseToFunction.Syntax=[ <Funkcia>, <Re??azec> ]
ParseToNumber=Anal??zaDo????sla
ParseToNumber.Syntax=[ <????slo>, <Re??azec> ]
PartialFractions=Parci??lneZlomky
PartialFractions.Syntax=[ <Funkcia> ]
PartialFractions.SyntaxCAS=[ <Funkcia> ]\n[ <Funkcia>, <Premenn??> ]
Pascal.Syntax=[ <Po??et ??spechov>, <Pravdepodobnos?? ??spechu> ]\n[ <Po??et ??spechov>, <Pravdepodobnos?? ??spechu>, <Logicky kumulat??vne> ]\n[ <Po??et ??spechov>, <Pravdepodobnos?? ??spechu>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
Pascal.SyntaxCAS=[ <Po??et ??spechov>, <Pravdepodobnos?? ??spechu>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
PathParameter=ParameterTrasy
PathParameter.Syntax=[ <Bod na trase> ]
Payment=Platba
Payment.Syntax=[ <Sadzba>, <Po??et obdob??>, <S????asn?? hodnota>, <Bud??ca hodnota (opcion??lne)>, <Typ (volite??n??)> ]
PenStroke.Syntax=[ <Bod>, ..., <Bod> ]
Percentile=Percentil
Percentile.Syntax=[ <Zoznam ??isel>, <Percento> ]
Perimeter=Obvod
Perimeter.Syntax=[ <Mnohouholn??k> ]\n[ <Ku??e??ose??ka> ]\n[ <Mno??ina bodov> ]
Periods=PocetObdobi
Periods.Syntax=[ <Sadzba>, <Spl??tka>, <S????asn?? hodnota>, <Bud??ca hodnota (opcion??lne)>, <Typ (volite??n??)> ]
PieChart.Syntax=[ <Zoznam po??etnost??> ]\n[ <Zoznam po??etnost??>, <Center>, <Radius> ]
Plane=Rovina
Plane.Syntax=[ <Mnohouholn??k> ]\n[ <Ku??e??ose??ka> ]\n[ <Bod>, <Rovina> ]\n[ <Bod>, <Priamka> ]\n[ <Priamka>, <Priamka> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Vektor>, <Vektor> ]
PlaneBisector=OsRoviny
PlaneBisector.Syntax=[ <??se??ka> ]\n[ <Bod>, <Bod> ]
PlaySound=Prehra??Vzuk
PlaySound.Syntax=[ <S??bor> ]\n[ <Logicky prehr??vanie> ]\n[ <Funkcia>, <Min hodnota>, <Max hodnota> ]\n[ <Funkcia>, <Min hodnota>, <Max hodnota>, <rozsah vzorky>, <h??bka vzorky> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point=Bod
Point.Syntax=[ <Objekt> ]\n[ <Objekt>, <Parameter> ]\n[ <Bod>, <Vektor> ]\n[ <Zoznam> ]
PointIn=BodV
PointIn.Syntax=[ <Oblas??> ]
PointList=ZoznamBodov
PointList.Syntax=[ <Zoznam> ]
Poisson.Syntax=[ <Priemer> ]\n[ <Priemer>, <Logicky kumulat??vne> ]\n[ <Priemer>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
Poisson.SyntaxCAS=[ <Priemer>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
Polar=Pol??ra
Polar.Syntax=[ <Bod>, <Ku??e??ose??ka> ]\n[ <Priamka>, <Ku??e??ose??ka> ]
PolyLine=Lomen????iara
PolyLine.Syntax=[ <Zoznam bodov> ]\n[ <Bod>, ..., <Bod> ]
Polygon=Mnohouholn??k
Polygon.Syntax=[ <Zoznam bodov> ]\n[ <Bod>, ..., <Bod> ]\n[ <Bod>, <Bod>, <Po??et vrcholov> ]
Polygon.Syntax3D=[ <Zoznam bodov> ]\n[ <Bod>, ..., <Bod> ]\n[ <Bod>, <Bod>, <Po??et vrcholov> ]\n[ <Bod>, <Bod>, <Po??et vrcholov>, <Smer> ]
Polynomial=Polynomick??
Polynomial.Syntax=[ <Funkcia> ]\n[ <Zoznam bodov> ]
Polynomial.SyntaxCAS=[ <Funkcia> ]\n[ <Funkcia>, <Premenn??> ]
PresentValue=S????asn??Hodnota
PresentValue.Syntax=[ <Sadzba>, <Po??et obdob??>, <Spl??tka>, <Bud??ca hodnota (opcion??lne)>, <Typ (volite??n??)> ]
PreviousPrime=Predch??dzaj??cePrvo????slo
PreviousPrime.Syntax=[ <????slo> ]
PrimeFactors=Prvo????seln??Rozklad
PrimeFactors.Syntax=[ <????slo> ]
Prism=Hranol
Prism.Syntax=[ <Mnohouholn??k>, <Bod> ]\n[ <Mnohouholn??k>, <Hodnota v????ky> ]\n[ <Bod>, <Bod>, ... ]
Product=Produktum
Product.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Po??et prvkov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]\n[ <V??raz>, <Premenn??>, <od>, <do> ]
Product.SyntaxCAS=[ <Zoznam v??razov> ]\n[ <V??raz>, <Premenn??>, <??tart od>, <index do> ]
Prove=Verifikova??
Prove.Syntax=[ <Logick?? v??raz> ]
ProveDetails=Verifikova??Detaily
ProveDetails.Syntax=[ <Logick?? v??raz> ]
Pyramid=Ihlan
Pyramid.Syntax=[ <Mnohouholn??k>, <Bod> ]\n[ <Mnohouholn??k>, <V????ka> ]\n[ <Bod>, <Bod>, <Bod>, <Bod>, ... ]
Q1=1Kvartil
Q1.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
Q3=3Kvartil
Q3.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
QRDecomposition.Syntax=[ <Matica> ]
QuadricSide=Strana
QuadricSide.Syntax=[ <Kvadratick?? tvar> ]
RSquare=R??tvorec
RSquare.Syntax=[ <Zoznam bodov>, <Funkcia> ]
Radius=Polomer
Radius.Syntax=[ <Ku??e??ose??ka> ]
Random=N??hodn??Medzi
Random.Syntax=[ <Minim??lne cel?? ????slo>, <Maxim??lne cel?? ????slo> ]\n[ <Minim??lne cel?? ????slo>, <Maxim??lne cel?? ????slo>, <Po??et vzoriek> ]\n[ <Minim??lne cel?? ????slo>, <Maxim??lne cel?? ????slo>, <Booleovsk?? pevn?? hodnota> ]
Random.SyntaxCAS=[ <Minim??lne cel?? ????slo>, <Maxim??lne cel?? ????slo> ]\n[ <Minim??lne cel?? ????slo>, <Maxim??lne cel?? ????slo>, <Po??et vzoriek> ]
RandomBinomial=N??hodn??Binomi??lne
RandomBinomial.Syntax=[ <Po??et pokusov>, <Pravdepodobnos??> ]
RandomDiscrete.Syntax=[ <Zoznam>, <Zoznam> ]
RandomElement=N??hodn??Prvok
RandomElement.Syntax=[ <Zoznam> ]
RandomNormal=N??hodn??Norm??lneRozd
RandomNormal.Syntax=[ <Priemer>, <??tandardn?? devi??cia> ]
RandomPointIn=Vlo??N??hodn??Bod
RandomPointIn.Syntax=[ <Oblas??> ]\n[ <Zoznam bodov> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=N??hodn??Poisson
RandomPoisson.Syntax=[ <Priemer> ]
RandomPolynomial=N??hodn??Polynomi??lne
RandomPolynomial.Syntax=[ <Stupe??>, <Minimum pre koeficientov>, <Maximum pre koeficientov> ]
RandomPolynomial.SyntaxCAS=[ <Stupe??>, <Minimum pre koeficientov>, <Maximum pre koeficientov> ]\n[ <Premenn??>, <Stupe??>, <Minimum pre koeficientov>, <Maximum pre koeficientov> ]
RandomUniform=N??hodn??Uniformn??
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Po??et vzoriek> ]
Rate=??rokov??Miera
Rate.Syntax=[ <Po??et obdob??>, <Spl??tka>, <S????asn?? hodnota>, <Bud??ca hodnota (opcion??lne)>, <Typ (volite??n??)>, <Odhad (opcion??lne)> ]
Rationalize=Raciolaniz??cia
Rationalize.SyntaxCAS=[ <????slo> ]
Ray=Polpriamka
Ray.Syntax=[ <od bodu>, <Bod> ]\n[ <od bodu>, <Smerov?? vektor> ]
ReadText.Syntax=[ <Text> ]
RectangleSum=Interg??lnyS????et
RectangleSum.Syntax=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu>, <Po??et obd????n??kov>, <poz??cia za??iatku obd????n??ka> ]
ReducedRowEchelonForm=Elimin??ciaNaTrojuholn??kov??Tvar
ReducedRowEchelonForm.Syntax=[ <Matica> ]
Relation=Vz??ah
Relation.Syntax=[ <Zoznam> ]\n[ <Objekt>, <Objekt> ]
RemovableDiscontinuity.Syntax=[ <Funkcia> ]
Remove=odstr??ni??
Remove.Syntax=[ <Zoznam>, <Zoznam> ]
RemoveUndefined=Odstr??ni??Nedefinovan??
RemoveUndefined.Syntax=[ <Zoznam> ]
Rename=Premenova??
Rename.Syntax=[ <Objekt>, <Pomenovanie> ]
Repeat=Opakova??
Repeat.Syntax=[ <????slo>, <Skriptovac?? pr??kaz>, <Skriptovac?? pr??kaz>, ... ]
ReplaceAll.Syntax=[ <Text>, <Text to Match>, <Text to Replace> ]
ResidualPlot=GrafRezidu??lu
ResidualPlot.Syntax=[ <Zoznam bodov>, <Funkcia> ]
Reverse=Obr??ten??
Reverse.Syntax=[ <Zoznam> ]
RightSide=Prav??Strana
RightSide.Syntax=[ <Rovnica> ]
RightSide.SyntaxCAS=[ <Rovnica> ]\n[ <Zoznam rovn??c> ]\n[ <Zoznam rovn??c>, <Index> ]
RigidPolygon=Pevn??Mnohouholn??k
RigidPolygon.Syntax=[ <Mnohouholn??k> ]\n[ <Mnohouholn??k>, <Offset x>, <Offset y> ]\n[ <Vo??n?? bod>, ..., <Vo??n?? bod> ]
Root=Kore??
Root.Syntax=[ <Polyn??m> ]\n[ <Funkcia>, <x od> ]\n[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]
Root.SyntaxCAS=[ <Polyn??m> ]
RootList=ZoznamKore??ov
RootList.Syntax=[ <Zoznam> ]
RootMeanSquare=Stredn??Kvadratick??Odch??lka
RootMeanSquare.Syntax=[ <Zoznam ??isel> ]
Roots=Korene
Roots.Syntax=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu> ]
Rotate=Rot??cia
Rotate.Syntax=[ <Objekt>, <Uhol> ]\n[ <Objekt>, <Uhol>, <Bod> ]
Rotate.Syntax3D=[ <Objekt>, <Uhol> ]\n[ <Objekt>, <Uhol>, <Bod> ]\n[ <Objekt>, <Uhol>, <Os rot??cie> ]\n[ <Objekt>, <Uhol>, <Bod na osi>, <Smer osi alebo rovina> ]
RotateText=Oto??i??Text
RotateText.Syntax=[ <Text>, <Uhol> ]
Row=Riadok
Row.Syntax=[ <Tabu??ka> ]
RunClickScript=Spus??Skript
RunClickScript.Syntax=[ <Objekt> ]
RunUpdateScript=Spus??UpdateSkript
RunUpdateScript.Syntax=[ <Objekt> ]
SDX.Syntax=[ <Zoznam bodov> ]
SDY.Syntax=[ <Zoznam bodov> ]
SVD.Syntax=[ <Matica> ]
SXX=SXX
SXX.Syntax=[ <Zoznam ??isel> ]\n[ <Zoznam bodov> ]
SXY=SXY
SXY.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam ??isel>, <Zoznam ??isel> ]
SYY=SYY
SYY.Syntax=[ <Zoznam bodov> ]
Sample=Vzorka
Sample.Syntax=[ <Zoznam>, <Ve??kos??> ]\n[ <Zoznam>, <Ve??kos??>, <s mo??nos??ou n??hrady> ]
SampleSD=SDVzorky
SampleSD.SyntaxCAS=[ <Zoznam ??isel> ]
SampleSDX=SDXVzorky
SampleSDX.Syntax=[ <Zoznam bodov> ]
SampleSDY=SDYVzorky
SampleSDY.Syntax=[ <Zoznam bodov> ]
SampleVariance=VarianciaVzorky
SampleVariance.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
SampleVariance.SyntaxCAS=[ <Zoznam ??isel> ]
ScientificText=Vedeck??Text
ScientificText.Syntax=[ <????slo> ]\n[ <????slo>, <Presnos??> ]
SecondAxis=Ved??laj??iaOs
SecondAxis.Syntax=[ <Ku??e??ose??ka> ]
SecondAxisLength=D????kaVed??aj??ejPoloOsi
SecondAxisLength.Syntax=[ <Ku??e??ose??ka> ]
Sector=V??sek
Sector.Syntax=[ <Ku??e??ose??ka>, <Bod>, <Bod> ]\n[ <Ku??e??ose??ka>, <Hodnota parametra>, <Hodnota parametra> ]
Segment=??se??ka
Segment.Syntax=[ <Bod>, <Bod> ]\n[ <Bod>, <D????ka> ]
SelectObjects=V??berObjektov
SelectObjects.Syntax=[ ]\n[ <Objekt>, <Objekt>, ... ]
SelectedElement=Vybrat??Prvok
SelectedElement.Syntax=[ <Zoznam> ]
SelectedIndex=Vybrat??Index
SelectedIndex.Syntax=[ <Zoznam> ]
Semicircle=Polkru??nica
Semicircle.Syntax=[ <Bod>, <Bod> ]
Sequence=Postupnos??
Sequence.Syntax=[ <do> ]\n[ <od>, <do> ]\n[ <od>, <do>, <Pr??rastok> ]\n[ <V??raz>, <Premenn??>, <od>, <do> ]\n[ <V??raz>, <Premenn??>, <od>, <do>, <Pr??rastok> ]
SetActiveView=Nastavi??Akt??vn??Poh??ad
SetActiveView.Syntax=[ <Vzh??ad> ]\n[ <Rovina> ]
SetAxesRatio=Nastavi??PomerOs??
SetAxesRatio.Syntax=[ <????slo>, <????slo> ]
SetAxesRatio.Syntax3D=[ <????slo>, <????slo> ]\n[ <????slo>, <????slo>, <????slo> ]
SetBackgroundColor=Nastavi??FarbuPozadia
SetBackgroundColor.Syntax=[ <Farba> ]\n[ <Objekt>, <Farba> ]\n[ <??erven??>, <zelen??>, <modr??> ]\n[ <Objekt>, <??erven??>, <zelen??>, <modr??> ]
SetCaption=Nastavi??Popis
SetCaption.Syntax=[ <Objekt>, <Text> ]
SetColor=Nastavi??Farbu
SetColor.Syntax=[ <Objekt>, <Farba> ]\n[ <Objekt>, <??erven??>, <zelen??>, <modr??> ]
SetConditionToShowObject=Nastavi??PodmienkuNaZobrazenieObjektu
SetConditionToShowObject.Syntax=[ <Objekt>, <Podmienka> ]
SetConstructionStep=KrokNaVytvorenieMno??iny
SetConstructionStep.Syntax=[ <????slo> ]
SetCoords=Nastavi??S??radnicov??Syst??m
SetCoords.Syntax=[ <Objekt>, <x>, <y> ]\n[ <Objekt>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <Objekt>, <????slo> ]\n[ <??se??ka>, <????slo>, <????slo>]
SetDynamicColor=Nastavi??Dynamick??Farby
SetDynamicColor.Syntax=[ <Objekt>, <??erven??>, <zelen??>, <modr??> ]\n[ <Objekt>, <??erven??>, <zelen??>, <modr??>, <prieh??adnos??> ]
SetFilling=Nastavi??V??pl??
SetFilling.Syntax=[ <Objekt>, <????slo> ]
SetFixed=Nastavi??Upevnenie
SetFixed.Syntax=[ <Objekt>, <true | false> ]\n[ <Objekt>, <true | false>, <true | false> ]
SetImage.Syntax=[ <Objekt>, <Obraz> ]\n[ <Objekt>, <Text> ]
SetLabelMode=Nastavi??Ozna??ovanie
SetLabelMode.Syntax=[ <Objekt>, <????slo> ]
SetLayer=Nastavi??Vrstvu
SetLayer.Syntax=[ <Objekt>, <Vrstva> ]
SetLevelOfDetail.Syntax=[ <Surface>, <Level of Detail> ]
SetLineStyle=Nastavi????t??l??iar
SetLineStyle.Syntax=[ <Objekt>, <????slo> ]
SetLineThickness=Nastavi??Hr??bku??iar
SetLineThickness.Syntax=[ <Objekt>, <????slo> ]
SetPerspective=NastavVzh??ad
SetPerspective.Syntax=[ <Text> ]
SetPointSize=Nastavi??Velkos??Bodu
SetPointSize.Syntax=[ <Objekt>, <????slo> ]
SetPointStyle=Nastavi????t??lBodu
SetPointStyle.Syntax=[ <Bod>, <????slo> ]
SetSeed=NastavJadro
SetSeed.Syntax=[ <Cel?? ????slo> ]
SetSpinSpeed=NastavRychlostOtacania
SetSpinSpeed.Syntax=[ <????slo> ]
SetTooltipMode=Nastavi??Re??imN??povedy
SetTooltipMode.Syntax=[ <Objekt>, <????slo> ]
SetTrace=NastavStopu
SetTrace.Syntax=[ <Objekt>, <true | false> ]
SetValue=Nastavi??Hodnotu
SetValue.Syntax=[ <Logick?? premenn??>, <0|1> ]\n[ <Objekt>, <Objekt> ]\n[ <Zoznam>, <????slo>, <Objekt> ]
SetViewDirection=Nastavi??SmerPoh??adu
SetViewDirection.Syntax=[ ]\n[ <Smer> ]\n[ <Smer>, <Boolean animate> ]
SetVisibleInView=Nastavi??Vidite??nos??
SetVisibleInView.Syntax=[ <Objekt>, <????slo poh??adu 1|2>, <Logick?? premenn??> ]
Shear=Skosi??
Shear.Syntax=[ <Objekt>, <Priamka>, <Pomer> ]
ShortestDistance=Najkrat??iaCesta
ShortestDistance.Syntax=[ <Zoznam ??se??iek>, <od bodu>, <do bodu>, <Logick?? v??ha> ]
ShowAxes=Uk????Osi
ShowAxes.Syntax=[]\n[ <Logick?? premenn??> ]\n[ <Vzh??ad>, <Logick?? premenn??> ]
ShowGrid=Uk????Mrie??ku
ShowGrid.Syntax=[]\n[ <Logick?? premenn??> ]\n[ <Vzh??ad>, <Logick?? premenn??> ]
ShowLabel=Uk??za??Ozna??enie
ShowLabel.Syntax=[ <Objekt>, <Logick?? premenn??> ]
ShowLayer=Uk??za??Vrstvu
ShowLayer.Syntax=[ <????slo> ]
Shuffle=Zamie??a??
Shuffle.Syntax=[ <Zoznam> ]
SigmaXX.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
SigmaXY.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c> ]
SigmaYY.Syntax=[ <Zoznam bodov> ]
Simplify=Zjednodu??i??
Simplify.Syntax=[ <Funkcia> ]\n[ <Text> ]
Simplify.SyntaxCAS=[ <Funkcia> ]
Slider=Posuvn??k
Slider.Syntax=[ <Min>, <Max>, <Pr??rastok>, <r??chlos??>, <????rka>, <je uhol>, <zvisle>, <animovan??>, <n??hodne> ]
Slope=Smernica
Slope.Syntax=[ <Priamka> ]
SlopeField=Smerov??Pole
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <????slo n> ]\n[ <f(x, y)>, <????slo n>, <D????ka ??se??ky> ]\n[ <f(x, y)>, <????slo n>, <D????ka ??se??ky>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=Pomal??Vykres??ovanie
SlowPlot.Syntax=[ <Funkcia> ]\n[ <Funkcia>, <Boolean Repeat> ]
Solutions=Rie??enia
Solutions.Syntax=[ <Rovnica> ]
Solutions.SyntaxCAS=[ <Rovnica> ]\n[ <Rovnica>, <Premenn??> ]\n[ <Zoznam rovn??c>, <Zoznam premenn??ch> ]
Solve=Rie??i??
Solve.Syntax=[ <Rovnica> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <Rovnica>, <Premenn??> ]\n[ <Zoznam rovn??c>, <Zoznam premenn??ch> ]\n[ <List of Parametric Equations>, <Zoznam premenn??ch> ]\n[ <Rovnica>, <Premenn??>, <List of assumptions> ]
SolveCubic=Rie??i??Kubicky
SolveCubic.SyntaxCAS=[ <Kubick?? polyn??m> ]
SolveODE=Rie??i??ODR
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <bod na f> ]\n[ <f'(x, y)>, <x od>, <y od>, <x do>, <y do> ]\n[ <y'>, <x'>, <x od>, <y od>, <t do>, <y do> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x od>, <y od>, <y' od>, <x do>, <y do> ]
SolveODE.SyntaxCAS=[ <Rovnica> ]\n[ <Rovnica>, <Point(s) on f> ]\n[ <Rovnica>, <Point(s) on f>, <Point(s) on f'> ]\n[ <Rovnica>, <Z??visl?? premenn??>, <Nez??visl?? premenn??>, <Point(s) on f> ] \n[ <Rovnica>, <Z??visl?? premenn??>, <Nez??visl?? premenn??>, <Point(s) on f>, <Point(s) on f'> ]
SolveQuartic=Rie??i??Kvarticky
SolveQuartic.SyntaxCAS=[ <Polyn??m 4 stup??a> ]
Sort=Triedi??
Sort.Syntax=[ <Zoznam> ]\n[ <Hodnoty>, <Kl????e> ]
Spearman.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam ??isel>, <Zoznam ??isel> ]
Sphere=Gu??a
Sphere.Syntax=[ <Bod>, <Radius> ]\n[ <Bod>, <Bod> ]
Spline.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam bodov>, <Order ??? 3> ]\n[ <Zoznam bodov>, <Order ??? 3>, <Weight Function> ]
Split.Syntax=[ <Text>, <List of Texts to split on> ]
StartAnimation=Za??a??Anim??ciu
StartAnimation.Syntax=[ ]\n[ <Logick?? premenn??> ]\n[ <Posuvn??k alebo bod>, <Posuvn??k alebo bod>, ... ]\n[ <Posuvn??k alebo bod>, <Posuvn??k alebo bod>, ..., <Logick?? premenn??> ]
StartRecord=Za??a??Nahr??vanie
StartRecord.Syntax=[ ]\n[ <Logick?? premenn??> ]
StemPlot=ListVetvaDiagram
StemPlot.Syntax=[ <Zoznam> ]\n[ <Zoznam>, <Upravi?? -1|0|1> ]
StepGraph=Krokov??Diagram
StepGraph.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam bodov>, <Spojenie - logick?? hodnota> ]\n[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c> ]\n[ <Zoznam bodov>, <Spojenie - logick?? hodnota>, <??t??l bodu> ]\n[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c>, <Spojenie - logick?? hodnota> ]\n[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c>, <Spojenie - logick?? hodnota>, <??t??l bodu> ]
StickGraph=St??pcov??Diagram
StickGraph.Syntax=[ <Zoznam bodov> ]\n[ <Zoznam bodov>, <Horizont??lne> ]\n[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c> ]\n[ <Zoznam x-ov??ch s??radn??c>, <Zoznam yx-ov??ch s??radn??c>, <Horizont??lne> ]
Stretch=Roztiahn????
Stretch.Syntax=[ <Objekt>, <Vektor> ]\n[ <Objekt>, <Priamka>, <Pomer> ]
Substitute=Substituova??
Substitute.SyntaxCAS=[ <V??raz>, <Zoznam substit??ci??> ]\n[ <V??raz>, <z>, <do> ]
Sum=Suma
Sum.Syntax=[ <Zoznam> ]\n[ <Zoznam>, <Po??et prvkov> ]\n[ <Zoznam>, <Zoznam po??etnost??> ]\n[ <V??raz>, <Premenn??>, <od>, <do> ]
Sum.SyntaxCAS=[ <Zoznam> ]\n[ <V??raz>, <Premenn??>, <od>, <do> ]
SumSquaredErrors=ChybaS????tu??tvorcov
SumSquaredErrors.Syntax=[ <Zoznam bodov>, <Funkcia> ]
SurdText=Iracion??lnyText
SurdText.Syntax=[ <Bod> ]\n[ <????slo> ]\n[ <????slo>, <Zoznam> ]
Surface=Plocha
Surface.Syntax=[ <Funkcia>, <Uhol> ]\n[ <Krivka>, <Uhol>, <Priamka> ]\n[ <V??raz>, <V??raz>, <V??raz>, <1. parameter>, <od>, <do>, <2. parameter>, <od>, <do> ]
TDistribution=TRozdelenie
TDistribution.Syntax=[ <Stupe?? vo??nosti>, <Po??et ??spechov> ]\n[ <Stupe?? vo??nosti>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Stupe?? vo??nosti>, x, <Logicky kumulat??vne> ]
TDistribution.SyntaxCAS=[ <Stupe?? vo??nosti>, <Po??et ??spechov> ]
TMean2Estimate=TOdhad2Priemer
TMean2Estimate.Syntax=[ <Zoznam ??dajov vzorky 1>, <Zoznam ??dajov vzorky 2>, <Stupe?? konfidencie>, <Boolean Pooled> ]\n[ <Priemer 1. vzorky>, <Sample Standard Deviation 1>, <Ve??kos?? 1. vzorky>, <Priemer 2. vzorky>, <Sample Standard Deviation 2>, <Ve??kos?? 2. vzorky>, <Stupe?? konfidencie>, <Boolean Pooled> ]
TMeanEstimate=TOdhadPriemer
TMeanEstimate.Syntax=[ <Zoznam ??dajov vzorky>, <Stupe?? konfidencie> ]\n[ <Priemer vzorky>, <??tandardn?? devi??cia vzorky>, <Ve??kos?? vzorky>, <Stupe?? konfidencie> ]
TTest.Syntax=[ <Zoznam ??dajov vzorky>, <Predpokladan?? priemer>, <zadn?? ??as??> ]\n[ <Priemer vzorky>, <??tandardn?? devi??cia vzorky>, <Ve??kos?? vzorky>, <Predpokladan?? priemer>, <zadn?? ??as??> ]
TTest2.Syntax=[ <Zoznam ??dajov vzorky 1>, <Zoznam ??dajov vzorky 2>, <zadn?? ??as??>, <Boolean Pooled> ]\n[ <Priemer 1. vzorky>, <Sample Standard Deviation 1>, <Ve??kos?? 1. vzorky>, <Priemer 2. vzorky>, <Sample Standard Deviation 2>, <Ve??kos?? 2. vzorky>, <zadn?? ??as??>, <Boolean Pooled> ]
TTestPaired=TTestSp??rovan??
TTestPaired.Syntax=[ <Zoznam ??dajov vzorky 1>, <Zoznam ??dajov vzorky 2>, <zadn?? ??as??> ]
TableText=Tabu??kov??Text
TableText.Syntax=[ <Zoznam>, <Zoznam>, ... ]\n[ <Zoznam>, <Zoznam>, ..., <Alignment of Text> ]\n[ <Zoznam>, <Zoznam>, ..., <Alignment of Text>, <Minimum Cell Width> ]\n[ <Zoznam>, <Zoznam>, ..., <Alignment of Text>, <Minimum Cell Width>, <Minimum Cell Height> ]
Take=Vyber
Take.Syntax=[ <Zoznam>, <Po??iato??n?? poz??cia>, <Koncov?? poz??cia> ]\n[ <Zoznam>, <Po??iato??n?? poz??cia> ]\n[ <Text>, <Po??iato??n?? poz??cia>, <Koncov?? poz??cia> ]\n[ <Text>, <Po??iato??n?? poz??cia> ]
Take.SyntaxCAS=[ <Zoznam>, <Po??iato??n?? poz??cia> ]\n[ <Zoznam>, <Po??iato??n?? poz??cia>, <Koncov?? poz??cia> ]\n[ <Text>, <Po??iato??n?? poz??cia>, <Koncov?? poz??cia> ]\n[ <Text>, <Po??iato??n?? poz??cia> ]
Tangent=Doty??nica
Tangent.Syntax=[ <Bod>, <Ku??e??ose??ka> ]\n[ <Bod>, <Funkcia> ]\n[ <Bod na krivke>, <Krivka> ]\n[ <x-ov?? hodnota>, <Funkcia> ]\n[ <Priamka>, <Ku??e??ose??ka> ]\n[ <Ku??e??ose??ka>, <Ku??e??ose??ka> ]
Tangent.SyntaxCAS=[ <????slo>, <Funkcia> ]\n[ <Bod>, <Objekt> ]
TaylorSeries=TaylorovPolyn??m
TaylorSeries.Syntax=[ <Funkcia>, <x-ov?? hodnota>, <Poradov?? ????slo> ]
TaylorSeries.SyntaxCAS=[ <V??raz>, <x-ov?? hodnota>, <Poradov?? ????slo> ]\n[ <V??raz>, <Premenn??>, <Po??et ??spechov>, <Poradov?? ????slo> ]
Tetrahedron=Tetra??der
Tetrahedron.Syntax=[ <Equilateral Triangle> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Smer> ]
Text.Syntax=[ <Objekt> ]\n[ <Objekt>, <Logick?? premenn?? pre substit??ciu premenn??ch> ]\n[ <Objekt>, <Bod> ]\n[ <Objekt>, <Bod>, <Logick?? premenn?? pre substit??ciu premenn??ch> ]\n[ <Objekt>, <Bod>, <Logick?? premenn?? pre substit??ciu premenn??ch>, <Boolean for LaTeX formula> ]\n[ <Objekt>, <Bod>, <Logick?? premenn?? pre substit??ciu premenn??ch>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <Objekt>, <Bod>, <Logick?? premenn?? pre substit??ciu premenn??ch>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Vertical alignment -1|0|1> ]
TextToUnicode=TextNaZoznam????sel
TextToUnicode.Syntax=[ <Text> ]
Textfield=Textov??Pole
Textfield.Syntax=[ <Prepojen?? objekt> ]
TiedRank=Viazan??Hodnos??
TiedRank.Syntax=[ <Zoznam> ]
ToBase=PriZ??klade
ToBase.Syntax=[ <????slo>, <Z??klad> ]
ToComplex=Komplexne
ToComplex.Syntax=[ <Vektor> ]
ToExponential=Exponenci??lnyTvar
ToExponential.SyntaxCAS=[ <Komplexn?? ????slo> ]
ToPoint=Bodov??Zobrazenie
ToPoint.Syntax=[ <Komplexn?? ????slo> ]
ToPolar=Pol??rne
ToPolar.Syntax=[ <Komplexn?? ????slo> ]\n[ <Vektor> ]
ToolImage=ObrazN??stroja
ToolImage.Syntax=[ <????slo> ]\n[ <????slo>, <Bod> ]\n[ <????slo>, <Bod>, <Bod> ]
Top=Hore
Top.Syntax=[ <Kvadratick?? tvar> ]
Translate=Posunutie
Translate.Syntax=[ <Objekt>, <Vektor> ]\n[ <Vektor>, <od bodu> ]
Transpose=Transponova??
Transpose.Syntax=[ <Matica> ]
TrapezoidalSum=Lichobe??n??kov??S????et
TrapezoidalSum.Syntax=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu>, <Po??et lichobe??n??kov> ]
TravelingSalesman=Cestuj??ciAgent
TravelingSalesman.Syntax=[ <Zoznam bodov> ]
TriangleCenter=StredTrojuholn??ka
TriangleCenter.Syntax=[ <Bod>, <Bod>, <Bod>, <????slo> ]
TriangleCurve=KrivkaTrojuholn??k
TriangleCurve.Syntax=[ <Bod>, <Bod>, <Bod>, <Rovnica> ]
Triangular=Trojuholn??kov??
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <Po??et ??spechov> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Logicky kumulat??vne> ]
TrigCombine=V??raz
TrigCombine.Syntax=[ <V??raz> ]\n[ <V??raz>, <Cie??ov?? funkcia> ]
TrigExpand=TrigRoz????ri??
TrigExpand.Syntax=[ <V??raz> ]\n[ <V??raz>, <Cie??ov?? funkcia> ]
TrigExpand.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Cie??ov?? funkcia> ]\n[ <V??raz>, <Cie??ov?? funkcia>, <Cie??ov?? premenn??> ]\n[ <V??raz>, <Cie??ov?? funkcia>, <Cie??ov?? premenn??>, <Cie??ov?? premenn??> ]
TrigSimplify=TrigZjednodu??i??
TrigSimplify.Syntax=[ <V??raz> ]
Trilinear=Triline??rne
Trilinear.Syntax=[ <Bod>, <Bod>, <Bod>, <????slo>, <????slo>, <????slo> ]
TurningPoint=Inflexn??Bod
TurningPoint.Syntax=[ <Polyn??m> ]
TurningPoint.SyntaxCAS=[ <Funkcia> ]
Turtle=Korytna??ka
Turtle.Syntax=[]
TurtleBack=Korytna??kaSp????
TurtleBack.Syntax=[ <Korytna??ka>, <Vzdialenos??> ]
TurtleDown=Korytna??kaDole
TurtleDown.Syntax=[ <Korytna??ka> ]
TurtleForward=Korytna??kaDopredu
TurtleForward.Syntax=[ <Korytna??ka>, <Vzdialenos??> ]
TurtleLeft=Korytna??kaDo??ava
TurtleLeft.Syntax=[ <Korytna??ka>, <Uhol> ]
TurtleRight=Korytna??kaDoprava
TurtleRight.Syntax=[ <Korytna??ka>, <Uhol> ]
TurtleUp=Korytna??kaHore
TurtleUp.Syntax=[ <Korytna??ka> ]
Type.Syntax=[ <Objekt> ]
UnicodeToLetter=????sloNaZnak
UnicodeToLetter.Syntax=[ <Cel?? ????slo> ]
UnicodeToText=Zoznam????selNaText
UnicodeToText.Syntax=[ <Zoznam cel??ch ????sel> ]
Uniform=Uniformn??
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <Po??et ??spechov> ]\n[ <Lower Bound>, <Upper Bound>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Lower Bound>, <Upper Bound>, x, <Logicky kumulat??vne> ]
Union=Zjednotenie
Union.Syntax=[ <Zoznam>, <Zoznam> ]\n[ <Mnohouholn??k>, <Mnohouholn??k> ]
Unique=Jednozna??ne
Unique.Syntax=[ <Zoznam> ]
UnitOrthogonalVector=Jednotkov??Norm??la
UnitOrthogonalVector.Syntax=[ <Priamka> ]\n[ <??se??ka> ]\n[ <Vektor> ]
UnitOrthogonalVector.Syntax3D=[ <Priamka> ]\n[ <??se??ka> ]\n[ <Vektor> ]\n[ <Rovina> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektor> ]
UnitVector=Jednotkov??Vektor
UnitVector.Syntax=[ <Objekt> ]
UnitVector.SyntaxCAS=[ <Vektor> ]
UpdateConstruction=Aktualizova??Kon??trukciu
UpdateConstruction.Syntax=[ ]\n[ <Po??et opakovan??> ]
UpperSum=Horn??S????et
UpperSum.Syntax=[ <Funkcia>, <Za??iatok intervalu>, <Koniec intervalu>, <Po??et obd????n??kov> ]
Variance=Variancia
Variance.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
Vector=Vektor
Vector.Syntax=[ <Bod> ]\n[ <od bodu>, <do bodu> ]
Vertex=Vrchol
Vertex.Syntax=[ <Ku??e??ose??ka> ]\n[ <Inequality> ]\n[ <Mnohouholn??k> ]\n[ <Mnohouholn??k>, <Index> ]\n[ <??se??ka>, <Index> ]
VerticalText=Zvisl??Text
VerticalText.Syntax=[ <Text> ]\n[ <Text>, <Bod> ]
Volume=Objem
Volume.Syntax=[ <Teleso> ]
Voronoi.Syntax=[ <Zoznam bodov> ]
Weibull.Syntax=[ <Tvar>, <Rozsah>, <Po??et ??spechov> ]\n[ <Tvar>, <Rozsah>, <Po??et ??spechov>, <Logicky kumulat??vne> ]\n[ <Tvar>, <Rozsah>, x, <Logicky kumulat??vne> ]
Weibull.SyntaxCAS=[ <Tvar>, <Rozsah>, <Po??et ??spechov> ]
ZMean2Estimate=ZOdhad2Priemerov
ZMean2Estimate.Syntax=[ <Zoznam ??dajov vzorky 1>, <Zoznam ??dajov vzorky 2>, <??1>, <??2>, <Stupe?? konfidencie> ]\n[ <Priemer 1. vzorky>, <??1>, <Ve??kos?? 1. vzorky>, <Priemer 2. vzorky>, <??2>, <Ve??kos?? 2. vzorky>, <Stupe?? konfidencie> ]
ZMean2Test=ZTest2Priemerov
ZMean2Test.Syntax=[ <Zoznam ??dajov vzorky 1>, <??1>, <Zoznam ??dajov vzorky 2>, <??2>, <zadn?? ??as??> ]\n[ <Priemer 1. vzorky>, <??1>, <Ve??kos?? 1. vzorky>, <Priemer 2. vzorky>, <??2>, <Ve??kos?? 2. vzorky>, <zadn?? ??as??> ]
ZMeanEstimate=ZOdhadPriemeru
ZMeanEstimate.Syntax=[ <Zoznam ??dajov vzorky>, <??>, <Stupe?? konfidencie> ]\n[ <Priemer vzorky>, <??>, <Ve??kos?? vzorky>, <Stupe?? konfidencie> ]
ZMeanTest=ZTestPriemeru
ZMeanTest.Syntax=[ <Zoznam ??dajov vzorky>, <??>, <Predpokladan?? priemer>, <zadn?? ??as??> ]\n[ <Priemer vzorky>, <??>, <Ve??kos?? vzorky>, <Predpokladan?? priemer>, <zadn?? ??as??> ]
ZProportion2Estimate=ZOdhad2Pomer
ZProportion2Estimate.Syntax=[ <Pomer 1. vzorky>, <Ve??kos?? 1. vzorky>, <Pomer 2. vzorky>, <Ve??kos?? 2. vzorky>, <Stupe?? konfidencie> ]
ZProportion2Test=ZTest2Pomer
ZProportion2Test.Syntax=[ <Pomer 1. vzorky>, <Ve??kos?? 1. vzorky>, <Pomer 2. vzorky>, <Ve??kos?? 2. vzorky>, <zadn?? ??as??> ]
ZProportionEstimate=ZOdhadPomer
ZProportionEstimate.Syntax=[ <Pomer vzorky>, <Ve??kos?? vzorky>, <Stupe?? konfidencie> ]
ZProportionTest=ZTestPomer
ZProportionTest.Syntax=[ <Pomer vzorky>, <Ve??kos?? vzorky>, <Predpokladan?? pomer>, <zadn?? ??as??> ]
Zip.Syntax=[ <V??raz>, <Premenn??1>, <Zoznam1>, <Premenn??2>, <Zoznam2>, ... ]
Zipf.Syntax=[ <Po??et prvkov>, <Exponent> ]\n[ <Po??et prvkov>, <Exponent>, <Logicky kumulat??vne> ]\n[ <Po??et prvkov>, <Exponent>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
Zipf.SyntaxCAS=[ <Po??et prvkov>, <Exponent>, <Po??et ??spechov>, <Logicky kumulat??vne> ]
ZoomIn=Pribl????i??
ZoomIn.Syntax=[ ]\n[ <Factor> ]\n[ <Factor>, <Stred n??kresne> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=Oddiali??
ZoomOut.Syntax=[ <Factor> ]\n[ <Factor>, <Stred n??kresne> ]
mad.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
mean.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
nCr.Syntax=[ <????slo n>, <????slo k> ]
stdev.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]
stdevp.Syntax=[ <Zoznam zdrojov??ch ??dajov> ]\n[ <Zoznam ??isel>, <Zoznam po??etnost??> ]