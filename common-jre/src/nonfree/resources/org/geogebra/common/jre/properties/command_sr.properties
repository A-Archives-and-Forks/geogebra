# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio=KoeficijentAfinosti
AffineRatio.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka> ]
Angle=Ugao
Angle.Syntax=[ <objekat> ]\n[ <vektor>, <vektor> ]\n[ <prava>, <prava> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <ugao> ]
Angle.Syntax3D=[ <objekat> ]\n[ <vektor>, <vektor> ]\n[ <prava>, <prava> ]\n[ <prava>, <ravan> ]\n[ <ravan>, <ravan> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <ugao> ]\n[ <ta??ka>, <ta??ka>, <ta??ka>, <Direction> ]
AngularBisector=SimetralaUgla
AngularBisector.Syntax=[ <prava>, <prava> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]
Append=Dodaj
Append.Syntax=[ <Lista>, <objekat> ]\n[ <objekat>, <Lista> ]
ApplyMatrix=PrimeniMatricu
ApplyMatrix.Syntax=[ <matrica>, <objekat> ]
Arc=Luk
Arc.Syntax=[ <Kru??nica>, <ta??ka>, <ta??ka> ]\n[ <Ellipse>, <ta??ka>, <ta??ka> ]\n[ <Kru??nica>, <vrednost parametra>, <vrednost parametra> ]\n[ <Ellipse>, <vrednost parametra>, <vrednost parametra> ]
AreCollinear=JesuKolinearne
AreCollinear.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka> ]
AreConcurrent=JesuKonkurentni
AreConcurrent.Syntax=[ <prava>, <prava>, <prava> ]
AreConcyclic=JesuKoncikli??ne
AreConcyclic.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka>, <ta??ka> ]
AreCongruent.Syntax=[ <objekat>, <objekat> ]
AreEqual=JesuJednaki
AreEqual.Syntax=[ <objekat>, <objekat> ]
AreParallel=JesuParalelni
AreParallel.Syntax=[ <prava>, <prava> ]
ArePerpendicular=JesuNormalni
ArePerpendicular.Syntax=[ <prava>, <prava> ]
Area=Povr??ina
Area.Syntax=[ <konusni presek> ]\n[ <mnogougao> ]\n[ <ta??ka>, ..., <ta??ka> ]
Assume.SyntaxCAS=[ <uslov>, <izraz> ]
Asymptote=Asimptota
Asymptote.Syntax=[ <objekat> ]
AttachCopyToView=Prive??iKopijuZaPrikaz
AttachCopyToView.Syntax=[ <objekat>, <Prikaz 0|1|2> ]\n[ <objekat>, <Prikaz 0|1|2>, <Ta??ka 1>, <Ta??ka 2>, <Ekranska ta??ka 1>, <Ekranska ta??ka 2> ]
Axes=Ose
Axes.Syntax=[ <konusni presek> ]
Axes.Syntax3D=[ <konusni presek> ]\n[ <Kvadratika> ]
AxisStepX=KorakNaXOsi
AxisStepX.Syntax=[ ]
AxisStepY=KorakNaYOsi
AxisStepY.Syntax=[ ]
BarChart=TrakastiDijagram
BarChart.Syntax=[ <Lista neobra??enih podataka>, <Lista frekvencija> ]\n[ <Lista neobra??enih podataka>, <Width of Bars>, <Vertical Scale Factor (optional)> ]\n[ <Lista neobra??enih podataka>, <Lista frekvencija>, <Width of Bars> ]\n[ <Po??etna vrednost>, <Krajnja vrednost>, <lista visina> ]\n[ <Po??etna vrednost>, <Krajnja vrednost>, <izraz>, <promenljiva>, <From Number>, <To Number> ]\n[ <Po??etna vrednost>, <Krajnja vrednost>, <izraz>, <promenljiva>, <From Number>, <To Number>, <Step Width> ]
Barycenter=Baricentar
Barycenter.Syntax=[ <Lista ta??aka>, <Lista te??ina> ]
Bernoulli.Syntax=[ <Verovatno??a>, <Kumulativno (logi??ka vrednost)> ]
BetaDist.Syntax=[ <Alfa>, <Beta>, <Vrednost promenljive> ]\n[ <Alfa>, <Beta>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)>  ]\n[ <Alfa>, <Beta>, x, <Kumulativno (logi??ka vrednost)> ]
Binomial=BinomniKoeficijent
Binomial.Syntax=[ <broj>, <broj> ]
BinomialDist=BinomnaRaspodela
BinomialDist.Syntax=[ <Broj poku??aja>, <Verovatno??a uspeha> ]\n[ <Broj poku??aja>, <Verovatno??a uspeha>, <Kumulativno (logi??ka vrednost)> ]\n[ <Broj poku??aja>, <Verovatno??a uspeha>, <List of Values> ]\n[ <Broj poku??aja>, <Verovatno??a uspeha>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
BinomialDist.SyntaxCAS=[ <Broj poku??aja>, <Verovatno??a uspeha>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
Bottom=Dno
Bottom.Syntax=[ <Kvadratika> ]
BoxPlot=DijagramPravougaonika
BoxPlot.Syntax=[ <yPomak>, <ySkaliranje>, <Lista neobra??enih podataka> ]\n[ <yPomak>, <ySkaliranje>, <Lista neobra??enih podataka>, <Logi??ki IzvanOpsega> ]\n[ <yPomak>, <ySkaliranje>, <Lista neobra??enih podataka>, <Lista frekvencija>, <Logi??ki IzvanOpsega> ]\n[ <yPomak>, <ySkaliranje>, <Po??etna vrednost>, <Q1>, <Medijan>, <Q3>, <Krajnja vrednost> ]
Button=Dugme
Button.Syntax=[ ]\n[ <Naslov> ]
CASLoaded.Syntax=[]
CFactor=CFaktor
CFactor.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <promenljiva> ]
CIFactor=KIFaktor
CIFactor.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <promenljiva> ]
CSolutions=CRe??enja
CSolutions.SyntaxCAS=[ <jedna??ina> ]\n[ <jedna??ina>, <promenljiva> ]\n[ <lista jedna??ina>, <lista promenljivih> ]
CSolve=CRe??i
CSolve.SyntaxCAS=[ <jedna??ina> ]\n[ <jedna??ina>, <promenljiva> ]\n[ <lista jedna??ina>, <lista promenljivih> ]
Cauchy=Ko??i
Cauchy.Syntax=[ <Medijan>, <faktor>, <Vrednost promenljive> ]\n[ <Medijan>, <faktor>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)>  ]\n[ <Medijan>, <faktor>, x, <Kumulativno (logi??ka vrednost)> ]
Cauchy.SyntaxCAS=[ <Medijan>, <faktor>, <Vrednost promenljive> ]
Cell=??elija
Cell.Syntax=[ <kolona>, <vrsta> ]
CellRange=Opseg??elija
CellRange.Syntax=[ <po??etna ??elija>, <zavr??na ??elija> ]
Center=Centar
Center.Syntax=[ <konusni presek> ]
Center.Syntax3D=[ <konusni presek> ]\n[ <Kvadratika> ]
CenterView=CentrirajPrikaz
CenterView.Syntax=[ <sredi??nja ta??ka> ]
Centroid=Te??i??te
Centroid.Syntax=[ <mnogougao> ]
CharacteristicPolynomial.Syntax=[ <matrica> ]
Checkbox=PoljeZaPotvrdu
Checkbox.Syntax=[ ]\n[ <Naslov> ]\n[ <Lista> ]\n[ <Naslov>, <Lista> ]
ChiSquared=HiKvadrat
ChiSquared.Syntax=[ <stepeni slobode>, <Vrednost promenljive> ]\n[ <stepeni slobode>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <stepeni slobode>, x, <Kumulativno (logi??ka vrednost)> ]
ChiSquared.SyntaxCAS=[ <stepeni slobode>, <promenljiva> ]
ChiSquaredTest=HiKvadratTest
ChiSquaredTest.Syntax=[ <matrica> ]\n[ <Lista>, <Lista> ]\n[ <matrica>, <matrica> ]
Circle=Kru??nica
Circle.Syntax=[ <ta??ka>, <polupre??nik> ]\n[ <ta??ka>, <du??> ]\n[ <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]
Circle.Syntax3D=[ <ta??ka>, <polupre??nik> ]\n[ <ta??ka>, <du??> ]\n[ <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <prava>, <ta??ka> ]\n[ <ta??ka>, <Polupre??nik>, <Direction> ]\n[ <ta??ka>, <ta??ka>, <Direction> ]
CircleArc=Kru??niLuk
CircleArc.Syntax=[ <srednja ta??ka>, <ta??ka>, <ta??ka> ]
CircleSector=Ise??akKruga
CircleSector.Syntax=[ <srednja ta??ka>, <ta??ka>, <ta??ka> ]
CircumcircleArc=LukKrozTa??ke
CircumcircleArc.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka> ]
CircumcircleSector=Ise??akOpisanogKruga
CircumcircleSector.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka> ]
Circumference=ObimKrive
Circumference.Syntax=[ <konusni presek> ]
Classes=Klase
Classes.Syntax=[ <Lista neobra??enih podataka>, <broj klasa> ]\n[ <Lista neobra??enih podataka>, <po??etak>, <??irina klasa> ]
ClosestPoint=Najbli??aTa??ka
ClosestPoint.Syntax=[ <Path>, <ta??ka> ]\n[ <prava>, <prava> ]
ClosestPointRegion.Syntax=[ <oblast>, <ta??ka> ]
Coefficients=Koeficijenti
Coefficients.Syntax=[ <polinom> ]\n[ <konusni presek> ]
Coefficients.SyntaxCAS=[ <polinom> ]\n[ <polinom>, <promenljiva> ]
Column=Kolona
Column.Syntax=[ <??elija u tabeli> ]
ColumnName=ImeKolone
ColumnName.Syntax=[ <??elija u tabeli> ]
Command=Naredba
CommonDenominator=Zajedni??kiImenilac
CommonDenominator.Syntax=[ <izraz>, <izraz> ]
CompleteSquare=PotpuniKvadrat
CompleteSquare.Syntax=[ <kvadratna funkcija> ]
ComplexRoot=KompleksniKoren
ComplexRoot.Syntax=[ <polinom> ]
Cone=Kupa
Cone.Syntax=[ <Kru??nica>, <Visina> ]\n[ <ta??ka>, <ta??ka>, <Polupre??nik> ]\n[ <ta??ka>, <vektor>, <ugao> ]
ConeInfinite=Beskona??naKupa
ConeInfinite.Syntax=[ <ta??ka>, <vektor>, <ugao> ]\n[ <ta??ka>, <ta??ka>, <ugao> ]\n[ <ta??ka>, <prava>, <ugao> ]
Conic=KonusniPresek
Conic.Syntax=[ <Lista> ]\n[ <ta??ka>, <ta??ka>, <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <broj>, <broj>, <broj>, <broj>, <broj>, <broj> ]
ConstructionStep=KorakKonstrukcije
ConstructionStep.Syntax=[ ]\n[ <objekat> ]
ContingencyTable=TablicaSlu??ajeva
ContingencyTable.Syntax=[ <lista tekstova>, <lista tekstova> ]\n[ <lista tekstova>, <lista tekstova>, <opcije> ]\n[ <lista vrednosti vrsta>, <lista vrednosti kolona>, <tablica frekvencije> ]\n[ <lista vrednosti vrsta>, <lista vrednosti kolona>, <tablica frekvencije> , <opcije> ]
ContinuedFraction=Veri??niRazlomak
ContinuedFraction.Syntax=[ <broj> ]\n[ <broj>, <nivo> ]\n[ <broj>, <nivo>, <Shorthand true|false> ]
ConvexHull=KonveksniOmota??
ConvexHull.Syntax=[ <Lista ta??aka> ]
CopyFreeObject=KopirajNezavisniObjekat
CopyFreeObject.Syntax=[ <objekat> ]
Corner=??o??ak
Corner.Syntax=[ <Number of Corner> ]\n[ <Image>, <Number of Corner> ]\n[ <tekst>, <Number of Corner> ]\n[ <Graphics View>, <Number of Corner> ]
CountIf=PrebrojUslovno
CountIf.Syntax=[ <uslov>, <Lista> ]\n[ <uslov>, <promenljiva>, <Lista> ]
Covariance=Kovarijansa
Covariance.Syntax=[ <Lista ta??aka> ]\n[ <lista brojeva>, <lista brojeva> ]
Cross=VektorskiProizvod
Cross.Syntax=[ <vektor>, <vektor> ]
CrossRatio=Dvorazmera
CrossRatio.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka>, <ta??ka> ]
Cube=Kocka
Cube.Syntax=[ <Square> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Direction> ]
Cubic=KubnaKrivaTrougla
Cubic.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka>, <broj> ]
Curvature=Krivina
Curvature.Syntax=[ <ta??ka>, <objekat> ]
CurvatureVector=VektorKrivine
CurvatureVector.Syntax=[ <ta??ka>, <objekat> ]
CurveCartesian=Kriva
CurveCartesian.Syntax=[ <izraz>, <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
CurveCartesian.Syntax3D=[ <izraz>, <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]\n[ <izraz>, <izraz>, <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
Cylinder=Valjak
Cylinder.Syntax=[ <Kru??nica>, <Visina> ]\n[ <ta??ka>, <ta??ka>, <Polupre??nik> ]
CylinderInfinite=Beskona??niValjak
CylinderInfinite.Syntax=[ <prava>, <Polupre??nik> ]\n[ <ta??ka>, <vektor>, <Polupre??nik> ]\n[ <ta??ka>, <ta??ka>, <Polupre??nik> ]
DataFunction.Syntax=[ <lista brojeva>, <lista brojeva> ]
Defined=Definisan
Defined.Syntax=[ <objekat> ]
Degree=Stepen
Degree.Syntax=[ <polinom> ]
Degree.SyntaxCAS=[ <polinom> ]\n[ <polinom>, <promenljiva> ]
DelauneyTriangulation=DelaunayovaTriangulacija
DelauneyTriangulation.Syntax=[ <Lista ta??aka> ]
Delete=Izbri??i
Delete.Syntax=[ <objekat> ]
Denominator=Imenilac
Denominator.Syntax=[ <broj> ]\n[ <funkcija> ]
Denominator.SyntaxCAS=[ <izraz> ]
Derivative=Izvod
Derivative.Syntax=[ <funkcija> ]\n[ <kriva> ]\n[ <funkcija>, <broj> ]\n[ <funkcija>, <promenljiva> ]\n[ <kriva>, <broj> ]\n[ <funkcija>, <promenljiva>, <broj> ]
Derivative.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <promenljiva> ]\n[ <izraz>, <promenljiva>, <broj> ]
Determinant=Determinanta
Determinant.Syntax=[ <matrica> ]
Diameter=Pre??nik
Diameter.Syntax=[ <vektor>, <konusni presek> ]\n[ <prava>, <konusni presek> ]
Difference.Syntax=[ <mnogougao>, <mnogougao> ]
Dilate=Homotetija
Dilate.Syntax=[ <objekat>, <Dilation Factor> ]\n[ <objekat>, <Dilation Factor>, <Dilation Center Point> ]
Dimension=Dimenzija
Dimension.Syntax=[ <objekat> ]
Direction=Pravac
Direction.Syntax=[ <prava> ]
Directrix=Direktrisa
Directrix.Syntax=[ <konusni presek> ]
Distance=Rastojanje
Distance.Syntax=[ <ta??ka>, <objekat> ]\n[ <prava>, <prava> ]\n[ <ravan>, <ravan> ]
Distance.SyntaxCAS=[ <ta??ka>, <objekat> ]
Div=Deli
Div.Syntax=[ <deljenik broj>, <delilac broj> ]\n[ <deljenik polinom>, <delilac polinom> ]
Division=Deljenje
Division.Syntax=[ <deljenik broj>, <delilac broj> ]\n[ <deljenik polinom>, <delilac polinom> ]
Divisors=Delitelji
Divisors.Syntax=[ <broj> ]
DivisorsList=ListaDelilaca
DivisorsList.Syntax=[ <broj> ]
DivisorsSum=ZbirDelilaca
DivisorsSum.Syntax=[ <broj> ]
Dodecahedron=Dodekaedar
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Direction> ]
Dot=SkalarniProizvod
Dot.Syntax=[ <vektor>, <vektor> ]
DotPlot=Ta??kaskiDijagram
DotPlot.Syntax=[ <Lista neobra??enih podataka>, <Stack Adjacent Dots (optional)>, <Scale Factor (optional)>]
DynamicCoordinates=Dinami??keKoordinate
DynamicCoordinates.Syntax=[ <ta??ka>, <x-Coordinate>, <y-Coordinate> ]\n[ <ta??ka>, <x-Coordinate>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity=EkscentricitetKonusnogPreseka
Eccentricity.Syntax=[ <konusni presek> ]
Eigenvalues.SyntaxCAS=[ <matrica> ]
Eigenvectors.SyntaxCAS=[ <matrica> ]
Element.Syntax=[ <Lista>, <Pozicija elementa> ]\n[ <matrica>, <vrsta>, <kolona> ]\n[ <Lista>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Pozicija elementa> ]\n[ <matrica>, <vrsta>, <kolona> ]
Eliminate.Syntax=[ <lista polinoma>, <lista promenljivih> ]
Ellipse=Elipsa
Ellipse.Syntax=[ <fokus>, <fokus>, <du??ina glavne ose> ]\n[ <fokus>, <fokus>, <du??> ]\n[ <fokus>, <fokus>, <ta??ka> ]
Ends=Baze
Ends.Syntax=[ <Kvadratika> ]
Envelope.Syntax=[ <Path>, <ta??ka> ]
Erlang.Syntax=[ <oblik>, <Rate>, <Vrednost promenljive> ]\n[ <oblik>, <Rate>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <oblik>, <Rate>, x, <Kumulativno (logi??ka vrednost)> ]
Evaluate=Izra??unaj
Excentricity=Ekscentricitet
Excentricity.Syntax=[ <konusni presek> ]
Execute=Izvr??i
Execute.Syntax=[ <lista tekstova> ]\n[ <lista tekstova>, <parametar>, <parametar>, ... ]
Expand=Razvoj
Expand.Syntax=[ <izraz> ]
Exponential=EksponencijalnaRaspodela
Exponential.Syntax=[ <Lambda>, <Vrednost promenljive> ]\n[ <Lambda>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <Lambda>, x, <Kumulativno (logi??ka vrednost)> ]
Exponential.SyntaxCAS=[ <Lambda>, <Vrednost promenljive> ]
ExportImage.Syntax=[ <Property>, <vrednost>, <Property>, <vrednost>, ... ]
ExtendedGCD.Syntax=[ <ceo broj>, <ceo broj>]\n[ <polinom>, <polinom>]
Extremum=Ekstrem
Extremum.Syntax=[ <polinom> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]
Extremum.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]
FDistribution=FRaspodela
FDistribution.Syntax=[ <brojilac stepena slobode>, <imenilac stepena slobode>, <Vrednost promenljive> ]\n[ <brojilac stepena slobode>, <imenilac stepena slobode>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <brojilac stepena slobode>, <imenilac stepena slobode>, x, <Kumulativno (logi??ka vrednost)> ]
FDistribution.SyntaxCAS=[ <brojilac stepena slobode>, <imenilac stepena slobode>, <Vrednost promenljive> ]
Factor=Faktorizacija
Factor.Syntax=[ <polinom> ]
Factor.SyntaxCAS=[ <broj> ]\n[ <polinom> ]\n[ <izraz>, <promenljiva> ]
Factors=Faktori
Factors.Syntax=[ <polinom> ]\n[ <broj> ]
FillCells=Popuni??elije
FillCells.Syntax=[ <Opseg??elija>, <objekat> ]\n[ <??elija>, <Lista> ]\n[ <??elija>, <matrica> ]
FillColumn=PopuniKolonu
FillColumn.Syntax=[ <kolona>, <Lista> ]
FillRow=PopuniVrstu
FillRow.Syntax=[ <vrsta>, <Lista> ]
First=Prvi
First.Syntax=[ <Lista> ]\n[ <tekst> ]\n[ <Lista>, <broj elemenata> ]\n[ <tekst>, <broj elemenata> ]\n[ <lokus>, <broj elemenata> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <broj elemenata> ]
FirstAxis=GlavnaOsa
FirstAxis.Syntax=[ <konusni presek> ]
FirstAxisLength=GlavnaPoluosa
FirstAxisLength.Syntax=[ <konusni presek> ]
Fit.Syntax=[ <Lista ta??aka>, <lista funkcija> ]\n[ <Lista ta??aka>, <funkcija> ]
FitExp.Syntax=[ <Lista ta??aka> ]
FitGrowth=FitRasta
FitGrowth.Syntax=[ <Lista ta??aka> ]
FitImplicit.Syntax=[ <Lista ta??aka>, <Order> ]
FitLineX=FitLinearniX
FitLineX.Syntax=[ <Lista ta??aka> ]
FitLineY=FitLinearni
FitLineY.Syntax=[ <Lista ta??aka> ]
FitLog.Syntax=[ <Lista ta??aka> ]
FitLogistic=FitLogisti??ki
FitLogistic.Syntax=[ <Lista ta??aka> ]
FitPoly=FitPolinomni
FitPoly.Syntax=[ <Lista ta??aka>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow=FitStepeni
FitPow.Syntax=[ <Lista ta??aka> ]
FitSin.Syntax=[ <Lista ta??aka> ]
Flatten=Izravnaj
Flatten.Syntax=[ <Lista> ]
Focus=??i??a
Focus.Syntax=[ <konusni presek> ]
FractionText=RazlomakTekst
FractionText.Syntax=[ <broj> ]\n[ <ta??ka> ]\n[ <broj>, <Boolean Single fraction> ]
Frequency=Frekvencija
Frequency.Syntax=[ <Lista neobra??enih podataka> ]\n[ <Kumulativno (logi??ka vrednost)>, <Lista neobra??enih podataka> ]\n[ <lista granica klasa>, <Lista neobra??enih podataka> ]\n[ <lista tekstova>, <lista tekstova> ]\n[ <Kumulativno (logi??ka vrednost)>, <lista granica klasa>, <Lista neobra??enih podataka> ]\n[ <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)> ]\n[ <Kumulativno (logi??ka vrednost)>, <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)> ]
FrequencyPolygon=PoligonFrekvencija
FrequencyPolygon.Syntax=[ <lista granica klasa>, <lista visina> ]\n[ <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu - logi??ki>, <skala gustine (opciono)> ]\n[ <Kumulativno (logi??ka vrednost)>, <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu - logi??ki>, <skala gustine (opciono)> ]
FrequencyTable=TablicaFrekvencija
FrequencyTable.Syntax=[ <Lista neobra??enih podataka>, <Scale Factor (optional)> ]\n[ <Kumulativno (logi??ka vrednost)>, <Lista neobra??enih podataka> ]\n[ <lista granica klasa>, <Lista neobra??enih podataka> ]\n[ <Kumulativno (logi??ka vrednost)>, <lista granica klasa>, <Lista neobra??enih podataka> ]\n[ <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)> ]\n[ <Kumulativno (logi??ka vrednost)>, <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)> ]
FromBase=IzOsnove
FromBase.Syntax=[ <Broj kao tekst>, <Osnova> ]
Function=Funkcija
Function.Syntax=[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <lista brojeva> ]
Function.Syntax3D=[ <lista brojeva> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <izraz>, <Parameter Variable 1>, <Po??etna vrednost>, <Krajnja vrednost>, <Parameter Variable 2>, <Po??etna vrednost>, <Krajnja vrednost> ]
Function.SyntaxCAS=[ <funkcija>, <donja granica>, <gornja granica> ]
FutureValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Present Value (optional)>, <Type (optional)> ]
GCD=NZD
GCD.Syntax=[ <lista brojeva> ]\n[ <broj>, <broj> ]
GCD.SyntaxCAS=[ <lista brojeva> ]\n[ <lista polinoma> ]\n[ <broj>, <broj> ]\n[ <polinom>, <polinom> ]
Gamma.Syntax=[ <Alfa>, <Beta>, <Vrednost promenljive> ]\n[ <Alfa>, <Beta>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)>  ]\n[ <Alfa>, <Beta>, x, <Kumulativno (logi??ka vrednost)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Vrednost promenljive> ]
GeometricMean=GeometrijskaSredina
GeometricMean.Syntax=[ <lista brojeva> ]
GetTime=VremeSada
GetTime.Syntax=[]\n[ <Format> ]
GroebnerDegRevLex.Syntax=[ <lista polinoma> ]\n[ <lista polinoma>, <lista promenljivih> ]
GroebnerLex.Syntax=[ <lista polinoma> ]\n[ <lista polinoma>, <lista promenljivih> ]
GroebnerLexDeg.Syntax=[ <lista polinoma> ]\n[ <lista polinoma>, <lista promenljivih> ]
HarmonicMean=HarmonijskaSredina
HarmonicMean.Syntax=[ <lista brojeva> ]
Height=Visina
Height.Syntax=[ <Objekat> ]
HideLayer=SakrijSloj
HideLayer.Syntax=[ <broj> ]
Histogram.Syntax=[ <lista granica klasa>, <lista visina> ]\n[ <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)> ]\n[ <Kumulativno (logi??ka vrednost)>, <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)> ]
HistogramRight=HistogramDesni
HistogramRight.Syntax=[ <lista granica klasa>, <lista visina> ]\n[ <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)>  ]\n[ <Kumulativno (logi??ka vrednost)>, <lista granica klasa>, <Lista neobra??enih podataka>, <koristi gustinu>, <skala gustine (opciono)> ]
HyperGeometric=HipergeometrijskaRaspodela
HyperGeometric.Syntax=[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka> ]\n[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <Kumulativno (logi??ka vrednost)> ]\n[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
HyperGeometric.SyntaxCAS=[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
Hyperbola=Hiperbola
Hyperbola.Syntax=[ <fokus>, <fokus>, <du??ina glavne ose> ]\n[ <fokus>, <fokus>, <du??> ]\n[ <fokus>, <fokus>, <ta??ka> ]
IFactor=IFaktor
IFactor.Syntax=[ <polinom> ]
IFactor.SyntaxCAS=[ <izraz> ]
Icosahedron=Ikosaedar
Icosahedron.Syntax=[ <Equilateral Triangle> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Direction> ]
Identity=Jedini??naMatrica
Identity.Syntax=[ <broj> ]
If.Syntax=[ <uslov>, <onda> ]\n[ <uslov>, <onda>, <ina??e> ]
ImplicitCurve=ImplicitnaKriva
ImplicitCurve.Syntax=[ <Lista ta??aka> ]\n[ <f(x, y)> ]
ImplicitDerivative=ImplicitniIzvod
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <izraz>, <zavisna promenljiva>, <nezavisna promenljiva> ]
Incircle=UpisanaKru??nica
Incircle.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka> ]
IndexOf=IndeksOd
IndexOf.Syntax=[ <objekat>, <Lista> ]\n[ <tekst>, <tekst> ]\n[ <objekat>, <Lista>, <po??etni indeks> ]\n[ <tekst>, <tekst>, <po??etni indeks> ]
Insert=Ubaci
Insert.Syntax=[ <Lista>, <Lista>, <pozicija> ]\n[ <objekat>, <Lista>, <pozicija> ]
Integral.Syntax=[ <funkcija> ]\n[ <funkcija>, <promenljiva> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <donja granica>, <gornja granica>, <gornja granica> ]
Integral.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <promenljiva> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
IntegralBetween=IntegralIzme??u
IntegralBetween.Syntax=[ <funkcija>, <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <funkcija>, <donja granica>, <gornja granica>, <gornja granica> ]
IntegralBetween.SyntaxCAS=[ <funkcija>, <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <funkcija>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
IntegralSymbolic.Syntax=[ <funkcija> ]\n[ <funkcija>, <promenljiva> ]
InteriorAngles.Syntax=[ <mnogougao> ]
Intersect=Preseci
Intersect.Syntax=[ <objekat>, <objekat> ]\n[ <objekat>, <objekat>, <Index of Intersection Point> ]\n[ <objekat>, <objekat>, <Initial Point> ]\n[ <funkcija>, <funkcija>, <donja granica>, <gornja granica> ]\n[ <Curve 1>, <Curve 2>, <Parameter 1>, <Parameter 2> ]
Intersect.SyntaxCAS=[ <funkcija>, <funkcija> ]
IntersectConic.Syntax=[ <ravan>, <Kvadratika> ]\n[ <Kvadratika>, <Kvadratika> ]
IntersectPath=PresekKrivih
IntersectPath.Syntax=[ <prava>, <mnogougao> ]\n[ <mnogougao>, <mnogougao> ]
IntersectPath.Syntax3D=[ <prava>, <mnogougao> ]\n[ <mnogougao>, <mnogougao> ]\n[ <ravan>, <mnogougao> ]\n[ <ravan>, <Kvadratika> ]
Intersection=Presek
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Verovatno??a> ]
InverseBinomial=InverznaBinomnaRaspodela
InverseBinomial.Syntax=[ <Broj poku??aja>, <Verovatno??a uspeha>, <Cumulative Probability> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulative Probability>, <Verovatno??a uspeha>, <broj doga??aja> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulative Probability>, <Verovatno??a uspeha>, <broj doga??aja> ]
InverseCauchy=InverznaKo??ijevaRaspodela
InverseCauchy.Syntax=[ <Medijan>, <faktor>, <Verovatno??a> ]
InverseChiSquared=InverzniHiKvadrat
InverseChiSquared.Syntax=[ <stepeni slobode>, <Verovatno??a> ]
InverseExponential=InverznaEksponencijalnaRaspodela
InverseExponential.Syntax=[ <Lambda>, <Verovatno??a> ]
InverseFDistribution=InverznaFRaspodela
InverseFDistribution.Syntax=[ <brojilac stepena slobode>, <imenilac stepena slobode>, <Verovatno??a> ]
InverseGamma=InverznaGamaRaspodela
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Verovatno??a> ]
InverseHyperGeometric=InverznaHipergeometrijskaRaspodela
InverseHyperGeometric.Syntax=[ <veli??ina populacije>, <broj doga??aja>, <veli??ina uzorka>, <Verovatno??a> ]
InverseLaplace.Syntax=[ <funkcija> ]\n[ <funkcija>, <promenljiva> ]\n[ <funkcija>, <promenljiva>, <promenljiva> ]
InverseLogNormal=InverznaLogaritamskaNormalnaRaspodela
InverseLogNormal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <Verovatno??a> ]
InverseLogistic=InverznaLogisti??kaRaspodela
InverseLogistic.Syntax=[ <o??ekivanje>, <faktor>, <Verovatno??a> ]
InverseNormal=InverznaNormalnaRaspodela
InverseNormal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <Cumulative Probability> ]
InversePascal=InverznaPaskalovaRaspodela
InversePascal.Syntax=[ <broj doga??aja>, <verovatno??a uspeha>, <Verovatno??a> ]
InversePoisson=InverznaPoasonovaRaspodela
InversePoisson.Syntax=[ <o??ekivanje>, <Verovatno??a> ]
InverseTDistribution=InverznaTRaspodela
InverseTDistribution.Syntax=[ <stepeni slobode>, <Verovatno??a> ]
InverseWeibull=InverznaWeibullovaRaspodela
InverseWeibull.Syntax=[ <oblik>, <faktor>, <Verovatno??a> ]
InverseZipf=InverzniZipf
InverseZipf.Syntax=[ <broj elemenata>, <eksponent>, <Verovatno??a> ]
Invert=Invertuj
Invert.Syntax=[ <matrica> ]\n[ <funkcija> ]
IsFactored.Syntax=[ <polinom> ]
IsInRegion=JeUnutar
IsInRegion.Syntax=[ <ta??ka>, <oblast> ]
IsInteger=JeCeoBroj
IsInteger.Syntax=[ <broj> ]
IsPrime=JeProst
IsPrime.Syntax=[ <broj> ]
IsTangent.Syntax=[ <prava>, <konusni presek> ]
IsVertexForm.Syntax=[ <funkcija> ]
Iteration=Iteracija
Iteration.Syntax=[ <funkcija>, <Po??etna vrednost>, <Number of Iterations> ]\n[ <izraz>, <Variables>, <Start Values>, <Count> ]
IterationList=IteracijaLista
IterationList.Syntax=[ <funkcija>, <Po??etna vrednost>, <Number of Iterations> ]\n[ <izraz>, <Variables>, <Start Values>, <Count> ]
IterationList.SyntaxCAS=[ <funkcija>, <Po??etna vrednost>, <Number of Iterations> ]
Join=Spoji
Join.Syntax=[ <lista listi> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization.SyntaxCAS=[ <matrica> ]
KeepIf=Zadr??iAko
KeepIf.Syntax=[ <uslov>, <Lista> ]\n[ <uslov>, <promenljiva>, <Lista> ]
LCM=NZS
LCM.Syntax=[ <lista brojeva> ]\n[ <broj>, <broj> ]
LCM.SyntaxCAS=[ <lista brojeva> ]\n[ <lista polinoma> ]\n[ <broj>, <broj> ]\n[ <polinom>, <polinom> ]
LUDecomposition.Syntax=[ <matrica> ]
LaTeX=FormulaTekst
LaTeX.Syntax=[ <objekat> ]\n[ <objekat>, <Boolean for Substitution of Variables> ]\n[ <objekat>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]
Laplace.Syntax=[ <funkcija> ]\n[ <funkcija>, <promenljiva> ]\n[ <funkcija>, <promenljiva>, <promenljiva> ]
Last=Poslednji
Last.Syntax=[ <Lista> ]\n[ <tekst> ]\n[ <Lista>, <broj elemenata> ]\n[ <tekst>, <broj elemenata> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <broj elemenata> ]
LeftSide=LevaStrana
LeftSide.Syntax=[ <jedna??ina> ]
LeftSide.SyntaxCAS=[ <jedna??ina> ]\n[ <lista jedna??ina> ]\n[ <lista jedna??ina>, <indeks> ]
LeftSum=LevaSuma
LeftSum.Syntax=[ <funkcija>, <donja granica>, <gornja granica>, <broj pravougaonika> ]
Length=Du??ina
Length.Syntax=[ <objekat> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <po??etna ta??ka>, <krajnja ta??ka> ]\n[ <kriva>, <Start t-Value>, <End t-Value> ]\n[ <kriva>, <po??etna ta??ka>, <krajnja ta??ka> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <promenljiva>, <donja granica>, <gornja granica> ]
LetterToUnicode=SlovoUUnicode
LetterToUnicode.Syntax=[ <tekst> ]
Limit=Limes
Limit.Syntax=[ <funkcija>, <vrednost> ]
Limit.SyntaxCAS=[ <izraz>, <vrednost> ]\n[ <izraz>, <promenljiva>, <vrednost> ]
LimitAbove=LimesOdozgo
LimitAbove.Syntax=[ <funkcija>, <vrednost> ]
LimitAbove.SyntaxCAS=[ <izraz>, <vrednost> ]\n[ <izraz>, <promenljiva>, <vrednost> ]
LimitBelow=LimesOdozdo
LimitBelow.Syntax=[ <funkcija>, <vrednost> ]
LimitBelow.SyntaxCAS=[ <izraz>, <vrednost> ]\n[ <izraz>, <promenljiva>, <vrednost> ]
Line=Prava
Line.Syntax=[ <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <paralelna prava> ]\n[ <ta??ka>, <vektor pravca> ]
LineBisector=SimetralaDu??i
LineBisector.Syntax=[ <du??> ]\n[ <ta??ka>, <ta??ka> ]
LineBisector.Syntax3D=[ <du??> ]\n[ <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Direction> ]
LineGraph.Syntax=[ <lista x koordinata>, <lista y koordinata> ]
Locus=Lokus
Locus.Syntax=[ <ta??ka koja kreira liniju lokusa>, <ta??ka> ]\n[ <ta??ka koja kreira liniju lokusa>, <kliza??> ]\n[ <polje nagiba>, <ta??ka> ]\n[ <f(x, y)>, <ta??ka> ]
LocusEquation=Jedna??inaLokusa
LocusEquation.Syntax=[ <lokus> ]\n[ <Locus Point>, <Moving Point> ]\n[ <logi??ki izraz>, <Moving Point> ]
LogNormal=LogaritamskaNormalnaRaspodela
LogNormal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <Vrednost promenljive> ]\n[ <o??ekivanje>, <standardna devijacija>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)>  ]\n[ <o??ekivanje>, <standardna devijacija>, x, <Kumulativno (logi??ka vrednost)> ]
Logistic=Logisti??kaRaspodela
Logistic.Syntax=[ <o??ekivanje>, <faktor>, <Vrednost promenljive> ]\n[ <o??ekivanje>, <faktor>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)>  ]\n[ <o??ekivanje>, <faktor>, x, <Kumulativno (logi??ka vrednost)> ]
LowerSum=DonjaSuma
LowerSum.Syntax=[ <funkcija>, <donja granica>, <gornja granica>, <broj pravougaonika> ]
MatrixPlot=GrafMatrice
MatrixRank=RangMatrice
MatrixRank.Syntax=[ <matrica> ]
Max.Syntax=[ <Interval> ]\n[ <broj>, <broj> ]\n[ <Lista> ]\n[ <Lista neobra??enih podataka>, <Lista frekvencija> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Interval> ]\n[ <broj>, <broj> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <Lista neobra??enih podataka>, <Lista frekvencija> ]
Maximize=Maksimizuj
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
Mean=Aritmeti??kaSredina
Mean.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
MeanX=Aritmeti??kaSredinaX
MeanX.Syntax=[ <Lista ta??aka> ]
MeanY=Aritmeti??kaSredinaY
MeanY.Syntax=[ <Lista ta??aka> ]
Median=Medijana
Median.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
Median.SyntaxCAS=[ <lista brojeva> ]
Midpoint=Sredi??te
Midpoint.Syntax=[ <du??> ]\n[ <konusni presek> ]\n[ <Interval> ]\n[ <ta??ka>, <ta??ka> ]
Min.Syntax=[ <Interval> ]\n[ <broj>, <broj> ]\n[ <Lista> ]\n[ <Lista neobra??enih podataka>, <Lista frekvencija> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Interval> ]\n[ <broj>, <broj> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <Lista neobra??enih podataka>, <Lista frekvencija> ]
MinimalPolynomial.Syntax=[ <matrica> ]
Minimize=Minimizuj
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
MinimumSpanningTree=NajmanjeRazgranatoStablo
MinimumSpanningTree.Syntax=[ <Lista ta??aka> ]
Mirror=Ogledanje
Mirror.Syntax=[ <objekat>, <ta??ka> ]\n[ <objekat>, <prava> ]\n[ <objekat>, <Kru??nica> ]
Mirror.Syntax3D=[ <objekat>, <ta??ka> ]\n[ <objekat>, <prava> ]\n[ <objekat>, <ravan> ]\n[ <objekat>, <Kru??nica> ]
MixedNumber=PraviRazlomak
MixedNumber.SyntaxCAS=[ <broj> ]
Mod=Ostatak
Mod.Syntax=[ <deljenik broj>, <delilac broj> ]\n[ <deljenik polinom>, <delilac polinom> ]
Mode=Modus
Mode.Syntax=[ <lista brojeva> ]
ModularExponent.Syntax=[ <broj>, <broj>, <broj> ]
NDerivative.Syntax=[ <funkcija> ]\n[ <funkcija>, <Order> ]
NIntegral.Syntax=[ <funkcija> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <donja granica>, <Start y-Value>, <gornja granica> ]
NIntegral.SyntaxCAS=[ <funkcija>, <donja granica>, <gornja granica> ]\n[ <funkcija>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
NInvert.Syntax=[ <funkcija> ]
NSolutions=NRe??enja
NSolutions.Syntax=[ <jedna??ina> ]
NSolutions.SyntaxCAS=[ <jedna??ina> ]\n[ <jedna??ina>, <promenljiva> ]\n[ <jedna??ina>, <promenljiva = po??etna vrednost> ]\n[ <lista jedna??ina>, <lista promenljivih> ]
NSolve=NRe??i
NSolve.Syntax=[ <jedna??ina> ]
NSolve.SyntaxCAS=[ <jedna??ina> ]\n[ <jedna??ina>, <promenljiva> ]\n[ <jedna??ina>, <promenljiva = po??etna vrednost> ]\n[ <lista jedna??ina>, <lista promenljivih> ]
NSolveODE.Syntax=[ <List of Derivatives>, <Initial x-coordinate>, <List of Initial y-coordinates>, <Final x-coordinate> ]
Name=Ime
Name.Syntax=[ <objekat> ]
Net.Syntax=[ <Polyhedron>, <broj> ]\n[ <Polyhedron>, <broj>, <Face>, <Edge>, <Edge>, ... ]
NextPrime=Slede??iProstBroj
NextPrime.Syntax=[ <broj> ]
Normal=NormalnaRaspodela
Normal.Syntax=[ <o??ekivanje>, <standardna devijacija>, <Vrednost promenljive> ]\n[ <o??ekivanje>, <standardna devijacija>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <o??ekivanje>, <standardna devijacija>, x, <Kumulativno (logi??ka vrednost)> ]
NormalQuantilePlot=GrafikKvantilaNormalneRaspodele
NormalQuantilePlot.Syntax=[ <Lista neobra??enih podataka> ]
Normalize.Syntax=[ <lista brojeva> ]\n[ <Lista ta??aka> ]
Numerator=Brojilac
Numerator.Syntax=[ <broj> ]\n[ <funkcija> ]
Numerator.SyntaxCAS=[ <izraz> ]
Numeric=Numeri??ki
Numeric.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <zna??ajne cifre> ]
Object=Objekat
Object.Syntax=[ <tekstualno ime objekta> ]
Octahedron=Oktaedar
Octahedron.Syntax=[ <Equilateral Triangle> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Direction> ]
Ordinal=Redni
Ordinal.Syntax=[ <ceo broj> ]
OrdinalRank=ListaRednihBrojeva
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine=Normala
OrthogonalLine.Syntax=[ <ta??ka>, <prava> ]\n[ <ta??ka>, <du??> ]\n[ <ta??ka>, <vektor> ]
OrthogonalLine.Syntax3D=[ <ta??ka>, <prava> ]\n[ <ta??ka>, <du??> ]\n[ <ta??ka>, <vektor> ]\n[ <ta??ka>, <ravan> ]\n[ <prava>, <prava> ]\n[ <ta??ka>, <Direction>, <Direction> ]\n[ <ta??ka>, <prava>, <Context> ]
OrthogonalPlane=NormalnaRavan
OrthogonalPlane.Syntax=[ <ta??ka>, <prava> ]\n[ <ta??ka>, <vektor> ]
OrthogonalVector=NormalniVektor
OrthogonalVector.Syntax=[ <prava> ]\n[ <du??> ]\n[ <vektor> ]
OrthogonalVector.Syntax3D=[ <prava> ]\n[ <du??> ]\n[ <vektor> ]\n[ <ravan> ]
OrthogonalVector.SyntaxCAS=[ <vektor> ]
OsculatingCircle=OskulatornaKru??nica
OsculatingCircle.Syntax=[ <ta??ka>, <objekat> ]
PMCC=KoeficijentKorelacije
PMCC.Syntax=[ <Lista ta??aka> ]\n[ <lista x koordinata>, <lista y koordinata> ]
Pan=PomeranjePrikaza
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <ta??ka>, <prava> ]
Parameter=Parametar
Parameter.Syntax=[ <konusni presek> ]
ParametricDerivative=ParametarskiIzvod
ParametricDerivative.Syntax=[ <kriva> ]
ParseToFunction=Protuma??iFunkciju
ParseToFunction.Syntax=[ <funkcija>, <tekst> ]
ParseToNumber=Protuma??iBroj
ParseToNumber.Syntax=[ <broj>, <tekst> ]
PartialFractions=ParcijalniRazlomci
PartialFractions.Syntax=[ <funkcija> ]
PartialFractions.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <promenljiva> ]
Pascal=PaskalovaRaspodela
Pascal.Syntax=[ <broj doga??aja>, <verovatno??a uspeha> ]\n[ <broj doga??aja>, <verovatno??a uspeha>, <Kumulativno (logi??ka vrednost)> ]\n[ <broj doga??aja>, <verovatno??a uspeha>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
Pascal.SyntaxCAS=[ <broj doga??aja>, <verovatno??a uspeha>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
PathParameter=ParametarKrive
PathParameter.Syntax=[ <ta??ka na krivoj> ]
Payment.Syntax=[ <Rate>, <Number of Periods>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PenStroke.Syntax=[ <ta??ka>, ..., <ta??ka> ]
Percentile=Percentil
Percentile.Syntax=[ <lista brojeva>, <procenat> ]
Perimeter=Obim
Perimeter.Syntax=[ <mnogougao> ]\n[ <konusni presek> ]\n[ <lokus> ]
Periods.Syntax=[ <Rate>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PieChart.Syntax=[ <Lista frekvencija> ]\n[ <Lista frekvencija>, <Center>, <Polupre??nik> ]
Plane=Ravan
Plane.Syntax=[ <mnogougao> ]\n[ <konusni presek> ]\n[ <ta??ka>, <ravan> ]\n[ <ta??ka>, <prava> ]\n[ <prava>, <prava> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <vektor>, <vektor> ]
PlaneBisector=RavanSimetrije
PlaneBisector.Syntax=[ <du??> ]\n[ <ta??ka>, <ta??ka> ]
PlaySound=Sviraj
PlaySound.Syntax=[ <URL> ]\n[ <Boolean Play> ]\n[ <funkcija>, <Min Value>, <Max Value> ]\n[ <funkcija>, <Min Value>, <Max Value>, <Sample Rate>, <Sample Depth> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point=Ta??ka
Point.Syntax=[ <objekat> ]\n[ <objekat>, <parametar> ]\n[ <ta??ka>, <vektor> ]\n[ <Lista> ]
PointIn=Ta??kaU
PointIn.Syntax=[ <oblast> ]
PointList=ListaTa??aka
PointList.Syntax=[ <Lista> ]
Poisson=PoasonovaRaspodela
Poisson.Syntax=[ <o??ekivanje> ]\n[ <o??ekivanje>, <Kumulativno (logi??ka vrednost)> ]\n[ <o??ekivanje>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
Poisson.SyntaxCAS=[ <o??ekivanje>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
Polar=Polara
Polar.Syntax=[ <ta??ka>, <konusni presek> ]\n[ <prava>, <konusni presek> ]
PolyLine=IzlomljenaLinija
PolyLine.Syntax=[ <Lista ta??aka> ]\n[ <ta??ka>, ..., <ta??ka> ]
Polygon=Mnogougao
Polygon.Syntax=[ <Lista ta??aka> ]\n[ <ta??ka>, ..., <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Number of Vertices> ]
Polygon.Syntax3D=[ <Lista ta??aka> ]\n[ <ta??ka>, ..., <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Number of Vertices> ]\n[ <ta??ka>, <ta??ka>, <Number of Vertices>, <Direction> ]
Polynomial=Polinom
Polynomial.Syntax=[ <funkcija> ]\n[ <Lista ta??aka> ]
Polynomial.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <promenljiva> ]
PresentValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Future Value (optional)>, <Type (optional)> ]
PreviousPrime=PrethodniProstBroj
PreviousPrime.Syntax=[ <broj> ]
PrimeFactors=Prosti??inioci
PrimeFactors.Syntax=[ <broj> ]
Prism=Prizma
Prism.Syntax=[ <mnogougao>, <ta??ka> ]\n[ <mnogougao>, <vrednost visine> ]\n[ <ta??ka>, <ta??ka>, ... ]
Product=Proizvod
Product.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <broj elemenata> ]\n[ <lista brojeva>, <Lista frekvencija> ]\n[ <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
Product.SyntaxCAS=[ <lista izraza> ]\n[ <izraz>, <promenljiva>, <po??etni indeks>, <krajnja vrednost> ]
Prove=Proveri
Prove.Syntax=[ <logi??ki izraz> ]
ProveDetails=Dokaz
ProveDetails.Syntax=[ <logi??ki izraz> ]
Pyramid=Piramida
Pyramid.Syntax=[ <mnogougao>, <ta??ka> ]\n[ <mnogougao>, <Visina> ]\n[ <ta??ka>, <ta??ka>, <ta??ka>, <ta??ka>, ... ]
Q1=Q1
Q1.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
Q3=Q3
Q3.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
QRDecomposition.Syntax=[ <matrica> ]
QuadricSide=Strana
QuadricSide.Syntax=[ <Kvadratika> ]
RSquare=RKvadrat
RSquare.Syntax=[ <Lista ta??aka>, <funkcija> ]
Radius=Polupre??nik
Radius.Syntax=[ <konusni presek> ]
Random=Slu??ajanBrojIzme??u
Random.Syntax=[ <najmanji celi broj>, <najve??i celi broj> ]\n[ <najmanji celi broj>, <najve??i celi broj>, <Number of Samples> ]\n[ <najmanji celi broj>, <najve??i celi broj>, <fiksirano - logi??ki> ]
Random.SyntaxCAS=[ <najmanji celi broj>, <najve??i celi broj> ]\n[ <najmanji celi broj>, <najve??i celi broj>, <Number of Samples> ]
RandomBinomial=BinomnaSlu??ajnaVarijabla
RandomBinomial.Syntax=[ <Broj poku??aja>, <Verovatno??a> ]
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement=Slu??ajniElement
RandomElement.Syntax=[ <Lista> ]
RandomNormal=NormalnaSlu??ajnaVarijabla
RandomNormal.Syntax=[ <o??ekivanje>, <standardna devijacija> ]
RandomPointIn.Syntax=[ <oblast> ]\n[ <Lista ta??aka> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=PoasonovaSlu??ajnaVarijabla
RandomPoisson.Syntax=[ <o??ekivanje> ]
RandomPolynomial=Slu??ajniPolinom
RandomPolynomial.Syntax=[ <stepen>, <minimalna vrednost koeficijenata>, <maksimalna vrednost koeficijenata> ]
RandomPolynomial.SyntaxCAS=[ <stepen>, <minimalna vrednost koeficijenata>, <maksimalna vrednost koeficijenata> ]\n[ <promenljiva>, <stepen>, <minimalna vrednost koeficijenata>, <maksimalna vrednost koeficijenata> ]
RandomUniform=Slu??ajanBrojUniformno
RandomUniform.Syntax=[ <min>, <max> ]\n[ <min>, <max>, <Number of Samples> ]
Rate.Syntax=[ <Number of Periods>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)>, <Guess (optional)> ]
Rationalize=Racionalizuj
Rationalize.SyntaxCAS=[ <broj> ]
Ray=Poluprava
Ray.Syntax=[ <po??etna ta??ka>, <ta??ka> ]\n[ <po??etna ta??ka>, <vektor pravca> ]
ReadText.Syntax=[ <tekst> ]
RectangleSum=SumaPravougaonika
RectangleSum.Syntax=[ <funkcija>, <donja granica>, <gornja granica>, <broj pravougaonika>, <pozicija po??etka pravougaonika> ]
ReducedRowEchelonForm=RedukovaniRedEchelonoveForme
ReducedRowEchelonForm.Syntax=[ <matrica> ]
Relation=Odnos
Relation.Syntax=[ <Lista> ]\n[ <objekat>, <objekat> ]
RemovableDiscontinuity.Syntax=[ <funkcija> ]
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined=IzbaciNedefinisane
RemoveUndefined.Syntax=[ <Lista> ]
Rename=Preimenuj
Rename.Syntax=[ <objekat>, <ime> ]
Repeat.Syntax=[ <broj>, <Scripting Command>, <Scripting Command>, ... ]
ReplaceAll.Syntax=[ <tekst>, <Text to Match>, <Text to Replace> ]
ResidualPlot=DijagramRasipanja
ResidualPlot.Syntax=[ <Lista ta??aka>, <funkcija> ]
Reverse=Obrni
Reverse.Syntax=[ <Lista> ]
RightSide=DesnaStrana
RightSide.Syntax=[ <jedna??ina> ]
RightSide.SyntaxCAS=[ <jedna??ina> ]\n[ <lista jedna??ina> ]\n[ <lista jedna??ina>, <indeks> ]
RigidPolygon=KrutiPoligon
RigidPolygon.Syntax=[ <mnogougao> ]\n[ <mnogougao>, <pomeraj x>, <pomeraj y> ]\n[ <slobodna ta??ka>, ..., <slobodna ta??ka> ]
Root=NulaFunkcije
Root.Syntax=[ <polinom> ]\n[ <funkcija>, <po??etna x vrednost> ]\n[ <funkcija>, <donja granica>, <gornja granica> ]
Root.SyntaxCAS=[ <polinom> ]
RootList=NuleLista
RootList.Syntax=[ <Lista> ]
RootMeanSquare=KvadratnaSredina
RootMeanSquare.Syntax=[ <lista brojeva> ]
Roots=NuleFunkcije
Roots.Syntax=[ <funkcija>, <donja granica>, <gornja granica> ]
Rotate=Rotiraj
Rotate.Syntax=[ <objekat>, <ugao> ]\n[ <objekat>, <ugao>, <ta??ka> ]
Rotate.Syntax3D=[ <objekat>, <ugao> ]\n[ <objekat>, <ugao>, <ta??ka> ]\n[ <objekat>, <ugao>, <Osa rotacije> ]\n[ <objekat>, <ugao>, <Ta??ka na osi>, <Smer osa u ravni> ]
RotateText=RotirajTekst
RotateText.Syntax=[ <tekst>, <ugao> ]
Row=Vrsta
Row.Syntax=[ <??elija u tabeli> ]
RunClickScript.Syntax=[ <objekat> ]
RunUpdateScript.Syntax=[ <objekat> ]
SDX.Syntax=[ <Lista ta??aka> ]
SDY.Syntax=[ <Lista ta??aka> ]
SVD.Syntax=[ <matrica> ]
SXX=SXX
SXX.Syntax=[ <lista brojeva> ]\n[ <Lista ta??aka> ]
SXY=SXY
SXY.Syntax=[ <Lista ta??aka> ]\n[ <lista brojeva>, <lista brojeva> ]
SYY=SYY
SYY.Syntax=[ <Lista ta??aka> ]
Sample=Uzorak
Sample.Syntax=[ <Lista>, <veli??ina> ]\n[ <Lista>, <veli??ina>, <logi??ki ponavljanje> ]
SampleSD=StandardnaDevijacijaUzorka
SampleSD.SyntaxCAS=[ <lista brojeva> ]
SampleSDX=SDXUzorka
SampleSDX.Syntax=[ <Lista ta??aka> ]
SampleSDY=SDYUzorka
SampleSDY.Syntax=[ <Lista ta??aka> ]
SampleVariance=VarijansaUzorka
SampleVariance.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
SampleVariance.SyntaxCAS=[ <lista brojeva> ]
ScientificText=Nau??niZapis
ScientificText.Syntax=[ <broj> ]\n[ <broj>, <preciznost> ]
SecondAxis=SporednaOsa
SecondAxis.Syntax=[ <konusni presek> ]
SecondAxisLength=SporednaPoluosa
SecondAxisLength.Syntax=[ <konusni presek> ]
Sector=Ise??ak
Sector.Syntax=[ <konusni presek>, <ta??ka>, <ta??ka> ]\n[ <konusni presek>, <vrednost parametra>, <vrednost parametra> ]
Segment=Du??
Segment.Syntax=[ <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <du??ina> ]
SelectObjects=OdaberiObjekte
SelectObjects.Syntax=[ ]\n[ <objekat>, <objekat>, ... ]
SelectedElement=OdaberiElement
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex=OdaberiIndeks
SelectedIndex.Syntax=[ <Lista> ]
Semicircle=Polukru??nica
Semicircle.Syntax=[ <ta??ka>, <ta??ka> ]
Sequence=Niz
Sequence.Syntax=[ <Krajnja vrednost> ]\n[ <Po??etna vrednost>, <Krajnja vrednost> ]\n[ <Po??etna vrednost>, <Krajnja vrednost>, <korak> ]\n[ <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]\n[ <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost>, <korak> ]
SetActiveView=AktivirajPrikaz
SetActiveView.Syntax=[ <prikaz> ]\n[ <ravan> ]
SetAxesRatio=PostaviRazmerOsa
SetAxesRatio.Syntax=[ <broj>, <broj> ]
SetAxesRatio.Syntax3D=[ <broj>, <broj> ]\n[ <broj>, <broj>, <broj> ]
SetBackgroundColor=PostaviBojuPozadine
SetBackgroundColor.Syntax=[ <Boja> ]\n[ <objekat>, <Boja> ]\n[ <crvena>, <zelena>, <plava> ]\n[ <objekat>, <crvena>, <zelena>, <plava> ]
SetCaption=PostaviNatpis
SetCaption.Syntax=[ <objekat>, <tekst> ]
SetColor=PostaviBoju
SetColor.Syntax=[ <objekat>, <Boja> ]\n[ <objekat>, <crvena>, <zelena>, <plava> ]
SetConditionToShowObject=PostaviUslovZaPrikazivanjeObjekta
SetConditionToShowObject.Syntax=[ <objekat>, <uslov> ]
SetConstructionStep.Syntax=[ <broj> ]
SetCoords=PostaviKoordinate
SetCoords.Syntax=[ <objekat>, <x>, <y> ]\n[ <objekat>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <objekat>, <broj> ]\n[ <du??>, <broj>, <broj>]
SetDynamicColor=PostaviDinami??kuBoju
SetDynamicColor.Syntax=[ <objekat>, <crvena>, <zelena>, <plava> ]\n[ <objekat>, <crvena>, <zelena>, <plava>, <Opacity> ]
SetFilling=PostaviPopunu
SetFilling.Syntax=[ <objekat>, <broj> ]
SetFixed=Fiksiraj
SetFixed.Syntax=[ <objekat>, <true | false> ]\n[ <objekat>, <true | false>, <true | false> ]
SetImage.Syntax=[ <objekat>, <Image> ]\n[ <objekat>, <tekst> ]
SetLabelMode=PostaviPrikazOznake
SetLabelMode.Syntax=[ <objekat>, <broj> ]
SetLayer=PostaviSloj
SetLayer.Syntax=[ <objekat>, <sloj> ]
SetLevelOfDetail.Syntax=[ <Surface>, <Level of Detail> ]
SetLineStyle=PostaviStilLinije
SetLineStyle.Syntax=[ <objekat>, <broj> ]
SetLineThickness=PostaviDebljinuLinije
SetLineThickness.Syntax=[ <objekat>, <broj> ]
SetPerspective.Syntax=[ <tekst> ]
SetPointSize=PostaviVeli??inuTa??ke
SetPointSize.Syntax=[ <objekat>, <broj> ]
SetPointStyle=PostaviStilTa??ke
SetPointStyle.Syntax=[ <ta??ka>, <broj> ]
SetSeed=PostaviGenerator
SetSeed.Syntax=[ <ceo broj> ]
SetSpinSpeed.Syntax=[ <broj> ]
SetTooltipMode=PostaviNa??inInfoObla??i??a
SetTooltipMode.Syntax=[ <objekat>, <broj> ]
SetTrace=PostaviPra??enje
SetTrace.Syntax=[ <objekat>, <true | false> ]
SetValue=PostaviVrednost
SetValue.Syntax=[ <logi??ka vrednost>, <0|1> ]\n[ <objekat>, <objekat> ]\n[ <Lista>, <broj>, <objekat> ]
SetViewDirection.Syntax=[ ]\n[ <Direction> ]\n[ <Direction>, <Boolean animate> ]
SetVisibleInView=PostaviVidljivoUPrikazu
SetVisibleInView.Syntax=[ <objekat>, <prikaz broj 1|2>, <logi??ka vrednost> ]
Shear=Smicanje
Shear.Syntax=[ <objekat>, <prava>, <odnos> ]
ShortestDistance=Najkra??eRastojanje
ShortestDistance.Syntax=[ <lista du??i>, <po??etna ta??ka>, <krajnja ta??ka>, <logi??ki ponderisano> ]
ShowAxes=Prika??iOse
ShowAxes.Syntax=[]\n[ <logi??ka vrednost> ]\n[ <prikaz>, <logi??ka vrednost> ]
ShowGrid=Prika??iMre??u
ShowGrid.Syntax=[]\n[ <logi??ka vrednost> ]\n[ <prikaz>, <logi??ka vrednost> ]
ShowLabel=Prika??iOznaku
ShowLabel.Syntax=[ <objekat>, <logi??ka vrednost> ]
ShowLayer=Prika??iSloj
ShowLayer.Syntax=[ <broj> ]
Shuffle=Prome??aj
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista ta??aka> ]\n[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
SigmaXY.Syntax=[ <Lista ta??aka> ]\n[ <lista x koordinata>, <lista y koordinata> ]
SigmaYY.Syntax=[ <Lista ta??aka> ]
Simplify=Pojednostavi
Simplify.Syntax=[ <funkcija> ]\n[ <tekst> ]
Simplify.SyntaxCAS=[ <funkcija> ]
Slider=Kliza??
Slider.Syntax=[ <min>, <max>, <korak>, <brzina>, <??irina>, <da li je ugao>, <horizontalni>, <animirani>, <slu??ajni> ]
Slope=Nagib
Slope.Syntax=[ <prava> ]
SlopeField=PoljeSmerova
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <broj> ]\n[ <f(x, y)>, <broj>, <faktor du??ine a> ]\n[ <f(x, y)>, <broj>, <faktor du??ine a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=Prika??iGrafik
SlowPlot.Syntax=[ <funkcija> ]\n[ <funkcija>, <Boolean Repeat> ]
Solutions=Re??enja
Solutions.Syntax=[ <jedna??ina> ]
Solutions.SyntaxCAS=[ <jedna??ina> ]\n[ <jedna??ina>, <promenljiva> ]\n[ <lista jedna??ina>, <lista promenljivih> ]
Solve=Re??i
Solve.Syntax=[ <jedna??ina> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <jedna??ina>, <promenljiva> ]\n[ <lista jedna??ina>, <lista promenljivih> ]\n[ <List of Parametric Equations>, <lista promenljivih> ]\n[ <jedna??ina>, <promenljiva>, <List of assumptions> ]
SolveCubic.SyntaxCAS=[ <Cubic Polynomial> ]
SolveODE=Re??iODE
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <ta??ka(e) na f> ]\n[ <f'(x, y)>, <po??etna vrednost x>, <po??etna vrednost y>, <krajnja vrednost x>, <korak> ]\n[ <y'>, <x'>, <po??etna vrednost x>, <po??etna vrednost y>, <krajnja vrednost t>, <korak> ]\n[ <b(x)>, <c(x)>, <f(x)>, <po??etna vrednost x>, <po??etna vrednost y>, <po??etna vrednost y'>, <krajnja vrednost x>, <korak> ]
SolveODE.SyntaxCAS=[ <jedna??ina> ]\n[ <jedna??ina>, <ta??ka(e) na f> ]\n[ <jedna??ina>, <ta??ka(e) na f>, <ta??ka(e) na f'> ]\n[ <jedna??ina>, <zavisna promenljiva>, <nezavisna promenljiva>, <ta??ka(e) na f> ] \n[ <jedna??ina>, <zavisna promenljiva>, <nezavisna promenljiva>, <ta??ka(e) na f>, <ta??ka(e) na f'> ]
SolveQuartic.SyntaxCAS=[ <Quartic Polynomial> ]
Sort=Sortiraj
Sort.Syntax=[ <Lista> ]\n[ <vrednosti>, <klju??evi> ]
Spearman.Syntax=[ <Lista ta??aka> ]\n[ <lista brojeva>, <lista brojeva> ]
Sphere=Sfera
Sphere.Syntax=[ <ta??ka>, <Polupre??nik> ]\n[ <ta??ka>, <ta??ka> ]
Spline.Syntax=[ <Lista ta??aka> ]\n[ <Lista ta??aka>, <Order ??? 3> ]\n[ <Lista ta??aka>, <Order ??? 3>, <Weight Function> ]
Split.Syntax=[ <tekst>, <List of Texts to split on> ]
StartAnimation=Po??niAnimaciju
StartAnimation.Syntax=[ ]\n[ <logi??ka vrednost> ]\n[ <kliza?? ili ta??ka>, <kliza?? ili ta??ka>, ... ]\n[ <kliza?? ili ta??ka>, <kliza?? ili ta??ka>, ..., <logi??ka vrednost> ]
StartRecord.Syntax=[ ]\n[ <logi??ka vrednost> ]
StemPlot=DijagramStabloList
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <pode??avanje -1|0|1> ]
StepGraph=StepenastiGrafik
StepGraph.Syntax=[ <Lista ta??aka> ]\n[ <Lista ta??aka>, <logi??ki povezano> ]\n[ <lista x koordinata>, <lista y koordinata> ]\n[ <Lista ta??aka>, <logi??ki povezano>, <stil ta??ke> ]\n[ <lista x koordinata>, <lista y koordinata>, <logi??ki povezano> ]\n[ <lista x koordinata>, <lista y koordinata>, <logi??ki povezano>, <stil ta??ke> ]
StickGraph=StubastiGrafik
StickGraph.Syntax=[ <Lista ta??aka> ]\n[ <Lista ta??aka>, <logi??ki horizontalno> ]\n[ <lista x koordinata>, <lista y koordinata> ]\n[ <lista x koordinata>, <lista y koordinata>, <logi??ki horizontalno> ]
Stretch=Rastegni
Stretch.Syntax=[ <objekat>, <vektor> ]\n[ <objekat>, <prava>, <odnos> ]
Substitute=Zameni
Substitute.SyntaxCAS=[ <izraz>, <Substitution List> ]\n[ <izraz>, <from>, <to> ]
Sum=Suma
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <broj elemenata> ]\n[ <Lista>, <Lista frekvencija> ]\n[ <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <izraz>, <promenljiva>, <Po??etna vrednost>, <Krajnja vrednost> ]
SumSquaredErrors=SumaKvadrataGre??aka
SumSquaredErrors.Syntax=[ <Lista ta??aka>, <funkcija> ]
SurdText=PrirodniZapis
SurdText.Syntax=[ <ta??ka> ]\n[ <broj> ]\n[ <broj>, <Lista> ]
Surface=Povr??
Surface.Syntax=[ <funkcija>, <ugao> ]\n[ <kriva>, <ugao>, <prava> ]\n[ <izraz>, <izraz>, <izraz>, <Parameter Variable 1>, <Po??etna vrednost>, <Krajnja vrednost>, <Parameter Variable 2>, <Po??etna vrednost>, <Krajnja vrednost> ]
TDistribution=TRaspodela
TDistribution.Syntax=[ <stepeni slobode>, <Vrednost promenljive> ]\n[ <stepeni slobode>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <stepeni slobode>, x, <Kumulativno (logi??ka vrednost)> ]
TDistribution.SyntaxCAS=[ <stepeni slobode>, <Vrednost promenljive> ]
TMean2Estimate=O??ekivanaTSrednjaVrednost2
TMean2Estimate.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <Nivo poverenja>, <vrsta varijabilnosti - logi??ki> ]\n[ <srednja vrednost uzorka 1>, <standardna devijacija uzorka 1>, <veli??ina uzorka 1>, <srednja vrednost uzorka 2>, <standardna devijacija uzorka 2>, <veli??ina uzorka 2>, <Nivo poverenja>, <vrsta varijabilnosti - logi??ki> ]
TMeanEstimate=O??ekivanaTSrednjaVrednost
TMeanEstimate.Syntax=[ <lista podataka uzorka>, <Nivo poverenja> ]\n[ <srednja vrednost uzorka>, <standardna devijacija uzorka>, <veli??ina uzorka>, <Nivo poverenja> ]
TTest.Syntax=[ <lista podataka uzorka>, <o??ekivana srednja vrednost>, <broj krakova> ]\n[ <srednja vrednost uzorka>, <standardna devijacija uzorka>, <veli??ina uzorka>, <o??ekivana srednja vrednost>, <broj krakova> ]
TTest2.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <broj krakova>, <vrsta varijabilnosti - logi??ki> ]\n[ <srednja vrednost uzorka 1>, <standardna devijacija uzorka 1>, <veli??ina uzorka 1>, <srednja vrednost uzorka 2>, <standardna devijacija uzorka 2>, <veli??ina uzorka 2>, <broj krakova>, <vrsta varijabilnosti - logi??ki> ]
TTestPaired=TTestUpareni
TTestPaired.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <broj krakova> ]
TableText=TabelaTekst
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <poravnanje teksta> ]\n[ <Lista>, <Lista>, ..., <poravnanje teksta>, <Minimum Cell Width> ]\n[ <Lista>, <Lista>, ..., <poravnanje teksta>, <Minimum Cell Width>, <Minimum Cell Height> ]
Take=Uzmi
Take.Syntax=[ <Lista>, <Start Position>, <End Position> ]\n[ <Lista>, <Start Position> ]\n[ <tekst>, <Start Position>, <End Position> ]\n[ <tekst>, <Start Position> ]
Take.SyntaxCAS=[ <Lista>, <Start Position> ]\n[ <Lista>, <Start Position>, <End Position> ]\n[ <tekst>, <Start Position>, <End Position> ]\n[ <tekst>, <Start Position> ]
Tangent=Tangenta
Tangent.Syntax=[ <ta??ka>, <konusni presek> ]\n[ <ta??ka>, <funkcija> ]\n[ <ta??ka>, <kriva> ]\n[ <x vrednost>, <funkcija> ]\n[ <prava>, <konusni presek> ]\n[ <konusni presek>, <konusni presek> ]
Tangent.SyntaxCAS=[ <broj>, <funkcija> ]\n[ <ta??ka>, <objekat> ]
TaylorSeries=TejlorovPolinom
TaylorSeries.Syntax=[ <funkcija>, <x vrednost>, <red polinoma> ]
TaylorSeries.SyntaxCAS=[ <izraz>, <x vrednost>, <red polinoma> ]\n[ <izraz>, <promenljiva>, <Vrednost promenljive>, <red polinoma> ]
Tetrahedron=PravilniTetraedar
Tetrahedron.Syntax=[ <Equilateral Triangle> ]\n[ <ta??ka>, <ta??ka>, <ta??ka> ]\n[ <ta??ka>, <ta??ka>, <Direction> ]
Text=Tekst
Text.Syntax=[ <objekat> ]\n[ <objekat>, <Boolean for Substitution of Variables> ]\n[ <objekat>, <ta??ka> ]\n[ <objekat>, <ta??ka>, <Boolean for Substitution of Variables> ]\n[ <objekat>, <ta??ka>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]\n[ <objekat>, <ta??ka>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <objekat>, <ta??ka>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Vertical alignment -1|0|1> ]
TextToUnicode=TekstUUnicode
TextToUnicode.Syntax=[ <tekst> ]
Textfield=TekstualnoPolje
Textfield.Syntax=[ <vezani objekat> ]
TiedRank=VezaniRedniBroj
TiedRank.Syntax=[ <Lista> ]
ToBase=UOsnovu
ToBase.Syntax=[ <broj>, <Osnova> ]
ToComplex=KompleksniZapis
ToComplex.Syntax=[ <vektor> ]
ToExponential=EksponencijalniZapis
ToExponential.SyntaxCAS=[ <kompleksan broj> ]
ToPoint=KoordinatniZapis
ToPoint.Syntax=[ <kompleksan broj> ]
ToPolar=UPolarni
ToPolar.Syntax=[ <kompleksan broj> ]\n[ <vektor> ]
ToolImage=SlikaAlata
ToolImage.Syntax=[ <broj> ]\n[ <broj>, <ta??ka> ]\n[ <broj>, <ta??ka>, <ta??ka> ]
Top=Vrh
Top.Syntax=[ <Kvadratika> ]
Translate=Translacija
Translate.Syntax=[ <objekat>, <vektor> ]\n[ <vektor>, <po??etna ta??ka> ]
Transpose=Transponuj
Transpose.Syntax=[ <matrica> ]
TrapezoidalSum=TrapeznaSuma
TrapezoidalSum.Syntax=[ <funkcija>, <donja granica>, <gornja granica>, <broj trapeza> ]
TravelingSalesman=Putuju??iTrgovac
TravelingSalesman.Syntax=[ <Lista ta??aka> ]
TriangleCenter=Karakteristi??naTa??kaTrougla
TriangleCenter.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka>, <broj> ]
TriangleCurve=Te??inskaKrivaTrougla
TriangleCurve.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka>, <jedna??ina> ]
Triangular=TrougaonaRaspodela
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <Vrednost promenljive> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Kumulativno (logi??ka vrednost)> ]
TrigCombine=TrigKombinuj
TrigCombine.Syntax=[ <izraz> ]\n[ <izraz>, <ciljna funkcija> ]
TrigExpand=TrigPro??iri
TrigExpand.Syntax=[ <izraz> ]\n[ <izraz>, <ciljna funkcija> ]
TrigExpand.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <ciljna funkcija> ]\n[ <izraz>, <ciljna funkcija>, <ciljna promenljiva> ]\n[ <izraz>, <ciljna funkcija>, <ciljna promenljiva>, <ciljna promenljiva> ]
TrigSimplify=TrigPojednostavi
TrigSimplify.Syntax=[ <izraz> ]
Trilinear=TrilinearnaTa??ka
Trilinear.Syntax=[ <ta??ka>, <ta??ka>, <ta??ka>, <broj>, <broj>, <broj> ]
TurningPoint=PrevojnaTa??ka
TurningPoint.Syntax=[ <polinom> ]
TurningPoint.SyntaxCAS=[ <funkcija> ]
Turtle=Kornja??a
Turtle.Syntax=[]
TurtleBack=Kornja??aNazad
TurtleBack.Syntax=[ <Kornja??a>, <Udaljenost> ]
TurtleDown.Syntax=[ <Kornja??a> ]
TurtleForward=Kornja??aNapred
TurtleForward.Syntax=[ <Kornja??a>, <Udaljenost> ]
TurtleLeft=Kornja??aLevo
TurtleLeft.Syntax=[ <Kornja??a>, <ugao> ]
TurtleRight=Kornja??aDesno
TurtleRight.Syntax=[ <Kornja??a>, <ugao> ]
TurtleUp.Syntax=[ <Kornja??a> ]
Type.Syntax=[ <objekat> ]
UnicodeToLetter=UnicodeUSlovo
UnicodeToLetter.Syntax=[ <ceo broj> ]
UnicodeToText=UnicodeUTekst
UnicodeToText.Syntax=[ <lista celih brojeva> ]
Uniform=UniformnaRaspodela
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <Vrednost promenljive> ]\n[ <Lower Bound>, <Upper Bound>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <Lower Bound>, <Upper Bound>, x, <Kumulativno (logi??ka vrednost)> ]
Union=Unija
Union.Syntax=[ <Lista>, <Lista> ]\n[ <mnogougao>, <mnogougao> ]
Unique=Jedinstveni
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector=Jedini??niNormalniVektor
UnitOrthogonalVector.Syntax=[ <prava> ]\n[ <du??> ]\n[ <vektor> ]
UnitOrthogonalVector.Syntax3D=[ <prava> ]\n[ <du??> ]\n[ <vektor> ]\n[ <ravan> ]
UnitOrthogonalVector.SyntaxCAS=[ <vektor> ]
UnitVector=Jedini??niVektor
UnitVector.Syntax=[ <objekat> ]
UnitVector.SyntaxCAS=[ <vektor> ]
UpdateConstruction=A??urirajKonstrukciju
UpdateConstruction.Syntax=[ ]\n[ <Broj ponavljanja> ]
UpperSum=GornjaSuma
UpperSum.Syntax=[ <funkcija>, <donja granica>, <gornja granica>, <broj pravougaonika> ]
Variance=Varijansa
Variance.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
Vector=Vektor
Vector.Syntax=[ <ta??ka> ]\n[ <po??etna ta??ka>, <krajnja ta??ka> ]
Vertex=Teme
Vertex.Syntax=[ <konusni presek> ]\n[ <Inequality> ]\n[ <mnogougao> ]\n[ <mnogougao>, <indeks> ]\n[ <du??>, <indeks> ]
VerticalText=VertikalniTekst
VerticalText.Syntax=[ <tekst> ]\n[ <tekst>, <ta??ka> ]
Volume=Zapremina
Volume.Syntax=[ <Objekat> ]
Voronoi.Syntax=[ <Lista ta??aka> ]
Weibull.Syntax=[ <oblik>, <faktor>, <Vrednost promenljive> ]\n[ <oblik>, <faktor>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]\n[ <oblik>, <faktor>, x, <Kumulativno (logi??ka vrednost)> ]
Weibull.SyntaxCAS=[ <oblik>, <faktor>, <Vrednost promenljive> ]
ZMean2Estimate=O??ekivanaZSrednjaVrednost2
ZMean2Estimate.Syntax=[ <lista podataka uzorka 1>, <lista podataka uzorka 2>, <??1>, <??2>, <Nivo poverenja> ]\n[ <srednja vrednost uzorka 1>, <??1>, <veli??ina uzorka 1>, <srednja vrednost uzorka 2>, <??2>, <veli??ina uzorka 2>, <Nivo poverenja> ]
ZMean2Test=ZSrednjaVrednost2Test
ZMean2Test.Syntax=[ <lista podataka uzorka 1>, <??1>, <lista podataka uzorka 2>, <??2>, <broj krakova> ]\n[ <srednja vrednost uzorka 1>, <??1>, <veli??ina uzorka 1>, <srednja vrednost uzorka 2>, <??2>, <veli??ina uzorka 2>, <broj krakova> ]
ZMeanEstimate=O??ekivanaZSrednjaVrednost
ZMeanEstimate.Syntax=[ <lista podataka uzorka>, <??>, <Nivo poverenja> ]\n[ <srednja vrednost uzorka>, <??>, <veli??ina uzorka>, <Nivo poverenja> ]
ZMeanTest=ZSrednjaVrednostTest
ZMeanTest.Syntax=[ <lista podataka uzorka>, <??>, <o??ekivana srednja vrednost>, <broj krakova> ]\n[ <srednja vrednost uzorka>, <??>, <veli??ina uzorka>, <o??ekivana srednja vrednost>, <broj krakova> ]
ZProportion2Estimate=ZProcenaProporcije2
ZProportion2Estimate.Syntax=[ <Uzorak Proporcije 1>, <veli??ina uzorka 1>, <Uzorak Proporcije 2>, <veli??ina uzorka 2>, <Nivo poverenja> ]
ZProportion2Test=ZTestProporcije2
ZProportion2Test.Syntax=[ <Uzorak Proporcije 1>, <veli??ina uzorka 1>, <Uzorak Proporcije 2>, <veli??ina uzorka 2>, <broj krakova> ]
ZProportionEstimate=ZProcenaProporcije
ZProportionEstimate.Syntax=[ <Uzorak Proporcije>, <veli??ina uzorka>, <Nivo poverenja> ]
ZProportionTest=ZTestProporcije
ZProportionTest.Syntax=[ <Uzorak Proporcije>, <veli??ina uzorka>, <O??ekivana srednja vrednost>, <broj krakova> ]
Zip.Syntax=[ <izraz>, <Prom1>, <Lista1>, <Prom2>, <Lista2>, ... ]
Zipf.Syntax=[ <broj elemenata>, <eksponent> ]\n[ <broj elemenata>, <eksponent>, <Kumulativno (logi??ka vrednost)> ]\n[ <broj elemenata>, <eksponent>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
Zipf.SyntaxCAS=[ <broj elemenata>, <eksponent>, <Vrednost promenljive>, <Kumulativno (logi??ka vrednost)> ]
ZoomIn=Pove??anje
ZoomIn.Syntax=[ ]\n[ <faktor smanjenja> ]\n[ <faktor smanjenja>, <sredi??nja ta??ka> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=Smanjenje
ZoomOut.Syntax=[ <faktor smanjenja> ]\n[ <faktor smanjenja>, <sredi??nja ta??ka> ]
mad.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
mean.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
nCr.Syntax=[ <broj>, <broj> ]
stdev.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]
stdevp.Syntax=[ <Lista neobra??enih podataka> ]\n[ <lista brojeva>, <Lista frekvencija> ]