# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA=????????????????????????????????????????????????
ANOVA.Syntax=[ <????????????>, <????????????>, ... ]
AffineRatio=???????????????????????????????????????????????????
AffineRatio.Syntax=[ <???????????????>, <???????????????>, <???????????????> ]
Angle=?????????
Angle.Syntax=[ <?????????> ]\n[ <????????????>, <????????????> ]\n[ <????????????>, <????????????> ]\n[ <???????????????>, <Apex>, <???????????????> ]\n[ <???????????????>, <Apex>, <?????????> ]
Angle.Syntax3D=[ <?????????> ]\n[ <????????????>, <????????????> ]\n[ <????????????>, <????????????> ]\n[ <????????????>, <Plane> ]\n[ <Plane>, <Plane> ]\n[ <???????????????>, <Apex>, <???????????????> ]\n[ <???????????????>, <Apex>, <?????????> ]\n[ <???????????????>, <???????????????>, <???????????????>, <Direction> ]
AngularBisector=???????????????????????????
AngularBisector.Syntax=[ <????????????>, <????????????> ]\n[ <???????????????>, <???????????????>, <???????????????> ]
Append=?????????
Append.Syntax=[ <????????????>, <?????????> ]\n[ <?????????>, <????????????> ]
ApplyMatrix.Syntax=[ <???????????????>, <?????????> ]
Arc=?????????
Arc.Syntax=[ <??????????????????>, <???????????????>, <???????????????> ]\n[ <Ellipse>, <???????????????>, <???????????????> ]\n[ <??????????????????>, <???????????????????????? ???????????????>, <???????????????????????? ???????????????> ]\n[ <Ellipse>, <???????????????????????? ???????????????>, <???????????????????????? ???????????????> ]
AreCollinear=?????????????????????
AreCollinear.Syntax=[ <???????????????>, <???????????????>, <???????????????> ]
AreConcurrent=????????????????????????
AreConcurrent.Syntax=[ <????????????>, <????????????>, <????????????> ]
AreConcyclic=????????????????????????
AreConcyclic.Syntax=[ <???????????????>, <???????????????>, <???????????????>, <???????????????> ]
AreCongruent.Syntax=[ <?????????>, <?????????> ]
AreEqual=???????????????
AreEqual.Syntax=[ <?????????>, <?????????> ]
AreParallel=??????????????????
AreParallel.Syntax=[ <????????????>, <????????????> ]
ArePerpendicular=?????????
ArePerpendicular.Syntax=[ <????????????>, <????????????> ]
Area=???????????????????????????
Area.Syntax=[ <???????????????> ]\n[ <??????????????????> ]\n[ <???????????????>, ..., <???????????????> ]
Assume.SyntaxCAS=[ <??????>, <??????????????????> ]
Asymptote=????????????????????????
Asymptote.Syntax=[ <?????????> ]
AttachCopyToView.Syntax=[ <?????????>, <View 0|1|2> ]\n[ <?????????>, <View 0|1|2>, <Point 1>, <Point 2>, <Screen Point 1>, <Screen Point 2> ]
Axes=????????????
Axes.Syntax=[ <???????????????> ]
Axes.Syntax3D=[ <???????????????> ]\n[ <Quadric> ]
AxisStepX=X???????????????????????????
AxisStepX.Syntax=[ ]
AxisStepY=Y???????????????????????????
AxisStepY.Syntax=[ ]
BarChart=???????????????????????????
BarChart.Syntax=[ <????????????????????? ???????????????????????? ????????????>, <????????????????????????????????? ????????????> ]\n[ <????????????????????? ???????????????????????? ????????????>, <Width of Bars>, <Vertical Scale Factor (optional)> ]\n[ <????????????????????? ???????????????????????? ????????????>, <????????????????????????????????? ????????????>, <Width of Bars> ]\n[ <????????????????????? ???????????????>, <??????????????? ???????????????>, <List of Heights> ]\n[ <????????????????????? ???????????????>, <??????????????? ???????????????>, <??????????????????>, <??????>, <From Number>, <To Number> ]\n[ <????????????????????? ???????????????>, <??????????????? ???????????????>, <??????????????????>, <??????>, <From Number>, <To Number>, <Step Width> ]
Barycenter=????????????????????????????????????
Barycenter.Syntax=[ <List of Points>, <List of Weights> ]
Bernoulli=?????????????????????
Bernoulli.Syntax=[ <???????????????????????????>, <?????????????????? ???????????????> ]
BetaDist.Syntax=[ <Alpha>, <Beta>, <??????????????? ???????????????> ]\n[ <Alpha>, <Beta>, <??????????????? ???????????????>, <?????????????????? ???????????????>  ]\n[ <Alpha>, <Beta>, x, <?????????????????? ???????????????> ]
Binomial=????????????????????????????????????
Binomial.Syntax=[ <??????????????????>, <??????????????????> ]
BinomialDist=?????????????????????????????????
BinomialDist.Syntax=[ <????????????????????????????????? ??????????????????>, <??????????????? ???????????????????????????> ]\n[ <????????????????????????????????? ??????????????????>, <??????????????? ???????????????????????????>, <?????????????????? ???????????????> ]\n[ <????????????????????????????????? ??????????????????>, <??????????????? ???????????????????????????>, <List of Values> ]\n[ <????????????????????????????????? ??????????????????>, <??????????????? ???????????????????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
BinomialDist.SyntaxCAS=[ <????????????????????????????????? ??????????????????>, <??????????????? ???????????????????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
Bottom.Syntax=[ <Quadric> ]
BoxPlot=??????????????????????????????
BoxPlot.Syntax=[ <y??????????????????>, <y??????????????????>, <????????????????????? ???????????????????????? ????????????> ]\n[ <y??????????????????>, <y??????????????????>, <????????????????????? ???????????????????????? ????????????>, <?????????????????? ?????????????????????> ]\n[ <y??????????????????>, <y??????????????????>, <????????????????????? ???????????????????????? ????????????>, <????????????????????????????????? ????????????>, <?????????????????? ?????????????????????> ]\n[ <y??????????????????>, <y??????????????????>, <????????????????????? ???????????????>, <Q1>, <???????????????>, <Q3>, <??????????????? ???????????????> ]
Button=?????????
Button.Syntax=[ ]\n[ <??????????????????> ]
CASLoaded.Syntax=[]
CFactor.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]
CIFactor.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]
CSolutions.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]\n[ <?????????????????????????????? ????????????>, <?????????????????? ????????????> ]
CSolve.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]\n[ <?????????????????????????????? ????????????>, <?????????????????? ????????????> ]
Cauchy.Syntax=[ <???????????????>, <??????????????????>, <??????????????? ???????????????> ]\n[ <???????????????>, <??????????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????>  ]\n[ <???????????????>, <??????????????????>, x, <?????????????????? ???????????????> ]
Cauchy.SyntaxCAS=[ <???????????????>, <??????????????????>, <??????????????? ???????????????> ]
Cell=?????????
Cell.Syntax=[ <???????????????>, <??????> ]
CellRange=??????????????????????????????????????????
CellRange.Syntax=[ <??????????????? ??????????????????>, <??????????????? ??????????????????> ]
Center=??????????????????
Center.Syntax=[ <???????????????> ]
Center.Syntax3D=[ <???????????????> ]\n[ <Quadric> ]
CenterView=?????????????????????????????????
CenterView.Syntax=[ <???????????? ???????????????> ]
Centroid=?????????????????????????????????
Centroid.Syntax=[ <??????????????????> ]
CharacteristicPolynomial.Syntax=[ <???????????????> ]
Checkbox=????????????????????????
Checkbox.Syntax=[ ]\n[ <??????????????????> ]\n[ <????????????> ]\n[ <??????????????????>, <????????????> ]
ChiSquared.Syntax=[ <Degrees of Freedom>, <??????????????? ???????????????> ]\n[ <Degrees of Freedom>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Degrees of Freedom>, x, <?????????????????? ???????????????> ]
ChiSquared.SyntaxCAS=[ <Degrees of Freedom>, <??????> ]
ChiSquaredTest=???????????????????????????????????????????????????
ChiSquaredTest.Syntax=[ <???????????????> ]\n[ <????????????>, <????????????> ]\n[ <???????????????>, <???????????????> ]
Circle=??????????????????
Circle.Syntax=[ <???????????????>, <?????????????????????????????? ???????????????> ]\n[ <???????????????>, <?????????????????????> ]\n[ <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <???????????????> ]
Circle.Syntax3D=[ <???????????????>, <?????????????????????????????? ???????????????> ]\n[ <???????????????>, <?????????????????????> ]\n[ <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <???????????????> ]\n[ <????????????>, <???????????????> ]\n[ <???????????????>, <????????????????????????>, <Direction> ]\n[ <???????????????>, <???????????????>, <Direction> ]
CircleArc=???????????????????????????????????????
CircleArc.Syntax=[ <???????????????????????????>, <???????????????>, <???????????????> ]
CircleSector=??????????????????????????????????????????????????????
CircleSector.Syntax=[ <???????????????????????????>, <???????????????>, <???????????????> ]
CircumcircleArc=????????????????????????????????????????????????
CircumcircleArc.Syntax=[ <???????????????>, <???????????????>, <???????????????> ]
CircumcircleSector=???????????????????????????????????????????????????????????????
CircumcircleSector.Syntax=[ <???????????????>, <???????????????>, <???????????????> ]
Circumference=????????????
Circumference.Syntax=[ <???????????????> ]
Classes=?????????????????????
Classes.Syntax=[ <????????????????????? ???????????????????????? ????????????>, <??????????????????????????? ??????????????????> ]\n[ <????????????????????? ???????????????????????? ????????????>, <?????????????????????>, <??????????????????????????? ???????????????> ]
ClosestPoint=??????????????????????????????
ClosestPoint.Syntax=[ <???????????????>, <???????????????> ]\n[ <????????????>, <????????????> ]
ClosestPointRegion.Syntax=[ <?????????????????????>, <???????????????> ]
Coefficients=????????????
Coefficients.Syntax=[ <??????????????????> ]\n[ <???????????????> ]
Coefficients.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]
Column=???????????????
Column.Syntax=[ <?????????????????????????????? ??????????????????> ]
ColumnName=????????????????????????
ColumnName.Syntax=[ <?????????????????????????????? ??????????????????> ]
Command=??????????????????
CommonDenominator=??????????????????????????????
CommonDenominator.Syntax=[ <??????????????????>, <??????????????????> ]
CompleteSquare=?????????????????????????????????????????????
CompleteSquare.Syntax=[ <?????????????????? ??????> ]
ComplexRoot=?????????????????????
ComplexRoot.Syntax=[ <??????????????????> ]
Cone=????????????
Cone.Syntax=[ <??????????????????>, <????????????> ]\n[ <???????????????>, <???????????????>, <????????????????????????> ]\n[ <???????????????>, <????????????>, <?????????> ]
ConeInfinite.Syntax=[ <???????????????>, <????????????>, <?????????> ]\n[ <???????????????>, <???????????????>, <?????????> ]\n[ <???????????????>, <????????????>, <?????????> ]
Conic=???????????????
Conic.Syntax=[ <????????????> ]\n[ <???????????????>, <???????????????>, <???????????????>, <???????????????>, <???????????????> ]\n[ <??????????????????>, <??????????????????>, <??????????????????>, <??????????????????>, <??????????????????>, <??????????????????> ]
ConstructionStep=???????????????????????????
ConstructionStep.Syntax=[ ]\n[ <?????????> ]
ContingencyTable=???????????????????????????????????????
ContingencyTable.Syntax=[ <??????????????? ????????????>, <??????????????? ????????????> ]\n[ <??????????????? ????????????>, <??????????????? ????????????>, <??????????????????> ]\n[ <????????????????????? ????????????????????? ????????????>, <????????????????????????????????? ????????????????????? ????????????>, <?????????????????????????????? ????????????> ]\n[ <????????????????????? ????????????????????? ????????????>, <????????????????????????????????? ????????????????????? ????????????>, <?????????????????????????????? ????????????> , <??????????????????> ]
ContinuedFraction=????????????????????????????????????????????????
ContinuedFraction.Syntax=[ <??????????????????> ]\n[ <??????????????????>, <?????????-??????> ]\n[ <??????????????????>, <?????????-??????>, <?????????????????? ??????/????????????> ]
ConvexHull=????????????????????????????????????????????????
ConvexHull.Syntax=[ <List of Points> ]
CopyFreeObject=???????????????????????????????????????????????????
CopyFreeObject.Syntax=[ <?????????> ]
Corner=????????????
Corner.Syntax=[ <Number of Corner> ]\n[ <Image>, <Number of Corner> ]\n[ <???????????????>, <Number of Corner> ]\n[ <Graphics View>, <Number of Corner> ]
CountIf=???????????????????????????????????????
CountIf.Syntax=[ <??????>, <????????????> ]\n[ <??????>, <??????>, <????????????> ]
Covariance=???????????????
Covariance.Syntax=[ <List of Points> ]\n[ <??????????????????????????? ????????????>, <??????????????????????????? ????????????> ]
Cross.Syntax=[ <????????????>, <????????????> ]
CrossRatio=?????????????????????????????????
CrossRatio.Syntax=[ <???????????????>, <???????????????>, <???????????????>, <???????????????> ]
Cube=??????
Cube.Syntax=[ <Square> ]\n[ <???????????????>, <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <Direction> ]
Cubic.Syntax=[ <???????????????>, <???????????????>, <???????????????>, <??????????????????> ]
Curvature=??????????????????
Curvature.Syntax=[ <???????????????>, <?????????> ]
CurvatureVector=??????????????????????????????
CurvatureVector.Syntax=[ <???????????????>, <?????????> ]
CurveCartesian=????????????
CurveCartesian.Syntax=[ <??????????????????>, <??????????????????>, <???????????????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
CurveCartesian.Syntax3D=[ <??????????????????>, <??????????????????>, <???????????????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]\n[ <??????????????????>, <??????????????????>, <??????????????????>, <???????????????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
Cylinder=??????????????????
Cylinder.Syntax=[ <??????????????????>, <????????????> ]\n[ <???????????????>, <???????????????>, <????????????????????????> ]
CylinderInfinite.Syntax=[ <????????????>, <????????????????????????> ]\n[ <???????????????>, <????????????>, <????????????????????????> ]\n[ <???????????????>, <???????????????>, <????????????????????????> ]
DataFunction.Syntax=[ <??????????????????????????? ????????????>, <??????????????????????????? ????????????> ]
Defined=???????????????????????????????????????
Defined.Syntax=[ <?????????> ]
Degree=??????????????????
Degree.Syntax=[ <??????????????????> ]
Degree.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]
DelauneyTriangulation=????????????????????????????????????????????????????????????
DelauneyTriangulation.Syntax=[ <List of Points> ]
Delete=????????????
Delete.Syntax=[ <?????????> ]
Denominator.Syntax=[ <??????????????????> ]\n[ <??????> ]
Denominator.SyntaxCAS=[ <??????????????????> ]
Derivative=???????????????
Derivative.Syntax=[ <??????> ]\n[ <????????????> ]\n[ <??????>, <??????????????????> ]\n[ <??????>, <??????> ]\n[ <????????????>, <??????????????????> ]\n[ <??????>, <??????>, <??????????????????> ]
Derivative.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]\n[ <??????????????????>, <??????>, <??????????????????> ]
Determinant=???????????????????????????
Determinant.Syntax=[ <???????????????> ]
Diameter=???????????????????????????????????????
Diameter.Syntax=[ <????????????>, <???????????????> ]\n[ <????????????>, <???????????????> ]
Difference.Syntax=[ <??????????????????>, <??????????????????> ]
Dilate=????????????????????????
Dilate.Syntax=[ <?????????>, <Dilation Factor> ]\n[ <?????????>, <Dilation Factor>, <Dilation Center Point> ]
Dimension=????????????????????????
Dimension.Syntax=[ <?????????> ]
Direction=????????????
Direction.Syntax=[ <????????????> ]
Directrix=?????????????????????
Directrix.Syntax=[ <???????????????> ]
Distance=????????????
Distance.Syntax=[ <???????????????>, <?????????> ]\n[ <????????????>, <????????????> ]\n[ <Plane>, <Plane> ]
Distance.SyntaxCAS=[ <???????????????>, <?????????> ]
Div=?????????
Div.Syntax=[ <??????????????? ?????????>, <???????????? ?????????> ]\n[ <??????????????? ??????????????????>, <???????????? ??????????????????> ]
Division=?????????????????????
Division.Syntax=[ <??????????????? ?????????>, <???????????? ?????????> ]\n[ <??????????????? ??????????????????>, <???????????? ??????????????????> ]
Divisors=????????????
Divisors.Syntax=[ <??????????????????> ]
DivisorsList=????????????????????????
DivisorsList.Syntax=[ <??????????????????> ]
DivisorsSum=???????????????????????????
DivisorsSum.Syntax=[ <??????????????????> ]
Dodecahedron.Syntax=[ <Regular Pentagon> ]\n[ <???????????????>, <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <Direction> ]
Dot.Syntax=[ <????????????>, <????????????> ]
DotPlot.Syntax=[ <????????????????????? ???????????????????????? ????????????>, <Stack Adjacent Dots (optional)>, <Scale Factor (optional)>]
DynamicCoordinates.Syntax=[ <???????????????>, <x-Coordinate>, <y-Coordinate> ]\n[ <???????????????>, <x-Coordinate>, <y-Coordinate>, <z-Coordinate> ]
Eccentricity.Syntax=[ <???????????????> ]
Eigenvalues.SyntaxCAS=[ <???????????????> ]
Eigenvectors.SyntaxCAS=[ <???????????????> ]
Element=?????????
Element.Syntax=[ <????????????>, <Position of Element> ]\n[ <???????????????>, <??????>, <???????????????> ]\n[ <????????????>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <????????????>, <Position of Element> ]\n[ <???????????????>, <??????>, <???????????????> ]
Eliminate.Syntax=[ <List of Polynomials>, <?????????????????? ????????????> ]
Ellipse=???????????????????????????
Ellipse.Syntax=[ <?????????????????????????????????>, <?????????????????????????????????>, <???????????????????????????????????????????????? ???????????????> ]\n[ <?????????????????????????????????>, <?????????????????????????????????>, <?????????????????????> ]\n[ <?????????????????????????????????>, <?????????????????????????????????>, <???????????????> ]
Ends.Syntax=[ <Quadric> ]
Envelope.Syntax=[ <???????????????>, <???????????????> ]
Erlang.Syntax=[ <Shape>, <Rate>, <??????????????? ???????????????> ]\n[ <Shape>, <Rate>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Shape>, <Rate>, x, <?????????????????? ???????????????> ]
Excentricity=????????????????????????????????????????????????
Excentricity.Syntax=[ <???????????????> ]
Execute.Syntax=[ <??????????????? ????????????> ]\n[ <??????????????? ????????????>, <Parameter>, <Parameter>, ... ]
Expand=?????????????????????
Expand.Syntax=[ <??????????????????> ]
Exponential.Syntax=[ <Lambda>, <??????????????? ???????????????> ]\n[ <Lambda>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Lambda>, x, <?????????????????? ???????????????> ]
Exponential.SyntaxCAS=[ <Lambda>, <??????????????? ???????????????> ]
ExportImage.Syntax=[ <Property>, <Value>, <Property>, <Value>, ... ]
ExtendedGCD.Syntax=[ <????????????????????????>, <????????????????????????>]\n[ <??????????????????>, <??????????????????>]
Extremum=?????????
Extremum.Syntax=[ <??????????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
Extremum.SyntaxCAS=[ <??????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
FDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <??????????????? ???????????????> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x, <?????????????????? ???????????????> ]
FDistribution.SyntaxCAS=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <??????????????? ???????????????> ]
Factor=????????????
Factor.Syntax=[ <??????????????????> ]
Factor.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????> ]\n[ <??????????????????>, <??????> ]
Factors.Syntax=[ <??????????????????> ]\n[ <??????????????????> ]
FillCells.Syntax=[ <CellRange>, <?????????> ]\n[ <Cell>, <????????????> ]\n[ <Cell>, <???????????????> ]
FillColumn.Syntax=[ <???????????????>, <????????????> ]
FillRow.Syntax=[ <??????>, <????????????> ]
First=???????????????
First.Syntax=[ <????????????> ]\n[ <???????????????> ]\n[ <????????????>, <Number of Elements> ]\n[ <???????????????>, <Number of Elements> ]\n[ <?????????????????????>, <Number of Elements> ]
First.SyntaxCAS=[ <????????????> ]\n[ <????????????>, <Number of Elements> ]
FirstAxis=???????????????????????????
FirstAxis.Syntax=[ <???????????????> ]
FirstAxisLength=??????????????????????????????????????????????????????
FirstAxisLength.Syntax=[ <???????????????> ]
Fit.Syntax=[ <List of Points>, <List of Functions> ]\n[ <List of Points>, <??????> ]
FitExp=?????????????????????????????????
FitExp.Syntax=[ <List of Points> ]
FitGrowth.Syntax=[ <List of Points> ]
FitImplicit.Syntax=[ <List of Points>, <Order> ]
FitLineX=X???????????????????????????
FitLineX.Syntax=[ <List of Points> ]
FitLineY=???????????????????????????
FitLineY.Syntax=[ <List of Points> ]
FitLog=?????????????????????????????????
FitLog.Syntax=[ <List of Points> ]
FitLogistic=????????????????????????????????????
FitLogistic.Syntax=[ <List of Points> ]
FitPoly=?????????????????????????????????
FitPoly.Syntax=[ <List of Points>, <Degree of Polynomial> ]\n[ <Freehand Function>, <Degree of Polynomial> ]
FitPow=?????????????????????????????????
FitPow.Syntax=[ <List of Points> ]
FitSin=????????????????????????????????????
FitSin.Syntax=[ <List of Points> ]
Flatten.Syntax=[ <????????????> ]
Focus=??????????????????
Focus.Syntax=[ <???????????????> ]
FractionText=????????????????????????????????????
FractionText.Syntax=[ <??????????????????> ]\n[ <???????????????> ]\n[ <??????????????????>, <Boolean Single fraction> ]
Frequency.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <?????????????????? ???????????????>, <????????????????????? ???????????????????????? ????????????> ]\n[ <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????? ????????????>, <??????????????? ????????????> ]\n[ <?????????????????? ???????????????>, <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????> ]\n[ <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <?????????????????? ???????????????>, <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)> ]
FrequencyPolygon.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Boolean Use Density>, <Density Scale Factor (optional)> ]\n[ <?????????????????? ???????????????>, <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Boolean Use Density>, <Density Scale Factor (optional)> ]
FrequencyTable.Syntax=[ <????????????????????? ???????????????????????? ????????????>, <Scale Factor (optional)> ]\n[ <?????????????????? ???????????????>, <????????????????????? ???????????????????????? ????????????> ]\n[ <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????> ]\n[ <?????????????????? ???????????????>, <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????> ]\n[ <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <?????????????????? ???????????????>, <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)> ]
FromBase.Syntax=[ <Number as Text>, <Base> ]
Function=??????
Function.Syntax=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????????????????????????? ????????????> ]
Function.Syntax3D=[ <??????????????????????????? ????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????????????????>, <Parameter Variable 1>, <????????????????????? ???????????????>, <??????????????? ???????????????>, <Parameter Variable 2>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
Function.SyntaxCAS=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
FutureValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Present Value (optional)>, <Type (optional)> ]
GCD=???????????????
GCD.Syntax=[ <??????????????????????????? ????????????> ]\n[ <??????????????????>, <??????????????????> ]
GCD.SyntaxCAS=[ <??????????????????????????? ????????????> ]\n[ <List of Polynomials> ]\n[ <??????????????????>, <??????????????????> ]\n[ <??????????????????>, <??????????????????> ]
Gamma.Syntax=[ <Alpha>, <Beta>, <??????????????? ???????????????> ]\n[ <Alpha>, <Beta>, <??????????????? ???????????????>, <?????????????????? ???????????????>  ]\n[ <Alpha>, <Beta>, x, <?????????????????? ???????????????> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <??????????????? ???????????????> ]
GeometricMean.Syntax=[ <??????????????????????????? ????????????> ]
GetTime.Syntax=[]\n[ <Format> ]
GroebnerDegRevLex.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <?????????????????? ????????????> ]
GroebnerLex.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <?????????????????? ????????????> ]
GroebnerLexDeg.Syntax=[ <List of Polynomials> ]\n[ <List of Polynomials>, <?????????????????? ????????????> ]
HarmonicMean.Syntax=[ <??????????????????????????? ????????????> ]
Height.Syntax=[ <Solid> ]
HideLayer.Syntax=[ <??????????????????> ]
Histogram=?????????????????????????????????
Histogram.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <?????????????????? ???????????????>, <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)> ]
HistogramRight.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)>  ]\n[ <?????????????????? ???????????????>, <List of Class Boundaries>, <????????????????????? ???????????????????????? ????????????>, <Use Density>, <Density Scale Factor (optional)> ]
HyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <?????????????????? ???????????????> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
HyperGeometric.SyntaxCAS=[ <Population Size>, <Number of Successes>, <Sample Size>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
Hyperbola=??????????????????
Hyperbola.Syntax=[ <?????????????????????????????????>, <?????????????????????????????????>, <???????????????????????????????????????????????? ???????????????> ]\n[ <?????????????????????????????????>, <?????????????????????????????????>, <?????????????????????> ]\n[ <?????????????????????????????????>, <?????????????????????????????????>, <???????????????> ]
IFactor.Syntax=[ <??????????????????> ]
IFactor.SyntaxCAS=[ <??????????????????> ]
Icosahedron.Syntax=[ <Equilateral Triangle> ]\n[ <???????????????>, <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <Direction> ]
Identity.Syntax=[ <??????????????????> ]
If=??????
If.Syntax=[ <??????>, <??????> ]\n[ <??????>, <??????>, <??????????????????> ]
ImplicitCurve.Syntax=[ <List of Points> ]\n[ <f(x, y)> ]
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <??????????????????>, <Dependent Variable>, <Independent Variable> ]
Incircle.Syntax=[ <???????????????>, <???????????????>, <???????????????> ]
IndexOf.Syntax=[ <?????????>, <????????????> ]\n[ <???????????????>, <???????????????> ]\n[ <?????????>, <????????????>, <Start Index> ]\n[ <???????????????>, <???????????????>, <Start Index> ]
Insert=????????????????????????
Insert.Syntax=[ <????????????>, <????????????>, <???????????????> ]\n[ <?????????>, <????????????>, <???????????????> ]
Integral=???????????????
Integral.Syntax=[ <??????> ]\n[ <??????>, <??????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????>, <Boolean Evaluate> ]
Integral.SyntaxCAS=[ <??????> ]\n[ <??????>, <??????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
IntegralBetween.Syntax=[ <??????>, <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????>, <Boolean Evaluate> ]
IntegralBetween.SyntaxCAS=[ <??????>, <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <??????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
IntegralSymbolic.Syntax=[ <??????> ]\n[ <??????>, <??????> ]
InteriorAngles.Syntax=[ <??????????????????> ]
Intersect=???????????????????????????
Intersect.Syntax=[ <?????????>, <?????????> ]\n[ <?????????>, <?????????>, <Index of Intersection Point> ]\n[ <?????????>, <?????????>, <Initial Point> ]\n[ <??????>, <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <Curve 1>, <Curve 2>, <Parameter 1>, <Parameter 2> ]
Intersect.SyntaxCAS=[ <??????>, <??????> ]
IntersectConic.Syntax=[ <Plane>, <Quadric> ]\n[ <Quadric>, <Quadric> ]
IntersectPath.Syntax=[ <????????????>, <??????????????????> ]\n[ <??????????????????>, <??????????????????> ]
IntersectPath.Syntax3D=[ <????????????>, <??????????????????> ]\n[ <??????????????????>, <??????????????????> ]\n[ <Plane>, <??????????????????> ]\n[ <Plane>, <Quadric> ]
Intersection=????????????
Intersection.Syntax=[ <????????????>, <????????????> ]
InverseBeta.Syntax=[ <Alpha>, <Beta>, <???????????????????????????> ]
InverseBinomial.Syntax=[ <????????????????????????????????? ??????????????????>, <??????????????? ???????????????????????????>, <Cumulative Probability> ]
InverseBinomialMinimumTrials.Syntax=[ <Cumulative Probability>, <??????????????? ???????????????????????????>, <Number of Successes> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Cumulative Probability>, <??????????????? ???????????????????????????>, <Number of Successes> ]
InverseCauchy.Syntax=[ <???????????????>, <??????????????????>, <???????????????????????????> ]
InverseChiSquared.Syntax=[ <Degrees of Freedom>, <???????????????????????????> ]
InverseExponential.Syntax=[ <Lambda>, <???????????????????????????> ]
InverseFDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <???????????????????????????> ]
InverseGamma.Syntax=[ <Alpha>, <Beta>, <???????????????????????????> ]
InverseHyperGeometric.Syntax=[ <Population Size>, <Number of Successes>, <Sample Size>, <???????????????????????????> ]
InverseLaplace.Syntax=[ <??????> ]\n[ <??????>, <??????> ]\n[ <??????>, <??????>, <??????> ]
InverseLogNormal.Syntax=[ <????????????>, <???????????????????????? ???????????????>, <???????????????????????????> ]
InverseLogistic.Syntax=[ <????????????>, <??????????????????>, <???????????????????????????> ]
InverseNormal=???????????????????????????
InverseNormal.Syntax=[ <????????????>, <???????????????????????? ???????????????>, <Cumulative Probability> ]
InversePascal.Syntax=[ <n>, <p>, <???????????????????????????> ]
InversePoisson.Syntax=[ <????????????>, <???????????????????????????> ]
InverseTDistribution.Syntax=[ <Degrees of Freedom>, <???????????????????????????> ]
InverseWeibull.Syntax=[ <Shape>, <??????????????????>, <???????????????????????????> ]
InverseZipf.Syntax=[ <Number of Elements>, <Exponent>, <???????????????????????????> ]
Invert=?????????????????????
Invert.Syntax=[ <???????????????> ]\n[ <??????> ]
IsFactored.Syntax=[ <??????????????????> ]
IsInRegion.Syntax=[ <???????????????>, <?????????????????????> ]
IsInteger=??????????????????????????????????
IsInteger.Syntax=[ <??????????????????> ]
IsPrime.Syntax=[ <??????????????????> ]
IsTangent.Syntax=[ <????????????>, <???????????????> ]
IsVertexForm.Syntax=[ <??????> ]
Iteration=?????????????????????????????????
Iteration.Syntax=[ <??????>, <????????????????????? ???????????????>, <Number of Iterations> ]\n[ <??????????????????>, <Variables>, <Start Values>, <Count> ]
IterationList=?????????????????????????????????????????????
IterationList.Syntax=[ <??????>, <????????????????????? ???????????????>, <Number of Iterations> ]\n[ <??????????????????>, <Variables>, <Start Values>, <Count> ]
IterationList.SyntaxCAS=[ <??????>, <????????????????????? ???????????????>, <Number of Iterations> ]
Join=?????????
Join.Syntax=[ <????????????????????? ????????????> ]\n[ <????????????>, <????????????>, ... ]
JordanDiagonalization.SyntaxCAS=[ <???????????????> ]
KeepIf=?????????????????????????????????
KeepIf.Syntax=[ <??????>, <????????????> ]\n[ <??????>, <??????>, <????????????> ]
LCM=???????????????
LCM.Syntax=[ <??????????????????????????? ????????????> ]\n[ <??????????????????>, <??????????????????> ]
LCM.SyntaxCAS=[ <??????????????????????????? ????????????> ]\n[ <List of Polynomials> ]\n[ <??????????????????>, <??????????????????> ]\n[ <??????????????????>, <??????????????????> ]
LUDecomposition.Syntax=[ <???????????????> ]
LaTeX=????????????????????????
LaTeX.Syntax=[ <?????????> ]\n[ <?????????>, <Boolean for Substitution of Variables> ]\n[ <?????????>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]
Laplace.Syntax=[ <??????> ]\n[ <??????>, <??????> ]\n[ <??????>, <??????>, <??????> ]
Last=???????????????
Last.Syntax=[ <????????????> ]\n[ <???????????????> ]\n[ <????????????>, <Number of Elements> ]\n[ <???????????????>, <Number of Elements> ]
Last.SyntaxCAS=[ <????????????> ]\n[ <????????????>, <Number of Elements> ]
LeftSide.Syntax=[ <??????????????????> ]
LeftSide.SyntaxCAS=[ <??????????????????> ]\n[ <?????????????????????????????? ????????????> ]\n[ <?????????????????????????????? ????????????>, <Index> ]
LeftSum.Syntax=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????>, <????????????????????? ??????????????????> ]
Length=???????????????
Length.Syntax=[ <?????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <???????????????????????????>, <??????????????? ???????????????> ]\n[ <????????????>, <Start t-Value>, <End t-Value> ]\n[ <????????????>, <???????????????????????????>, <??????????????? ???????????????> ]
Length.SyntaxCAS=[ <????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
LetterToUnicode=????????????????????????????????????????????????
LetterToUnicode.Syntax=[ <???????????????> ]
Limit.Syntax=[ <??????>, <Value> ]
Limit.SyntaxCAS=[ <??????????????????>, <Value> ]\n[ <??????????????????>, <??????>, <Value> ]
LimitAbove.Syntax=[ <??????>, <Value> ]
LimitAbove.SyntaxCAS=[ <??????????????????>, <Value> ]\n[ <??????????????????>, <??????>, <Value> ]
LimitBelow.Syntax=[ <??????>, <Value> ]
LimitBelow.SyntaxCAS=[ <??????????????????>, <Value> ]\n[ <??????????????????>, <??????>, <Value> ]
Line=????????????
Line.Syntax=[ <???????????????>, <???????????????> ]\n[ <???????????????>, <?????????????????? ????????????> ]\n[ <???????????????>, <???????????????????????????> ]
LineBisector=???????????????????????????
LineBisector.Syntax=[ <?????????????????????> ]\n[ <???????????????>, <???????????????> ]
LineBisector.Syntax3D=[ <?????????????????????> ]\n[ <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <Direction> ]
LineGraph.Syntax=[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????> ]
Locus=?????????????????????
Locus.Syntax=[ <Point Creating Locus Line>, <???????????????> ]\n[ <Point Creating Locus Line>, <Slider> ]\n[ <Slopefield>, <???????????????> ]\n[ <f(x, y)>, <???????????????> ]
LocusEquation.Syntax=[ <?????????????????????> ]\n[ <Locus Point>, <Moving Point> ]\n[ <Boolean Expression>, <Moving Point> ]
LogNormal.Syntax=[ <????????????>, <???????????????????????? ???????????????>, <??????????????? ???????????????> ]\n[ <????????????>, <???????????????????????? ???????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????>  ]\n[ <????????????>, <???????????????????????? ???????????????>, x, <?????????????????? ???????????????> ]
Logistic.Syntax=[ <????????????>, <??????????????????>, <??????????????? ???????????????> ]\n[ <????????????>, <??????????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????>  ]\n[ <????????????>, <??????????????????>, x, <?????????????????? ???????????????> ]
LowerSum=??????????????????????????????
LowerSum.Syntax=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????>, <????????????????????? ??????????????????> ]
MatrixRank.Syntax=[ <???????????????> ]
Max=????????????
Max.Syntax=[ <Interval> ]\n[ <??????????????????>, <??????????????????> ]\n[ <????????????> ]\n[ <????????????????????? ???????????????????????? ????????????>, <????????????????????????????????? ????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
Max.SyntaxCAS=[ <????????????> ]\n[ <Interval> ]\n[ <??????????????????>, <??????????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <????????????????????? ???????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
Maximize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
Mean=????????????
Mean.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
MeanX=X????????????
MeanX.Syntax=[ <List of Points> ]
MeanY=Y????????????
MeanY.Syntax=[ <List of Points> ]
Median=???????????????
Median.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
Median.SyntaxCAS=[ <??????????????????????????? ????????????> ]
Midpoint=???????????????????????????
Midpoint.Syntax=[ <?????????????????????> ]\n[ <???????????????> ]\n[ <Interval> ]\n[ <???????????????>, <???????????????> ]
Min=????????????
Min.Syntax=[ <Interval> ]\n[ <??????????????????>, <??????????????????> ]\n[ <????????????> ]\n[ <????????????????????? ???????????????????????? ????????????>, <????????????????????????????????? ????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
Min.SyntaxCAS=[ <????????????> ]\n[ <Interval> ]\n[ <??????????????????>, <??????????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <????????????????????? ???????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
MinimalPolynomial.Syntax=[ <???????????????> ]
Minimize.Syntax=[ <Dependent Number>, <Free Number> ]\n[ <Dependent Number>, <Point on Path> ]
MinimumSpanningTree.Syntax=[ <List of Points> ]
Mirror=???????????????????????????
Mirror.Syntax=[ <?????????>, <???????????????> ]\n[ <?????????>, <????????????> ]\n[ <?????????>, <??????????????????> ]
Mirror.Syntax3D=[ <?????????>, <???????????????> ]\n[ <?????????>, <????????????> ]\n[ <?????????>, <Plane> ]\n[ <?????????>, <??????????????????> ]
MixedNumber.SyntaxCAS=[ <??????????????????> ]
Mod=????????????
Mod.Syntax=[ <??????????????? ?????????>, <???????????? ?????????> ]\n[ <??????????????? ??????????????????>, <???????????? ??????????????????> ]
Mode=???????????????
Mode.Syntax=[ <??????????????????????????? ????????????> ]
ModularExponent.Syntax=[ <??????????????????>, <??????????????????>, <??????????????????> ]
NDerivative.Syntax=[ <??????> ]\n[ <??????>, <Order> ]
NIntegral.Syntax=[ <??????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <Start y-Value>, <??????????????? x-???????????????> ]
NIntegral.SyntaxCAS=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]\n[ <??????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
NInvert.Syntax=[ <??????> ]
NSolutions.Syntax=[ <??????????????????> ]
NSolutions.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]\n[ <??????????????????>, <Variable = starting value> ]\n[ <?????????????????????????????? ????????????>, <?????????????????? ????????????> ]
NSolve.Syntax=[ <??????????????????> ]
NSolve.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]\n[ <??????????????????>, <Variable = starting value> ]\n[ <?????????????????????????????? ????????????>, <?????????????????? ????????????> ]
NSolveODE.Syntax=[ <List of Derivatives>, <Initial x-coordinate>, <List of Initial y-coordinates>, <Final x-coordinate> ]
Name=?????????
Name.Syntax=[ <?????????> ]
Net.Syntax=[ <Polyhedron>, <??????????????????> ]\n[ <Polyhedron>, <??????????????????>, <Face>, <Edge>, <Edge>, ... ]
NextPrime.Syntax=[ <??????????????????> ]
Normal=??????????????????????????????
Normal.Syntax=[ <????????????>, <???????????????????????? ???????????????>, <??????????????? ???????????????> ]\n[ <????????????>, <???????????????????????? ???????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <????????????>, <???????????????????????? ???????????????>, x, <?????????????????? ???????????????> ]
NormalQuantilePlot.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]
Normalize.Syntax=[ <??????????????????????????? ????????????> ]\n[ <List of Points> ]
Numerator.Syntax=[ <??????????????????> ]\n[ <??????> ]
Numerator.SyntaxCAS=[ <??????????????????> ]
Numeric.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <Significant Figures> ]
Object=???????????????
Object.Syntax=[ <????????????????????? ????????????????????? ?????????> ]
Octahedron.Syntax=[ <Equilateral Triangle> ]\n[ <???????????????>, <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <Direction> ]
Ordinal.Syntax=[ <????????????????????????> ]
OrdinalRank.Syntax=[ <????????????> ]
OrthogonalLine=?????????????????????
OrthogonalLine.Syntax=[ <???????????????>, <????????????> ]\n[ <???????????????>, <?????????????????????> ]\n[ <???????????????>, <????????????> ]
OrthogonalLine.Syntax3D=[ <???????????????>, <????????????> ]\n[ <???????????????>, <?????????????????????> ]\n[ <???????????????>, <????????????> ]\n[ <???????????????>, <Plane> ]\n[ <????????????>, <????????????> ]\n[ <???????????????>, <Direction>, <Direction> ]\n[ <???????????????>, <????????????>, <Context> ]
OrthogonalPlane.Syntax=[ <???????????????>, <????????????> ]\n[ <???????????????>, <????????????> ]
OrthogonalVector=?????????????????????
OrthogonalVector.Syntax=[ <????????????> ]\n[ <?????????????????????> ]\n[ <????????????> ]
OrthogonalVector.Syntax3D=[ <????????????> ]\n[ <?????????????????????> ]\n[ <????????????> ]\n[ <Plane> ]
OrthogonalVector.SyntaxCAS=[ <????????????> ]
OsculatingCircle=????????????????????????????????????????????????
OsculatingCircle.Syntax=[ <???????????????>, <?????????> ]
PMCC=??????????????????????????????
PMCC.Syntax=[ <List of Points> ]\n[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????> ]
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola=?????????????????????
Parabola.Syntax=[ <???????????????>, <????????????> ]
Parameter=???????????????
Parameter.Syntax=[ <?????????????????????> ]
ParametricDerivative.Syntax=[ <????????????> ]
ParseToFunction.Syntax=[ <??????>, <String> ]
ParseToNumber.Syntax=[ <??????????????????>, <String> ]
PartialFractions.Syntax=[ <??????> ]
PartialFractions.SyntaxCAS=[ <??????> ]\n[ <??????>, <??????> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <?????????????????? ???????????????> ]\n[ <n>, <p>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
Pascal.SyntaxCAS=[ <n>, <p>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
PathParameter.Syntax=[ <Point On Path> ]
Payment.Syntax=[ <Rate>, <Number of Periods>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PenStroke.Syntax=[ <???????????????>, ..., <???????????????> ]
Percentile.Syntax=[ <??????????????????????????? ????????????>, <Percent> ]
Perimeter=?????????????????????
Perimeter.Syntax=[ <??????????????????> ]\n[ <???????????????> ]\n[ <?????????????????????> ]
Periods.Syntax=[ <Rate>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)> ]
PieChart.Syntax=[ <????????????????????????????????? ????????????> ]\n[ <????????????????????????????????? ????????????>, <Center>, <????????????????????????> ]
Plane.Syntax=[ <??????????????????> ]\n[ <???????????????> ]\n[ <???????????????>, <Plane> ]\n[ <???????????????>, <????????????> ]\n[ <????????????>, <????????????> ]\n[ <???????????????>, <???????????????>, <???????????????> ]\n[ <???????????????>, <????????????>, <????????????> ]
PlaneBisector.Syntax=[ <?????????????????????> ]\n[ <???????????????>, <???????????????> ]
PlaySound.Syntax=[ <URL> ]\n[ <Boolean Play> ]\n[ <??????>, <Min Value>, <Max Value> ]\n[ <??????>, <Min Value>, <Max Value>, <Sample Rate>, <Sample Depth> ]
PlotSolve.Syntax=[ <Equation in x> ]
Point=???????????????
Point.Syntax=[ <?????????> ]\n[ <?????????>, <Parameter> ]\n[ <???????????????>, <????????????> ]\n[ <????????????> ]
PointIn=?????????????????????
PointIn.Syntax=[ <?????????????????????> ]
PointList=???????????????????????????
PointList.Syntax=[ <????????????> ]
Poisson.Syntax=[ <????????????> ]\n[ <????????????>, <?????????????????? ???????????????> ]\n[ <????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
Poisson.SyntaxCAS=[ <????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
Polar=??????????????????
Polar.Syntax=[ <???????????????>, <???????????????> ]\n[ <????????????>, <???????????????> ]
PolyLine.Syntax=[ <List of Points> ]\n[ <???????????????>, ..., <???????????????> ]
Polygon=??????????????????
Polygon.Syntax=[ <List of Points> ]\n[ <???????????????>, ..., <???????????????> ]\n[ <???????????????>, <???????????????>, <???????????????????????????????????? ??????????????????> ]
Polygon.Syntax3D=[ <List of Points> ]\n[ <???????????????>, ..., <???????????????> ]\n[ <???????????????>, <???????????????>, <???????????????????????????????????? ??????????????????> ]\n[ <???????????????>, <???????????????>, <???????????????????????????????????? ??????????????????>, <Direction> ]
Polynomial=??????????????????
Polynomial.Syntax=[ <??????> ]\n[ <List of Points> ]
Polynomial.SyntaxCAS=[ <??????> ]\n[ <??????>, <??????> ]
PresentValue.Syntax=[ <Rate>, <Number of Periods>, <Payment>, <Future Value (optional)>, <Type (optional)> ]
PreviousPrime.Syntax=[ <??????????????????> ]
PrimeFactors.Syntax=[ <??????????????????> ]
Prism.Syntax=[ <??????????????????>, <???????????????> ]\n[ <??????????????????>, <Height value> ]\n[ <???????????????>, <???????????????>, ... ]
Product=?????????????????????
Product.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <Number of Elements> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]\n[ <??????????????????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
Product.SyntaxCAS=[ <List of Expressions> ]\n[ <??????????????????>, <??????>, <Start Index>, <End Index> ]
Prove.Syntax=[ <Boolean Expression> ]
ProveDetails.Syntax=[ <Boolean Expression> ]
Pyramid.Syntax=[ <??????????????????>, <???????????????> ]\n[ <??????????????????>, <????????????> ]\n[ <???????????????>, <???????????????>, <???????????????>, <???????????????>, ... ]
Q1=Q1
Q1.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
Q3=Q3
Q3.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
QRDecomposition.Syntax=[ <???????????????> ]
QuadricSide.Syntax=[ <Quadric> ]
RSquare.Syntax=[ <List of Points>, <??????> ]
Radius=????????????????????????
Radius.Syntax=[ <???????????????> ]
Random=????????????????????????????????????
Random.Syntax=[ <Minimum Integer>, <Maximum Integer> ]\n[ <Minimum Integer>, <Maximum Integer>, <Number of Samples> ]\n[ <Minimum Integer>, <Maximum Integer>, <Boolean Fixed> ]
Random.SyntaxCAS=[ <Minimum Integer>, <Maximum Integer> ]\n[ <Minimum Integer>, <Maximum Integer>, <Number of Samples> ]
RandomBinomial=???????????????????????????????????????
RandomBinomial.Syntax=[ <????????????????????????????????? ??????????????????>, <???????????????????????????> ]
RandomDiscrete.Syntax=[ <????????????>, <????????????> ]
RandomElement.Syntax=[ <????????????> ]
RandomNormal=????????????????????????????????????????????????
RandomNormal.Syntax=[ <????????????>, <???????????????????????? ???????????????> ]
RandomPointIn.Syntax=[ <?????????????????????> ]\n[ <List of Points> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=?????????????????????????????????
RandomPoisson.Syntax=[ <????????????> ]
RandomPolynomial=?????????????????????????????????
RandomPolynomial.Syntax=[ <?????????>, <?????????????????????????????? ?????????????????????>, <?????????????????????????????? ??????????????????> ]
RandomPolynomial.SyntaxCAS=[ <?????????>, <?????????????????????????????? ?????????????????????>, <?????????????????????????????? ??????????????????> ]\n[ <??????>, <?????????>, <?????????????????????????????? ?????????????????????>, <?????????????????????????????? ??????????????????> ]
RandomUniform.Syntax=[ <Min>, <Max> ]\n[ <Min>, <Max>, <Number of Samples> ]
Rate.Syntax=[ <Number of Periods>, <Payment>, <Present Value>, <Future Value (optional)>, <Type (optional)>, <Guess (optional)> ]
Rationalize.SyntaxCAS=[ <??????????????????> ]
Ray=????????????
Ray.Syntax=[ <???????????????????????????>, <???????????????> ]\n[ <???????????????????????????>, <???????????????????????????> ]
ReadText.Syntax=[ <???????????????> ]
RectangleSum.Syntax=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????>, <????????????????????? ??????????????????>, <Position for rectangle start> ]
ReducedRowEchelonForm.Syntax=[ <???????????????> ]
Relation=???????????????
Relation.Syntax=[ <????????????> ]\n[ <?????????>, <?????????> ]
RemovableDiscontinuity.Syntax=[ <??????> ]
Remove.Syntax=[ <????????????>, <????????????> ]
RemoveUndefined=??????????????????????????????????????????
RemoveUndefined.Syntax=[ <????????????> ]
Rename.Syntax=[ <?????????>, <Name> ]
Repeat.Syntax=[ <??????????????????>, <Scripting Command>, <Scripting Command>, ... ]
ReplaceAll.Syntax=[ <???????????????>, <Text to Match>, <Text to Replace> ]
ResidualPlot.Syntax=[ <List of Points>, <??????> ]
Reverse=?????????
Reverse.Syntax=[ <????????????> ]
RightSide.Syntax=[ <??????????????????> ]
RightSide.SyntaxCAS=[ <??????????????????> ]\n[ <?????????????????????????????? ????????????> ]\n[ <?????????????????????????????? ????????????>, <Index> ]
RigidPolygon.Syntax=[ <??????????????????> ]\n[ <??????????????????>, <Offset x>, <Offset y> ]\n[ <Free Point>, ..., <Free Point> ]
Root=?????????
Root.Syntax=[ <??????????????????> ]\n[ <??????>, <????????????x-???????????????> ]\n[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
Root.SyntaxCAS=[ <??????????????????> ]
RootList.Syntax=[ <????????????> ]
RootMeanSquare.Syntax=[ <??????????????????????????? ????????????> ]
Roots.Syntax=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????> ]
Rotate=????????????????????????
Rotate.Syntax=[ <?????????>, <?????????> ]\n[ <?????????>, <?????????>, <???????????????> ]
Rotate.Syntax3D=[ <?????????>, <?????????> ]\n[ <?????????>, <?????????>, <???????????????> ]\n[ <?????????>, <?????????>, <Axis of Rotation> ]\n[ <?????????>, <?????????>, <Point on Axis>, <Axis Direction or Plane> ]
RotateText.Syntax=[ <???????????????>, <?????????> ]
Row=??????
Row.Syntax=[ <?????????????????????????????? ??????????????????> ]
RunClickScript.Syntax=[ <?????????> ]
RunUpdateScript.Syntax=[ <?????????> ]
SD=???????????????????????????????????????
SDX.Syntax=[ <List of Points> ]
SDY.Syntax=[ <List of Points> ]
SVD.Syntax=[ <???????????????> ]
SXX.Syntax=[ <??????????????????????????? ????????????> ]\n[ <List of Points> ]
SXY.Syntax=[ <List of Points> ]\n[ <??????????????????????????? ????????????>, <??????????????????????????? ????????????> ]
SYY.Syntax=[ <List of Points> ]
Sample.Syntax=[ <????????????>, <Size> ]\n[ <????????????>, <Size>, <With Replacement> ]
SampleSD.SyntaxCAS=[ <??????????????????????????? ????????????> ]
SampleSDX.Syntax=[ <List of Points> ]
SampleSDY.Syntax=[ <List of Points> ]
SampleVariance.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
SampleVariance.SyntaxCAS=[ <??????????????????????????? ????????????> ]
ScientificText.Syntax=[ <??????????????????> ]\n[ <??????????????????>, <Precision> ]
SecondAxis=?????????????????????
SecondAxis.Syntax=[ <???????????????> ]
SecondAxisLength=????????????????????????????????????????????????
SecondAxisLength.Syntax=[ <???????????????> ]
Sector=????????????????????????
Sector.Syntax=[ <???????????????>, <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????????????? ???????????????>, <???????????????????????? ???????????????> ]
Segment=?????????????????????
Segment.Syntax=[ <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????> ]
SelectObjects=??????????????????????????????
SelectObjects.Syntax=[ ]\n[ <?????????>, <?????????>, ... ]
SelectedElement.Syntax=[ <????????????> ]
SelectedIndex.Syntax=[ <????????????> ]
Semicircle=??????????????????????????????
Semicircle.Syntax=[ <???????????????>, <???????????????> ]
Sequence=????????????
Sequence.Syntax=[ <??????????????? ???????????????> ]\n[ <????????????????????? ???????????????>, <??????????????? ???????????????> ]\n[ <????????????????????? ???????????????>, <??????????????? ???????????????>, <Increment> ]\n[ <??????????????????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]\n[ <??????????????????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????>, <Increment> ]
SetActiveView.Syntax=[ <View> ]\n[ <Plane> ]
SetAxesRatio.Syntax=[ <??????????????????>, <??????????????????> ]
SetAxesRatio.Syntax3D=[ <??????????????????>, <??????????????????> ]\n[ <??????????????????>, <??????????????????>, <??????????????????> ]
SetBackgroundColor.Syntax=[ <Color> ]\n[ <?????????>, <Color> ]\n[ <Red>, <Green>, <Blue> ]\n[ <?????????>, <Red>, <Green>, <Blue> ]
SetCaption.Syntax=[ <?????????>, <???????????????> ]
SetColor.Syntax=[ <?????????>, <Color> ]\n[ <?????????>, <Red>, <Green>, <Blue> ]
SetConditionToShowObject=??????????????????????????????????????????????????????????????????????????????????????????
SetConditionToShowObject.Syntax=[ <?????????>, <??????> ]
SetConstructionStep.Syntax=[ <??????????????????> ]
SetCoords.Syntax=[ <?????????>, <x>, <y> ]\n[ <?????????>, <x>, <y>, <z> ]
SetDecoration.Syntax=[ <?????????>, <??????????????????> ]\n[ <?????????????????????>, <??????????????????>, <??????????????????>]
SetDynamicColor.Syntax=[ <?????????>, <Red>, <Green>, <Blue> ]\n[ <?????????>, <Red>, <Green>, <Blue>, <Opacity> ]
SetFilling.Syntax=[ <?????????>, <??????????????????> ]
SetFixed.Syntax=[ <?????????>, <true | false> ]\n[ <?????????>, <true | false>, <true | false> ]
SetImage.Syntax=[ <?????????>, <Image> ]\n[ <?????????>, <???????????????> ]
SetLabelMode.Syntax=[ <?????????>, <??????????????????> ]
SetLayer.Syntax=[ <?????????>, <Layer> ]
SetLevelOfDetail.Syntax=[ <Surface>, <Level of Detail> ]
SetLineStyle.Syntax=[ <?????????>, <??????????????????> ]
SetLineThickness.Syntax=[ <?????????>, <??????????????????> ]
SetPerspective.Syntax=[ <???????????????> ]
SetPointSize=???????????????????????????????????????
SetPointSize.Syntax=[ <?????????>, <??????????????????> ]
SetPointStyle=?????????????????????????????????????????????
SetPointStyle.Syntax=[ <???????????????>, <??????????????????> ]
SetSeed.Syntax=[ <????????????????????????> ]
SetSpinSpeed.Syntax=[ <??????????????????> ]
SetTooltipMode.Syntax=[ <?????????>, <??????????????????> ]
SetTrace.Syntax=[ <?????????>, <true | false> ]
SetValue.Syntax=[ <Boolean>, <0|1> ]\n[ <?????????>, <?????????> ]\n[ <????????????>, <??????????????????>, <?????????> ]
SetViewDirection.Syntax=[ ]\n[ <Direction> ]\n[ <Direction>, <Boolean animate> ]
SetVisibleInView.Syntax=[ <?????????>, <View Number 1|2>, <Boolean> ]
Shear.Syntax=[ <?????????>, <????????????>, <Ratio> ]
ShortestDistance.Syntax=[ <List of Segments>, <???????????????????????????>, <??????????????? ???????????????>, <Boolean Weighted> ]
ShowAxes.Syntax=[]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
ShowGrid.Syntax=[]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
ShowLabel.Syntax=[ <?????????>, <Boolean> ]
ShowLayer.Syntax=[ <??????????????????> ]
Shuffle.Syntax=[ <????????????> ]
SigmaXX=??????????????????XX
SigmaXX.Syntax=[ <List of Points> ]\n[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
SigmaXY=??????????????????XY
SigmaXY.Syntax=[ <List of Points> ]\n[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????> ]
SigmaYY=??????????????????YY
SigmaYY.Syntax=[ <List of Points> ]
Simplify=??????????????????
Simplify.Syntax=[ <??????> ]\n[ <???????????????> ]
Simplify.SyntaxCAS=[ <??????> ]
Slider.Syntax=[ <Min>, <Max>, <Increment>, <Speed>, <Width>, <Is Angle>, <Horizontal>, <Animating>, <Random> ]
Slope=????????????
Slope.Syntax=[ <????????????> ]
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <??????????????????> ]\n[ <f(x, y)>, <??????????????????>, <Length Multiplier a> ]\n[ <f(x, y)>, <??????????????????>, <Length Multiplier a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot.Syntax=[ <??????> ]\n[ <??????>, <Boolean Repeat> ]
Solutions.Syntax=[ <??????????????????> ]
Solutions.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <??????> ]\n[ <?????????????????????????????? ????????????>, <?????????????????? ????????????> ]
Solve.Syntax=[ <??????????????????> ]
Solve.SyntaxCAS=[ <Equation in x> ]\n[ <??????????????????>, <??????> ]\n[ <?????????????????????????????? ????????????>, <?????????????????? ????????????> ]\n[ <List of Parametric Equations>, <?????????????????? ????????????> ]\n[ <??????????????????>, <??????>, <List of assumptions> ]
SolveCubic.SyntaxCAS=[ <Cubic Polynomial> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Point on f> ]\n[ <f'(x, y)>, <Start x>, <Start y>, <End x>, <Step> ]\n[ <y'>, <x'>, <Start x>, <Start y>, <End t>, <Step> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y'>, <End x>, <Step> ]
SolveODE.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <Point(s) on f> ]\n[ <??????????????????>, <Point(s) on f>, <Point(s) on f'> ]\n[ <??????????????????>, <Dependent Variable>, <Independent Variable>, <Point(s) on f> ] \n[ <??????????????????>, <Dependent Variable>, <Independent Variable>, <Point(s) on f>, <Point(s) on f'> ]
SolveQuartic.SyntaxCAS=[ <Quartic Polynomial> ]
Sort=?????????????????????
Sort.Syntax=[ <????????????> ]\n[ <Values>, <Keys> ]
Spearman.Syntax=[ <List of Points> ]\n[ <??????????????????????????? ????????????>, <??????????????????????????? ????????????> ]
Sphere.Syntax=[ <???????????????>, <????????????????????????> ]\n[ <???????????????>, <???????????????> ]
Spline.Syntax=[ <List of Points> ]\n[ <List of Points>, <Order ??? 3> ]\n[ <List of Points>, <Order ??? 3>, <Weight Function> ]
Split.Syntax=[ <???????????????>, <List of Texts to split on> ]
StartAnimation.Syntax=[ ]\n[ <Boolean> ]\n[ <Slider or Point>, <Slider or Point>, ... ]\n[ <Slider or Point>, <Slider or Point>, ..., <Boolean> ]
StartRecord.Syntax=[ ]\n[ <Boolean> ]
StemPlot.Syntax=[ <????????????> ]\n[ <????????????>, <Adjustment -1|0|1> ]
StepGraph.Syntax=[ <List of Points> ]\n[ <List of Points>, <Boolean Join> ]\n[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????> ]\n[ <List of Points>, <Boolean Join>, <Point Style> ]\n[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????>, <Boolean Join> ]\n[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????>, <Boolean Join>, <Point Style> ]
StickGraph.Syntax=[ <List of Points> ]\n[ <List of Points>, <Boolean Horizontal> ]\n[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????> ]\n[ <x-?????????????????????????????????????????? ????????????>, <y-?????????????????????????????????????????? ????????????>, <Boolean Horizontal> ]
Stretch.Syntax=[ <?????????>, <????????????> ]\n[ <?????????>, <????????????>, <Ratio> ]
Substitute.SyntaxCAS=[ <??????????????????>, <Substitution List> ]\n[ <??????????????????>, <from>, <to> ]
Sum=???????????????
Sum.Syntax=[ <????????????> ]\n[ <????????????>, <Number of Elements> ]\n[ <????????????>, <????????????????????????????????? ????????????> ]\n[ <??????????????????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
Sum.SyntaxCAS=[ <????????????> ]\n[ <??????????????????>, <??????>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
SumSquaredErrors.Syntax=[ <List of Points>, <??????> ]
SurdText.Syntax=[ <???????????????> ]\n[ <??????????????????> ]\n[ <??????????????????>, <????????????> ]
Surface.Syntax=[ <??????>, <?????????> ]\n[ <????????????>, <?????????>, <????????????> ]\n[ <??????????????????>, <??????????????????>, <??????????????????>, <Parameter Variable 1>, <????????????????????? ???????????????>, <??????????????? ???????????????>, <Parameter Variable 2>, <????????????????????? ???????????????>, <??????????????? ???????????????> ]
TDistribution.Syntax=[ <Degrees of Freedom>, <??????????????? ???????????????> ]\n[ <Degrees of Freedom>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Degrees of Freedom>, x, <?????????????????? ???????????????> ]
TDistribution.SyntaxCAS=[ <Degrees of Freedom>, <??????????????? ???????????????> ]
TMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Confidence Level>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Confidence Level>, <Boolean Pooled> ]
TMeanEstimate.Syntax=[ <List of Sample Data>, <Confidence Level> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Confidence Level> ]
TTest.Syntax=[ <List of Sample Data>, <Hypothesized Mean>, <Tail> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Hypothesized Mean>, <Tail> ]
TTest2.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Tail>, <Boolean Pooled> ]
TTestPaired.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail> ]
TableText=???????????????????????????
TableText.Syntax=[ <????????????>, <????????????>, ... ]\n[ <????????????>, <????????????>, ..., <???????????????????????? ????????????> ]\n[ <????????????>, <????????????>, ..., <???????????????????????? ????????????>, <Minimum Cell Width> ]\n[ <????????????>, <????????????>, ..., <???????????????????????? ????????????>, <Minimum Cell Width>, <Minimum Cell Height> ]
Take=????????????
Take.Syntax=[ <????????????>, <Start Position>, <End Position> ]\n[ <????????????>, <Start Position> ]\n[ <???????????????>, <Start Position>, <End Position> ]\n[ <???????????????>, <Start Position> ]
Take.SyntaxCAS=[ <????????????>, <Start Position> ]\n[ <????????????>, <Start Position>, <End Position> ]\n[ <???????????????>, <Start Position>, <End Position> ]\n[ <???????????????>, <Start Position> ]
Tangent=???????????????????????????
Tangent.Syntax=[ <???????????????>, <???????????????> ]\n[ <???????????????>, <??????> ]\n[ <???????????? ???????????????>, <????????????> ]\n[ <x-???????????????>, <??????> ]\n[ <????????????>, <???????????????> ]\n[ <???????????????>, <???????????????> ]
Tangent.SyntaxCAS=[ <??????????????????>, <??????> ]\n[ <???????????????>, <?????????> ]
TaylorSeries=????????????????????????????????????
TaylorSeries.Syntax=[ <??????>, <x-???????????????>, <???????????? ?????????????????????> ]
TaylorSeries.SyntaxCAS=[ <??????????????????>, <x-???????????????>, <???????????? ?????????????????????> ]\n[ <??????????????????>, <??????>, <??????????????? ???????????????>, <???????????? ?????????????????????> ]
Tetrahedron.Syntax=[ <Equilateral Triangle> ]\n[ <???????????????>, <???????????????>, <???????????????> ]\n[ <???????????????>, <???????????????>, <Direction> ]
Text=???????????????
Text.Syntax=[ <?????????> ]\n[ <?????????>, <Boolean for Substitution of Variables> ]\n[ <?????????>, <???????????????> ]\n[ <?????????>, <???????????????>, <Boolean for Substitution of Variables> ]\n[ <?????????>, <???????????????>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]\n[ <?????????>, <???????????????>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1> ]\n[ <?????????>, <???????????????>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula>, <Horizontal alignment -1|0|1>, <Vertical alignment -1|0|1> ]
TextToUnicode=??????????????????????????????????????????
TextToUnicode.Syntax=[ <???????????????> ]
Textfield.Syntax=[ <Linked Object> ]
TiedRank.Syntax=[ <????????????> ]
ToBase.Syntax=[ <??????????????????>, <Base> ]
ToComplex.Syntax=[ <????????????> ]
ToExponential.SyntaxCAS=[ <?????????????????? ??????????????????> ]
ToPoint=?????????????????????????????????
ToPoint.Syntax=[ <?????????????????? ??????????????????> ]
ToPolar.Syntax=[ <?????????????????? ??????????????????> ]\n[ <????????????> ]
ToolImage.Syntax=[ <??????????????????> ]\n[ <??????????????????>, <???????????????> ]\n[ <??????????????????>, <???????????????>, <???????????????> ]
Top.Syntax=[ <Quadric> ]
Translate=?????????????????????
Translate.Syntax=[ <?????????>, <????????????> ]\n[ <????????????>, <???????????????????????????> ]
Transpose=???????????????????????????
Transpose.Syntax=[ <???????????????> ]
TrapezoidalSum=??????????????????????????????
TrapezoidalSum.Syntax=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????>, <??????????????? ??????????????????????????? ??????????????????> ]
TravelingSalesman.Syntax=[ <List of Points> ]
TriangleCenter.Syntax=[ <???????????????>, <???????????????>, <???????????????>, <??????????????????> ]
TriangleCurve.Syntax=[ <???????????????>, <???????????????>, <???????????????>, <??????????????????> ]
Triangular.Syntax=[ <Lower Bound>, <Upper Bound>, <Mode>, <??????????????? ???????????????> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <?????????????????? ???????????????> ]
TrigCombine.Syntax=[ <??????????????????> ]\n[ <??????????????????>, <Target Function> ]
TrigExpand.Syntax=[ <??????????????????> ]\n[ <??????????????????>, <Target Function> ]
TrigExpand.SyntaxCAS=[ <??????????????????> ]\n[ <??????????????????>, <Target Function> ]\n[ <??????????????????>, <Target Function>, <Target Variable> ]\n[ <??????????????????>, <Target Function>, <Target Variable>, <Target Variable> ]
TrigSimplify.Syntax=[ <??????????????????> ]
Trilinear.Syntax=[ <???????????????>, <???????????????>, <???????????????>, <??????????????????>, <??????????????????>, <??????????????????> ]
TurningPoint=?????????????????????????????????????????????
TurningPoint.Syntax=[ <??????????????????> ]
TurningPoint.SyntaxCAS=[ <??????> ]
Turtle.Syntax=[]
TurtleBack.Syntax=[ <Turtle>, <Distance> ]
TurtleDown.Syntax=[ <Turtle> ]
TurtleForward.Syntax=[ <Turtle>, <Distance> ]
TurtleLeft.Syntax=[ <Turtle>, <?????????> ]
TurtleRight.Syntax=[ <Turtle>, <?????????> ]
TurtleUp.Syntax=[ <Turtle> ]
Type.Syntax=[ <?????????> ]
UnicodeToLetter=??????????????????????????????????????????
UnicodeToLetter.Syntax=[ <????????????????????????> ]
UnicodeToText=??????????????????????????????????????????
UnicodeToText.Syntax=[ <???????????????????????????????????? ????????????> ]
Uniform.Syntax=[ <Lower Bound>, <Upper Bound>, <??????????????? ???????????????> ]\n[ <Lower Bound>, <Upper Bound>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Lower Bound>, <Upper Bound>, x, <?????????????????? ???????????????> ]
Union=???????????????
Union.Syntax=[ <????????????>, <????????????> ]\n[ <??????????????????>, <??????????????????> ]
Unique.Syntax=[ <????????????> ]
UnitOrthogonalVector=??????????????????????????????
UnitOrthogonalVector.Syntax=[ <????????????> ]\n[ <?????????????????????> ]\n[ <????????????> ]
UnitOrthogonalVector.Syntax3D=[ <????????????> ]\n[ <?????????????????????> ]\n[ <????????????> ]\n[ <Plane> ]
UnitOrthogonalVector.SyntaxCAS=[ <????????????> ]
UnitVector=?????????????????????
UnitVector.Syntax=[ <?????????> ]
UnitVector.SyntaxCAS=[ <????????????> ]
UpdateConstruction.Syntax=[ ]\n[ <Number of times> ]
UpperSum=???????????????????????????
UpperSum.Syntax=[ <??????>, <??????????????? x-???????????????>, <??????????????? x-???????????????>, <????????????????????? ??????????????????> ]
Variance=?????????
Variance.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
Vector=????????????
Vector.Syntax=[ <???????????????> ]\n[ <???????????????????????????>, <??????????????? ???????????????> ]
Vertex=???????????????????????????
Vertex.Syntax=[ <???????????????> ]\n[ <Inequality> ]\n[ <??????????????????> ]\n[ <??????????????????>, <Index> ]\n[ <?????????????????????>, <Index> ]
VerticalText.Syntax=[ <???????????????> ]\n[ <???????????????>, <???????????????> ]
Volume.Syntax=[ <Solid> ]
Voronoi.Syntax=[ <List of Points> ]
Weibull.Syntax=[ <Shape>, <??????????????????>, <??????????????? ???????????????> ]\n[ <Shape>, <??????????????????>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]\n[ <Shape>, <??????????????????>, x, <?????????????????? ???????????????> ]
Weibull.SyntaxCAS=[ <Shape>, <??????????????????>, <??????????????? ???????????????> ]
ZMean2Estimate.Syntax=[ <List of Sample Data 1>, <List of Sample Data 2>, <??1>, <??2>, <Confidence Level> ]\n[ <Sample Mean 1>, <??1>, <Sample Size 1>, <Sample Mean 2>, <??2>, <Sample Size 2>, <Confidence Level> ]
ZMean2Test.Syntax=[ <List of Sample Data 1>, <??1>, <List of Sample Data 2>, <??2>, <Tail> ]\n[ <Sample Mean 1>, <??1>, <Sample Size 1>, <Sample Mean 2>, <??2>, <Sample Size 2>, <Tail> ]
ZMeanEstimate.Syntax=[ <List of Sample Data>, <??>, <Confidence Level> ]\n[ <Sample Mean>, <??>, <Sample Size>, <Confidence Level> ]
ZMeanTest.Syntax=[ <List of Sample Data>, <??>, <Hypothesized Mean>, <Tail> ]\n[ <Sample Mean>, <??>, <Sample Size>, <Hypothesized Mean>, <Tail> ]
ZProportion2Estimate.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Confidence Level> ]
ZProportion2Test.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Tail> ]
ZProportionEstimate.Syntax=[ <Sample Proportion>, <Sample Size>, <Confidence Level> ]
ZProportionTest.Syntax=[ <Sample Proportion>, <Sample Size>, <Hypothesized Proportion>, <Tail> ]
Zip.Syntax=[ <??????????????????>, <Var1>, <List1>, <Var2>, <List2>, ... ]
Zipf.Syntax=[ <Number of Elements>, <Exponent> ]\n[ <Number of Elements>, <Exponent>, <?????????????????? ???????????????> ]\n[ <Number of Elements>, <Exponent>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
Zipf.SyntaxCAS=[ <Number of Elements>, <Exponent>, <??????????????? ???????????????>, <?????????????????? ???????????????> ]
ZoomIn.Syntax=[ ]\n[ <Scale Factor> ]\n[ <Scale Factor>, <???????????? ???????????????> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut.Syntax=[ <Scale Factor> ]\n[ <Scale Factor>, <???????????? ???????????????> ]
mad.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
mean.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
nCr.Syntax=[ <??????????????????>, <??????????????????> ]
stdev.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]
stdevp.Syntax=[ <????????????????????? ???????????????????????? ????????????> ]\n[ <??????????????????????????? ????????????>, <????????????????????????????????? ????????????> ]