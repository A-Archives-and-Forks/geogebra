# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA=ANOVA
ANOVA.Syntax=[ <リスト>, <リスト>, ... ]
AffineRatio=AffineRatio
AffineRatio.Syntax=[ <点>, <点>, <点> ]
Angle=Angle
Angle.Syntax=[ <オブジェクト> ]\n[ <ベクトル>, <ベクトル> ]\n[ <直線>, <直線> ]\n[ <点>, <頂点>, <点> ]\n[ <点>, <頂点>, <角度> ]
Angle.Syntax3D=[ <オブジェクト> ]\n[ <ベクトル>, <ベクトル> ]\n[ <直線>, <直線> ]\n[ <直線>, <平面> ]\n[ <平面>, <平面> ]\n[ <点>, <頂点>, <点> ]\n[ <点>, <頂点>, <角度> ]\n[ <点>, <点>, <点>, <向き> ]
AngularBisector=AngleBisector
AngularBisector.Syntax=[ <直線>, <直線> ]\n[ <点>, <点>, <点> ]
Append=Append
Append.Syntax=[ <リスト>, <オブジェクト> ]\n[ <オブジェクト>, <リスト> ]
ApplyMatrix=ApplyMatrix
ApplyMatrix.Syntax=[ <行列>, <オブジェクト> ]
Arc=Arc
Arc.Syntax=[ <円>, <点>, <点> ]\n[ <楕円>, <点>, <点> ]\n[ <円>, <媒介変数の値>, <媒介変数の値> ]\n[ <楕円>, <媒介変数の値>, <媒介変数の値> ]
AreCollinear=AreCollinear
AreCollinear.Syntax=[ <点>, <点>, <点> ]
AreConcurrent=AreConcurrent
AreConcurrent.Syntax=[ <直線>, <直線>, <直線> ]
AreConcyclic=AreConcyclic
AreConcyclic.Syntax=[ <点>, <点>, <点>, <点> ]
AreCongruent=AreCongruent
AreCongruent.Syntax=[ <オブジェクト>, <オブジェクト> ]
AreEqual=AreEqual
AreEqual.Syntax=[ <オブジェクト>, <オブジェクト> ]
AreParallel=AreParallel
AreParallel.Syntax=[ <直線>, <直線> ]
ArePerpendicular=ArePerpendicular
ArePerpendicular.Syntax=[ <直線>, <直線> ]
Area=Area
Area.Syntax=[ <２次曲線> ]\n[ <多角形> ]\n[ <点>, ..., <点> ]
Assume=Assume
Assume.SyntaxCAS=[ <条件>, <式> ]
Asymptote=Asymptote
Asymptote.Syntax=[ <オブジェクト> ]
AttachCopyToView=AttachCopyToView
AttachCopyToView.Syntax=[ <オブジェクト>, <ビュー 0|1|2> ]\n[ <オブジェクト>, <ビュー 0|1|2>, <点 1>, <点 2>, <Screen Point 1>, <Screen Point 2> ]
Axes=Axes
Axes.Syntax=[ <２次曲線> ]
Axes.Syntax3D=[ <２次曲線> ]\n[ <２次曲面> ]
AxisStepX=AxisStepX
AxisStepX.Syntax=[ ]
AxisStepY=AxisStepY
AxisStepY.Syntax=[ ]
BarChart=BarChart
BarChart.Syntax=[ <データのリスト>, <度数のリスト> ]\n[ <生データのリスト>, <棒の幅>, <縦方向倍率 (オプション)> ]\n[ <データのリスト>, <度数のリスト>, <棒の幅> ]\n[ <開始値>, <終了値>, <高さのリスト> ]\n[ <開始値>, <終了値>, <式>, <変数>, <始点>, <終点> ]\n[ <開始値>, <終了値>, <式>, <変数>, <始点>, <終点>, <間隔> ]
Barycenter=Barycenter
Barycenter.Syntax=[ <点のリスト>, <重みのリスト> ]
Bernoulli=Bernoulli
Bernoulli.Syntax=[ <確率>, <ブール累積> ]
Binomial=BinomialCoefficient
Binomial.Syntax=[ <数値>, <数値> ]
BinomialDist=BinomialDist
BinomialDist.Syntax=[ <試行回数>, <成功確率> ]\n[ <試行回数>, <成功確率>, <ブール累積> ]\n[ <試行回数>, <成功確率>, <変数値>, <ブール累積> ]
BinomialDist.SyntaxCAS=[ <試行回数>, <成功確率>, <変数値>, <ブール累積> ]
Bottom=Bottom
Bottom.Syntax=[ <２次曲面> ]
BoxPlot=BoxPlot
BoxPlot.Syntax=[ <yOffset>, <yスケール>, <生データのリスト> ]\n[ <yOffset>, <yスケール>, <生データのリスト>, <Boolean Outliers> ]\n[ <yOffset>, <yスケール>, <データのリスト>, <度数のリスト>, <Boolean Outliers> ]\n[ <yOffset>, <yスケール>, <開始値>, <Q1>, <中央値>, <Q3>, <終了値> ]
Button=Button
Button.Syntax=[ ]\n[ <見出し> ]
CASLoaded=CASLoaded
CASLoaded.Syntax=[]
CFactor=CFactor
CFactor.SyntaxCAS=[ <式> ]\n[ <式>, <変数> ]
CIFactor=CIFactor
CIFactor.SyntaxCAS=[ <式> ]\n[ <式>, <変数> ]
CSolutions=CSolutions
CSolutions.SyntaxCAS=[ <方程式> ]\n[ <方程式>, <変数> ]\n[ <方程式のリスト>, <変数のリスト> ]
CSolve=CSolve
CSolve.SyntaxCAS=[ <方程式> ]\n[ <方程式>, <変数> ]\n[ <方程式のリスト>, <変数のリスト> ]
Cauchy=Cauchy
Cauchy.Syntax=[ <中央値>, <スケール>, <変数値> ]\n[ <中央値>, <スケール>, <変数値>, <ブール累積>  ]\n[ <中央値>, <スケール>, x, <ブール累積> ]
Cauchy.SyntaxCAS=[ <中央値>, <スケール>, <変数値> ]
Cell=Cell
Cell.Syntax=[ <列>, <行> ]
CellRange=CellRange
CellRange.Syntax=[ <開始セル>, <終了セル> ]
Center=Center
Center.Syntax=[ <２次曲線> ]
Center.Syntax3D=[ <２次曲線> ]\n[ <２次曲面> ]
CenterView=CenterView
CenterView.Syntax=[ <中心点> ]
Centroid=Centroid
Centroid.Syntax=[ <多角形> ]
Checkbox=Checkbox
Checkbox.Syntax=[ ]\n[ <見出し> ]\n[ <リスト> ]\n[ <見出し>, <リスト> ]
ChiSquared=ChiSquared
ChiSquared.Syntax=[ <自由度>, <変数値> ]\n[ <自由度>, <変数値>, <ブール累積> ]\n[ <自由度>, x, <ブール累積> ]
ChiSquared.SyntaxCAS=[ <自由度>, <変数> ]
ChiSquaredTest=ChiSquaredTest
ChiSquaredTest.Syntax=[ <行列> ]\n[ <リスト>, <リスト> ]\n[ <行列>, <行列> ]
Circle=Circle
Circle.Syntax=[ <点>, <半径の数値> ]\n[ <点>, <線分> ]\n[ <点>, <点> ]\n[ <点>, <点>, <点> ]
Circle.Syntax3D=[ <点>, <半径の数値> ]\n[ <点>, <線分> ]\n[ <点>, <点> ]\n[ <点>, <点>, <点> ]\n[ <直線>, <点> ]\n[ <点>, <半径>, <向き> ]\n[ <点>, <点>, <向き> ]
CircleArc=CircularArc
CircleArc.Syntax=[ <中心>, <点>, <点> ]
CircleSector=CircularSector
CircleSector.Syntax=[ <中心>, <点>, <点> ]
CircumcircleArc=CircumcircularArc
CircumcircleArc.Syntax=[ <点>, <点>, <点> ]
CircumcircleSector=CircumcircularSector
CircumcircleSector.Syntax=[ <点>, <点>, <点> ]
Circumference=Circumference
Circumference.Syntax=[ <２次曲線> ]
Classes=Classes
Classes.Syntax=[ <データのリスト>, <階級の数> ]\n[ <データのリスト>, <開始>, <階級の幅> ]
ClosestPoint=ClosestPoint
ClosestPoint.Syntax=[ <パス>, <点> ]\n[ <直線>, <直線> ]
ClosestPointRegion=ClosestPointRegion
ClosestPointRegion.Syntax=[ <領域>, <点> ]
Coefficients=Coefficients
Coefficients.Syntax=[ <多項式> ]\n[ <２次曲線> ]
Coefficients.SyntaxCAS=[ <多項式> ]\n[ <多項式>, <変数> ]
Column=Column
Column.Syntax=[ <表計算のセル> ]
ColumnName=ColumnName
ColumnName.Syntax=[ <表計算のセル> ]
Command=Command
CommonDenominator=CommonDenominator
CommonDenominator.Syntax=[ <式>, <式> ]
CompleteSquare=CompleteSquare
CompleteSquare.Syntax=[ <２次関数> ]
ComplexRoot=ComplexRoot
ComplexRoot.Syntax=[ <多項式> ]
Cone=Cone
Cone.Syntax=[ <円>, <高さ> ]\n[ <点>, <点>, <半径> ]\n[ <点>, <ベクトル>, <角度> ]
ConeInfinite=InfiniteCone
ConeInfinite.Syntax=[ <点>, <ベクトル>, <角度> ]\n[ <点>, <点>, <角度> ]\n[ <点>, <直線>, <角度> ]
Conic=Conic
Conic.Syntax=[ <リスト> ]\n[ <点>, <点>, <点>, <点>, <点> ]\n[ <数値>, <数値>, <数値>, <数値>, <数値>, <数値> ]
ConstructionStep=ConstructionStep
ConstructionStep.Syntax=[ ]\n[ <オブジェクト> ]
ContingencyTable=ContingencyTable
ContingencyTable.Syntax=[ <テキストのリスト>, <テキストのリスト> ]\n[ <テキストのリスト>, <テキストのリスト>, <オプション> ]\n[ <List of Row Values>, <List of Column Values>, <度数表> ]\n[ <List of Row Values>, <List of Column Values>, <度数表> , <オプション> ]
ContinuedFraction=ContinuedFraction
ContinuedFraction.Syntax=[ <数値> ]\n[ <数値>, <レベル> ]\n[ <数値>, <レベル>, <簡略化 true | false> ]
ConvexHull=ConvexHull
ConvexHull.Syntax=[ <点のリスト> ]
CopyFreeObject=CopyFreeObject
CopyFreeObject.Syntax=[ <オブジェクト> ]
Corner=Corner
Corner.Syntax=[ <隅の番号> ]\n[ <画像>, <隅の番号> ]\n[ <テキスト>, <隅の番号> ]\n[ <グラフィックスビュー>, <隅の番号> ]
CountIf=CountIf
CountIf.Syntax=[ <条件>, <リスト> ]\n[ <条件>, <変数>, <リスト> ]
Covariance=Covariance
Covariance.Syntax=[ <点のリスト> ]\n[ <数値のリスト>, <数値のリスト> ]
Cross=Cross
Cross.Syntax=[ <ベクトル>, <ベクトル> ]
CrossRatio=CrossRatio
CrossRatio.Syntax=[ <点>, <点>, <点>, <点> ]
Cube=Cube
Cube.Syntax=[ <正方形> ]\n[ <点>, <点>, <点> ]\n[ <点>, <点>, <向き> ]
Cubic=Cubic
Cubic.Syntax=[ <点>, <点>, <点>, <数値> ]
Curvature=Curvature
Curvature.Syntax=[ <点>, <オブジェクト> ]
CurvatureVector=CurvatureVector
CurvatureVector.Syntax=[ <点>, <オブジェクト> ]
CurveCartesian=Curve
CurveCartesian.Syntax=[ <式>, <式>, <媒介変数>, <開始値>, <終了値> ]
CurveCartesian.Syntax3D=[ <式>, <式>, <媒介変数>, <開始値>, <終了値> ]\n[ <式>, <式>, <式>, <媒介変数>, <開始値>, <終了値> ]
Cylinder=Cylinder
Cylinder.Syntax=[ <円>, <高さ> ]\n[ <点>, <点>, <半径> ]
CylinderInfinite=InfiniteCylinder
CylinderInfinite.Syntax=[ <直線>, <半径> ]\n[ <点>, <ベクトル>, <半径> ]\n[ <点>, <点>, <半径> ]
DataFunction=DataFunction
DataFunction.Syntax=[ <数値のリスト>, <数値のリスト> ]
Defined=IsDefined
Defined.Syntax=[ <オブジェクト> ]
Degree=Degree
Degree.Syntax=[ <多項式> ]
Degree.SyntaxCAS=[ <多項式> ]\n[ <多項式>, <変数> ]
DelauneyTriangulation=DelaunayTriangulation
DelauneyTriangulation.Syntax=[ <点のリスト> ]
Delete=Delete
Delete.Syntax=[ <オブジェクト> ]
Denominator=Denominator
Denominator.Syntax=[ <数値> ]\n[ <関数> ]
Denominator.SyntaxCAS=[ <式> ]
DensityPlot=DensityPlot
Derivative=Derivative
Derivative.Syntax=[ <関数> ]\n[ <曲線> ]\n[ <関数>, <数値> ]\n[ <関数>, <変数> ]\n[ <曲線>, <数値> ]\n[ <関数>, <変数>, <数値> ]
Derivative.SyntaxCAS=[ <式> ]\n[ <式>, <変数> ]\n[ <式>, <変数>, <数値> ]
Determinant=Determinant
Determinant.Syntax=[ <行列> ]
Diameter=ConjugateDiameter
Diameter.Syntax=[ <ベクトル>, <２次曲線> ]\n[ <直線>, <２次曲線> ]
Difference=Difference
Difference.Syntax=[ <多角形>, <多角形> ]
Dilate=Dilate
Dilate.Syntax=[ <オブジェクト>, <拡大率> ]\n[ <オブジェクト>, <拡大率>, <拡大の中心点> ]
Dimension=Dimension
Dimension.Syntax=[ <オブジェクト> ]
Direction=Direction
Direction.Syntax=[ <直線> ]
Directrix=Directrix
Directrix.Syntax=[ <２次曲線> ]
Distance=Distance
Distance.Syntax=[ <点>, <オブジェクト> ]\n[ <直線>, <直線> ]\n[ <平面>, <平面> ]
Div=Div
Div.Syntax=[ <割られる数値>, <割る数値> ]\n[ <割られる多項式>, <割る多項式> ]
Division=Division
Division.Syntax=[ <割られる数値>, <割る数値> ]\n[ <割られる多項式>, <割る多項式> ]
Divisors=Divisors
Divisors.Syntax=[ <数値> ]
DivisorsList=DivisorsList
DivisorsList.Syntax=[ <数値> ]
DivisorsSum=DivisorsSum
DivisorsSum.Syntax=[ <数値> ]
Dodecahedron=Dodecahedron
Dodecahedron.Syntax=[ <正五角形> ]\n[ <点>, <点>, <点> ]\n[ <点>, <点>, <向き> ]
Dot=Dot
Dot.Syntax=[ <ベクトル>, <ベクトル> ]
DotPlot=DotPlot
DotPlot.Syntax=[ <生データのリスト>, <積み重ね true | false (オプション)>, <倍率 (オプション)>]
DynamicCoordinates=DynamicCoordinates
DynamicCoordinates.Syntax=[ <点>, <x座標>, <y座標> ]\n[ <点>, <x座標>, <y座標>, <z座標> ]
Eccentricity=Eccentricity
Eccentricity.Syntax=[ <２次曲線> ]
Eigenvalues=Eigenvalues
Eigenvalues.SyntaxCAS=[ <行列> ]
Eigenvectors=Eigenvectors
Eigenvectors.SyntaxCAS=[ <行列> ]
Element=Element
Element.Syntax=[ <リスト>, <要素の位置> ]\n[ <行列>, <行>, <列> ]\n[ <リスト>, <インデックス1>, <インデックス2>, ... ]
Element.SyntaxCAS=[ <リスト>, <要素の位置> ]\n[ <行列>, <行>, <列> ]
Eliminate=Eliminate
Eliminate.Syntax=[ <多項式のリスト>, <変数のリスト> ]
Ellipse=Ellipse
Ellipse.Syntax=[ <焦点>, <焦点>, <長軸の長さ> ]\n[ <焦点>, <焦点>, <線分> ]\n[ <焦点>, <焦点>, <点> ]
Ends=Ends
Ends.Syntax=[ <２次曲面> ]
Envelope=Envelope
Envelope.Syntax=[ <パス>, <点> ]
Erlang=Erlang
Erlang.Syntax=[ <シェイプ>, <レート>, <変数値> ]\n[ <シェイプ>, <レート>, <変数値>, <ブール累積> ]\n[ <シェイプ>, <レート>, x, <ブール累積> ]
Evaluate=値を求める・評価する
Excentricity=LinearEccentricity
Excentricity.Syntax=[ <２次曲線> ]
Execute=Execute
Execute.Syntax=[ <テキストのリスト> ]\n[ <テキストのリスト>, <引数>, <引数>, ... ]
Expand=Expand
Expand.Syntax=[ <式> ]
Exponential=Exponential
Exponential.Syntax=[ <λ>, <変数値> ]\n[ <λ>, <変数値>, <ブール累積> ]\n[ <λ>, x, <ブール累積> ]
Exponential.SyntaxCAS=[ <λ>, <変数値> ]
ExportImage=ExportImage
ExportImage.Syntax=[ <プロパティ>, <値>, <プロパティ>, <値>, ... ]
Extremum=Extremum
Extremum.Syntax=[ <多項式> ]\n[ <関数>, <x開始値>, <x終了値> ]
FDistribution=FDistribution
FDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <変数値> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <変数値>, <ブール累積> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x, <ブール累積> ]
FDistribution.SyntaxCAS=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <変数値> ]
Factor=Factor
Factor.Syntax=[ <多項式> ]
Factor.SyntaxCAS=[ <数値> ]\n[ <多項式> ]\n[ <式>, <変数> ]
Factors=Factors
Factors.Syntax=[ <多項式> ]\n[ <数値> ]
FillCells=FillCells
FillCells.Syntax=[ <セル範囲>, <オブジェクト> ]\n[ <セル>, <リスト> ]\n[ <セル>, <行列> ]
FillColumn=FillColumn
FillColumn.Syntax=[ <列>, <リスト> ]
FillRow=FillRow
FillRow.Syntax=[ <行>, <リスト> ]
First=First
First.Syntax=[ <リスト> ]\n[ <テキスト> ]\n[ <リスト>, <要素の数> ]\n[ <テキスト>, <要素の数> ]\n[ <軌跡>, <要素の数> ]
First.SyntaxCAS=[ <リスト> ]\n[ <リスト>, <要素の数> ]
FirstAxis=MajorAxis
FirstAxis.Syntax=[ <２次曲線> ]
FirstAxisLength=SemiMajorAxisLength
FirstAxisLength.Syntax=[ <２次曲線> ]
Fit=Fit
Fit.Syntax=[ <点のリスト>, <関数のリスト> ]\n[ <点のリスト>, <関数> ]
FitExp=FitExp
FitExp.Syntax=[ <点のリスト> ]
FitGrowth=FitGrowth
FitGrowth.Syntax=[ <点のリスト> ]
FitImplicit=FitImplicit
FitImplicit.Syntax=[ <点のリスト>, <順序> ]
FitLineX=FitLineX
FitLineX.Syntax=[ <点のリスト> ]
FitLineY=FitLine
FitLineY.Syntax=[ <点のリスト> ]
FitLog=FitLog
FitLog.Syntax=[ <点のリスト> ]
FitLogistic=FitLogistic
FitLogistic.Syntax=[ <点のリスト> ]
FitPoly=FitPoly
FitPoly.Syntax=[ <点のリスト>, <多項式の次数> ]\n[ <フリーハンドで描いた関数>, <多項式の次数> ]
FitPow=FitPow
FitPow.Syntax=[ <点のリスト> ]
FitSin=FitSin
FitSin.Syntax=[ <点のリスト> ]
Flatten=Flatten
Flatten.Syntax=[ <リスト> ]
Focus=Focus
Focus.Syntax=[ <２次曲線> ]
FractionText=FractionText
FractionText.Syntax=[ <数値> ]\n[ <点> ]
Frequency=Frequency
Frequency.Syntax=[ <生データのリスト> ]\n[ <ブール累積>, <生データのリスト> ]\n[ <List of Class Boundaries>, <生データのリスト> ]\n[ <テキストのリスト>, <テキストのリスト> ]\n[ <ブール累積>, <List of Class Boundaries>, <生データのリスト> ]\n[ <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <ブール累積>, <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)> ]
FrequencyPolygon=FrequencyPolygon
FrequencyPolygon.Syntax=[ <List of Class Boundaries>, <高さのリスト> ]\n[ <List of Class Boundaries>, <生データのリスト>, <論理式使用密度>, <Density Scale Factor (optional)> ]\n[ <ブール累積>, <List of Class Boundaries>, <生データのリスト>, <論理式使用密度>, <Density Scale Factor (optional)> ]
FrequencyTable=FrequencyTable
FrequencyTable.Syntax=[ <生データのリスト>, <倍率 (オプション)> ]\n[ <ブール累積>, <生データのリスト> ]\n[ <List of Class Boundaries>, <生データのリスト> ]\n[ <ブール累積>, <List of Class Boundaries>, <生データのリスト> ]\n[ <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <ブール累積>, <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)> ]
FromBase=FromBase
FromBase.Syntax=[ <数値のテキスト>, <進法の底> ]
Function=Function
Function.Syntax=[ <関数>, <x開始値>, <x終了値> ]\n[ <数値のリスト> ]
Function.Syntax3D=[ <数値のリスト> ]\n[ <関数>, <x開始値>, <x終了値> ]\n[ <式>, <媒介変数1>, <開始値>, <終了値>, <媒介変数2>, <開始値>, <終了値> ]
Function.SyntaxCAS=[ <関数>, <x開始値>, <x終了値> ]
FutureValue=FutureValue
FutureValue.Syntax=[ <レート>, <期間の数>, <支払>, <現在の値 (optional)>, <型(optional)> ]
GCD=GCD
GCD.Syntax=[ <数値のリスト> ]\n[ <数値>, <数値> ]
GCD.SyntaxCAS=[ <数値のリスト> ]\n[ <多項式のリスト> ]\n[ <数値>, <数値> ]\n[ <多項式>, <多項式> ]
Gamma=Gamma
Gamma.Syntax=[ <Alpha>, <Beta>, <変数値> ]\n[ <Alpha>, <Beta>, <変数値>, <ブール累積>  ]\n[ <Alpha>, <Beta>, x, <ブール累積> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <変数値> ]
GeometricMean=GeometricMean
GeometricMean.Syntax=[ <数値のリスト> ]
GetTime=GetTime
GetTime.Syntax=[]\n[ <フォーマット> ]
GroebnerDegRevLex=GroebnerDegRevLex
GroebnerDegRevLex.Syntax=[ <多項式のリスト> ]\n[ <多項式のリスト>, <変数のリスト> ]
GroebnerLex=GroebnerLex
GroebnerLex.Syntax=[ <多項式のリスト> ]\n[ <多項式のリスト>, <変数のリスト> ]
GroebnerLexDeg=GroebnerLexDeg
GroebnerLexDeg.Syntax=[ <多項式のリスト> ]\n[ <多項式のリスト>, <変数のリスト> ]
HarmonicMean=HarmonicMean
HarmonicMean.Syntax=[ <数値のリスト> ]
Height=Height
Height.Syntax=[ <立体> ]
HideLayer=HideLayer
HideLayer.Syntax=[ <数値> ]
Histogram=Histogram
Histogram.Syntax=[ <List of Class Boundaries>, <高さのリスト> ]\n[ <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <ブール累積>, <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)> ]
HistogramRight=HistogramRight
HistogramRight.Syntax=[ <List of Class Boundaries>, <高さのリスト> ]\n[ <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)>  ]\n[ <ブール累積>, <List of Class Boundaries>, <生データのリスト>, <Use Density>, <Density Scale Factor (optional)> ]
Hull.Syntax=[ <点のリスト>, <パーセンテージ> ]
HyperGeometric=HyperGeometric
HyperGeometric.Syntax=[ <集団の大きさ>, <成功数>, <標本の大きさ> ]\n[ <集団の大きさ>, <成功数>, <標本の大きさ>, <ブール累積> ]\n[ <集団の大きさ>, <成功数>, <標本の大きさ>, <変数値>, <ブール累積> ]
HyperGeometric.SyntaxCAS=[ <集団の大きさ>, <成功数>, <標本の大きさ>, <変数値>, <ブール累積> ]
Hyperbola=Hyperbola
Hyperbola.Syntax=[ <焦点>, <焦点>, <長軸の長さ> ]\n[ <焦点>, <焦点>, <線分> ]\n[ <焦点>, <焦点>, <点> ]
IFactor=IFactor
IFactor.Syntax=[ <多項式> ]
IFactor.SyntaxCAS=[ <式> ]\n[ <式>, <変数> ]
Icosahedron=Icosahedron
Icosahedron.Syntax=[ <正三角形> ]\n[ <点>, <点>, <点> ]\n[ <点>, <点>, <向き> ]
Identity=Identity
Identity.Syntax=[ <数値> ]
If=If
If.Syntax=[ <条件>, <成立時> ]\n[ <条件>, <成立時>, <不成立時> ]
ImplicitCurve=ImplicitCurve
ImplicitCurve.Syntax=[ <点のリスト> ]\n[ <f(x, y)> ]
ImplicitDerivative=ImplicitDerivative
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <式>, <従属変数>, <独立変数> ]
Incircle=Incircle
Incircle.Syntax=[ <点>, <点>, <点> ]
IndexOf=IndexOf
IndexOf.Syntax=[ <オブジェクト>, <リスト> ]\n[ <テキスト>, <テキスト> ]\n[ <オブジェクト>, <リスト>, <Start Index> ]\n[ <テキスト>, <テキスト>, <Start Index> ]
Insert=Insert
Insert.Syntax=[ <リスト>, <リスト>, <位置> ]\n[ <オブジェクト>, <リスト>, <位置> ]
Integral=Integral
Integral.Syntax=[ <関数> ]\n[ <関数>, <変数> ]\n[ <関数>, <x開始値>, <x終了値> ]\n[ <関数>, <x開始値>, <x終了値>, <Boolean Evaluate> ]
Integral.SyntaxCAS=[ <関数> ]\n[ <関数>, <変数> ]\n[ <関数>, <x開始値>, <x終了値> ]\n[ <関数>, <変数>, <開始値>, <終了値> ]
IntegralBetween=IntegralBetween
IntegralBetween.Syntax=[ <関数>, <関数>, <x開始値>, <x終了値> ]\n[ <関数>, <関数>, <x開始値>, <x終了値>, <Boolean Evaluate> ]
IntegralBetween.SyntaxCAS=[ <関数>, <関数>, <x開始値>, <x終了値> ]\n[ <関数>, <関数>, <変数>, <開始値>, <終了値> ]
IntegralSymbolic=IntegralSymbolic
IntegralSymbolic.Syntax=[ <関数> ]\n[ <関数>, <変数> ]
InteriorAngles=InteriorAngles
InteriorAngles.Syntax=[ <多角形> ]
Intersect=Intersect
Intersect.Syntax=[ <オブジェクト>, <オブジェクト> ]\n[ <オブジェクト>, <オブジェクト>, <交点の番号> ]\n[ <オブジェクト>, <オブジェクト>, <初期点> ]\n[ <関数>, <関数>, <x開始値>, <x終了値> ]\n[ <曲線 1>, <曲線 2>, <媒介変数 1>, <媒介変数 2> ]
Intersect.SyntaxCAS=[ <関数>, <関数> ]
IntersectConic=IntersectConic
IntersectConic.Syntax=[ <平面>, <２次曲面> ]\n[ <２次曲面>, <２次曲面> ]
IntersectPath=IntersectionPaths
IntersectPath.Syntax=[ <直線>, <多角形> ]\n[ <多角形>, <多角形> ]
IntersectPath.Syntax3D=[ <直線>, <多角形> ]\n[ <多角形>, <多角形> ]\n[ <平面>, <多角形> ]\n[ <平面>, <２次曲面> ]
Intersection=Intersection
Intersection.Syntax=[ <リスト>, <リスト> ]
InverseBinomial=InverseBinomial
InverseBinomial.Syntax=[ <試行回数>, <成功確率>, <確率> ]
InverseCauchy=InverseCauchy
InverseCauchy.Syntax=[ <中央値>, <スケール>, <確率> ]
InverseChiSquared=InverseChiSquared
InverseChiSquared.Syntax=[ <自由度>, <確率> ]
InverseExponential=InverseExponential
InverseExponential.Syntax=[ <λ>, <確率> ]
InverseFDistribution=InverseFDistribution
InverseFDistribution.Syntax=[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <確率> ]
InverseGamma=InverseGamma
InverseGamma.Syntax=[ <Alpha>, <Beta>, <確率> ]
InverseHyperGeometric=InverseHyperGeometric
InverseHyperGeometric.Syntax=[ <集団の大きさ>, <成功数>, <標本の大きさ>, <確率> ]
InverseLaplace=InverseLaplace
InverseLaplace.Syntax=[ <関数> ]\n[ <関数>, <変数> ]\n[ <関数>, <変数>, <変数> ]
InverseLogNormal=InverseLogNormal
InverseLogNormal.Syntax=[ <平均>, <標準偏差>, <確率> ]
InverseLogistic=InverseLogistic
InverseLogistic.Syntax=[ <平均>, <スケール>, <確率> ]
InverseNormal=InverseNormal
InverseNormal.Syntax=[ <平均>, <標準偏差>, <確率> ]
InversePascal=InversePascal
InversePascal.Syntax=[ <成功の数>, <成功の確率>, <確率> ]
InversePoisson=InversePoisson
InversePoisson.Syntax=[ <平均>, <確率> ]
InverseTDistribution=InverseTDistribution
InverseTDistribution.Syntax=[ <自由度>, <確率> ]
InverseWeibull=InverseWeibull
InverseWeibull.Syntax=[ <シェイプ>, <スケール>, <確率> ]
InverseZipf=InverseZipf
InverseZipf.Syntax=[ <要素の数>, <指数>, <確率> ]
Invert=Invert
Invert.Syntax=[ <行列> ]\n[ <関数> ]
IsFactored=IsFactored
IsFactored.Syntax=[ <多項式> ]
IsInRegion=IsInRegion
IsInRegion.Syntax=[ <点>, <領域> ]
IsInteger=IsInteger
IsInteger.Syntax=[ <数値> ]
IsPrime=IsPrime
IsPrime.Syntax=[ <数値> ]
IsTangent=IsTangent
IsTangent.Syntax=[ <直線>, <２次曲線> ]
IsVertexForm=IsVertexForm
IsVertexForm.Syntax=[ <関数> ]
Iteration=Iteration
Iteration.Syntax=[ <関数>, <開始値>, <反復回数> ]\n[ <式>, <変数>, <開始値>, <カウント> ]
IterationList=IterationList
IterationList.Syntax=[ <関数>, <開始値>, <反復回数> ]\n[ <式>, <変数>, <開始値>, <カウント> ]
Join=Join
Join.Syntax=[ <リストのリスト> ]\n[ <リスト>, <リスト>, ... ]
JordanDiagonalization=JordanDiagonalization
JordanDiagonalization.SyntaxCAS=[ <行列> ]
KeepIf=KeepIf
KeepIf.Syntax=[ <条件>, <リスト> ]\n[ <条件>, <変数>, <リスト> ]
LCM=LCM
LCM.Syntax=[ <数値のリスト> ]\n[ <数値>, <数値> ]
LCM.SyntaxCAS=[ <数値のリスト> ]\n[ <多項式のリスト> ]\n[ <数値>, <数値> ]\n[ <多項式>, <多項式> ]
LaTeX=FormulaText
LaTeX.Syntax=[ <オブジェクト> ]\n[ <オブジェクト>, <変数代入のための真偽値> ]\n[ <オブジェクト>, <変数代入のための真偽値>, <ブール形式の表示名> ]
Laplace=Laplace
Laplace.Syntax=[ <関数> ]\n[ <関数>, <変数> ]\n[ <関数>, <変数>, <変数> ]
Last=Last
Last.Syntax=[ <リスト> ]\n[ <テキスト> ]\n[ <リスト>, <要素の数> ]\n[ <テキスト>, <要素の数> ]
Last.SyntaxCAS=[ <リスト> ]\n[ <リスト>, <要素の数> ]
LeftSide=LeftSide
LeftSide.Syntax=[ <方程式> ]
LeftSide.SyntaxCAS=[ <方程式> ]\n[ <方程式のリスト> ]\n[ <方程式のリスト>, <インデックス> ]
LeftSum=LeftSum
LeftSum.Syntax=[ <関数>, <x開始値>, <x終了値>, <長方形の数> ]
Length=Length
Length.Syntax=[ <オブジェクト> ]\n[ <関数>, <x開始値>, <x終了値> ]\n[ <関数>, <開始点>, <終了点> ]\n[ <曲線>, <t開始値>, <t終了値> ]\n[ <曲線>, <開始点>, <終了点> ]
Length.SyntaxCAS=[ <リスト> ]\n[ <関数>, <x開始値>, <x終了値> ]\n[ <関数>, <変数>, <x開始値>, <x終了値> ]
LetterToUnicode=LetterToUnicode
LetterToUnicode.Syntax=[ <文字> ]
Limit=Limit
Limit.Syntax=[ <関数>, <値> ]
Limit.SyntaxCAS=[ <式>, <値> ]\n[ <式>, <変数>, <値> ]
LimitAbove=LimitAbove
LimitAbove.Syntax=[ <関数>, <値> ]
LimitAbove.SyntaxCAS=[ <式>, <値> ]\n[ <式>, <変数>, <値> ]
LimitBelow=LimitBelow
LimitBelow.Syntax=[ <関数>, <値> ]
LimitBelow.SyntaxCAS=[ <式>, <値> ]\n[ <式>, <変数>, <値> ]
Line=Line
Line.Syntax=[ <点>, <点> ]\n[ <点>, <平行な直線> ]\n[ <点>, <方向ベクトル> ]
LineBisector=PerpendicularBisector
LineBisector.Syntax=[ <線分> ]\n[ <点>, <点> ]
LineBisector.Syntax3D=[ <線分> ]\n[ <点>, <点> ]\n[ <点>, <点>, <向き> ]
LineGraph=LineGraph
LineGraph.Syntax=[ <x座標のリスト>, <y座標のリスト> ]
Locus=Locus
Locus.Syntax=[ <軌跡の点>, <点> ]\n[ <軌跡の点>, <スライダー> ]\n[ <ベクトル場>, <点> ]\n[ <f(x, y)>, <点> ]
LocusEquation=LocusEquation
LocusEquation.Syntax=[ <軌跡> ]\n[ <軌跡の点>, <駆動点> ]\n[ <論理式>, <駆動点> ]
LogNormal=LogNormal
LogNormal.Syntax=[ <平均>, <標準偏差>, <変数値> ]\n[ <平均>, <標準偏差>, <変数値>, <ブール累積>  ]\n[ <平均>, <標準偏差>, x, <ブール累積> ]
Logistic=Logistic
Logistic.Syntax=[ <平均>, <スケール>, <変数値> ]\n[ <平均>, <スケール>, <変数値>, <ブール累積>  ]\n[ <平均>, <スケール>, x, <ブール累積> ]
LowerSum=LowerSum
LowerSum.Syntax=[ <関数>, <x開始値>, <x終了値>, <長方形の数> ]
MAD=MAD
MAD.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
MatrixPlot=MatrixPlot
MatrixRank=MatrixRank
MatrixRank.Syntax=[ <行列> ]
Max=Max
Max.Syntax=[ <区間> ]\n[ <数値>, <数値> ]\n[ <リスト> ]\n[ <データのリスト>, <度数のリスト> ]\n[ <関数>, <x開始値>, <x終了値> ]
Max.SyntaxCAS=[ <リスト> ]\n[ <数値>, <数値> ]
Maximize=Maximize
Maximize.Syntax=[ <従属する数値>, <自由な数値> ]\n[ <従属する数値>, <パス上の点> ]
Mean=Mean
Mean.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
Mean.SyntaxCAS=[ <数値のリスト> ]
MeanX=MeanX
MeanX.Syntax=[ <点のリスト> ]
MeanY=MeanY
MeanY.Syntax=[ <点のリスト> ]
Median=Median
Median.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
Median.SyntaxCAS=[ <数値のリスト> ]
Midpoint=Midpoint
Midpoint.Syntax=[ <線分> ]\n[ <２次曲線> ]\n[ <区間> ]\n[ <点>, <点> ]
Min=Min
Min.Syntax=[ <区間> ]\n[ <数値>, <数値> ]\n[ <リスト> ]\n[ <データのリスト>, <度数のリスト> ]\n[ <関数>, <x開始値>, <x終了値> ]
Min.SyntaxCAS=[ <リスト> ]\n[ <数値>, <数値> ]
Minimize=Minimize
Minimize.Syntax=[ <従属する数値>, <自由な数値> ]\n[ <従属する数値>, <パス上の点> ]
MinimumSpanningTree=MinimumSpanningTree
MinimumSpanningTree.Syntax=[ <点のリスト> ]
Mirror=Reflect
Mirror.Syntax=[ <オブジェクト>, <点> ]\n[ <オブジェクト>, <直線> ]\n[ <オブジェクト>, <円> ]
Mirror.Syntax3D=[ <オブジェクト>, <点> ]\n[ <オブジェクト>, <直線> ]\n[ <オブジェクト>, <平面> ]\n[ <オブジェクト>, <円> ]
MixedNumber=MixedNumber
MixedNumber.SyntaxCAS=[ <数値> ]
Mod=Mod
Mod.Syntax=[ <割られる数値>, <割る数値> ]\n[ <割られる多項式>, <割る多項式> ]
Mode=Mode
Mode.Syntax=[ <数値のリスト> ]
NDerivative=NDerivative
NDerivative.Syntax=[ <関数> ]\n[ <関数>, <順序> ]
NIntegral=NIntegral
NIntegral.Syntax=[ <関数> ]\n[ <関数>, <x開始値>, <x終了値> ]
NIntegral.SyntaxCAS=[ <関数>, <x開始値>, <x終了値> ]\n[ <関数>, <変数>, <開始値>, <終了値> ]
NInvert=NInvert
NInvert.Syntax=[ <関数> ]
NSolutions=NSolutions
NSolutions.Syntax=[ <方程式> ]
NSolutions.SyntaxCAS=[ <方程式> ]\n[ <方程式>, <変数> ]\n[ <方程式>, <変数 = 開始値> ]\n[ <方程式のリスト>, <変数のリスト> ]
NSolve=NSolve
NSolve.Syntax=[ <方程式> ]
NSolve.SyntaxCAS=[ <方程式> ]\n[ <方程式>, <変数> ]\n[ <方程式>, <変数 = 開始値> ]\n[ <方程式のリスト>, <変数のリスト> ]
NSolveODE=NSolveODE
NSolveODE.Syntax=[ <導関数のリスト>, <x座標の初期値>, <y座標の初期値のリスト>, <x座標の最終値> ]
Name=Name
Name.Syntax=[ <オブジェクト> ]
Net=Net
Net.Syntax=[ <多面体>, <数値> ]\n[ <多面体>, <数値>, <面>, <辺>, <辺>, ... ]
NextPrime=NextPrime
NextPrime.Syntax=[ <数値> ]
Normal=Normal
Normal.Syntax=[ <平均>, <標準偏差>, <変数値> ]\n[ <平均>, <標準偏差>, <変数値>, <ブール累積> ]\n[ <平均>, <標準偏差>, x, <ブール累積> ]
Normal.SyntaxCAS=[ <平均>, <標準偏差>, <変数値> ]
NormalQuantilePlot=NormalQuantilePlot
NormalQuantilePlot.Syntax=[ <生データのリスト> ]
Normalize=Normalize
Normalize.Syntax=[ <数値のリスト> ]\n[ <点のリスト> ]
Numerator=Numerator
Numerator.Syntax=[ <数値> ]\n[ <関数> ]
Numerator.SyntaxCAS=[ <式> ]
Numeric=Numeric
Numeric.SyntaxCAS=[ <式> ]\n[ <式>, <有効数字> ]
Object=Object
Object.Syntax=[ <オブジェクト名のテキスト> ]
Octahedron=Octahedron
Octahedron.Syntax=[ <正三角形> ]\n[ <点>, <点>, <点> ]\n[ <点>, <点>, <向き> ]
Ordinal=Ordinal
Ordinal.Syntax=[ <整数> ]
OrdinalRank=OrdinalRank
OrdinalRank.Syntax=[ <リスト> ]
OrthogonalLine=PerpendicularLine
OrthogonalLine.Syntax=[ <点>, <直線> ]\n[ <点>, <線分> ]\n[ <点>, <ベクトル> ]
OrthogonalLine.Syntax3D=[ <点>, <直線> ]\n[ <点>, <線分> ]\n[ <点>, <ベクトル> ]\n[ <点>, <平面> ]\n[ <直線>, <直線> ]\n[ <点>, <向き>, <向き> ]\n[ <点>, <直線>, <Context> ]
OrthogonalPlane=PerpendicularPlane
OrthogonalPlane.Syntax=[ <点>, <直線> ]\n[ <点>, <ベクトル> ]
OrthogonalVector=PerpendicularVector
OrthogonalVector.Syntax=[ <直線> ]\n[ <線分> ]\n[ <ベクトル> ]
OrthogonalVector.Syntax3D=[ <直線> ]\n[ <線分> ]\n[ <ベクトル> ]\n[ <平面> ]
OrthogonalVector.SyntaxCAS=[ <ベクトル> ]
OsculatingCircle=OsculatingCircle
OsculatingCircle.Syntax=[ <点>, <オブジェクト> ]
PMCC=CorrelationCoefficient
PMCC.Syntax=[ <点のリスト> ]\n[ <x座標のリスト>, <y座標のリスト> ]
Pan=Pan
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola=Parabola
Parabola.Syntax=[ <点>, <直線> ]
Parameter=Parameter
Parameter.Syntax=[ <２次曲線> ]
ParametricDerivative=ParametricDerivative
ParametricDerivative.Syntax=[ <曲線> ]
ParseToFunction=ParseToFunction
ParseToFunction.Syntax=[ <関数>, <文字列> ]
ParseToNumber=ParseToNumber
ParseToNumber.Syntax=[ <数値>, <文字列> ]
PartialFractions=PartialFractions
PartialFractions.Syntax=[ <関数> ]
PartialFractions.SyntaxCAS=[ <関数> ]\n[ <関数>, <変数> ]
Pascal=Pascal
Pascal.Syntax=[ <成功の数>, <成功の確率> ]\n[ <成功の数>, <成功の確率>, <ブール累積> ]\n[ <成功の数>, <成功の確率>, <変数値>, <ブール累積> ]
Pascal.SyntaxCAS=[ <成功の数>, <成功の確率>, <変数値>, <ブール累積> ]
PathParameter=PathParameter
PathParameter.Syntax=[ <パス上の点> ]
Payment=Payment
Payment.Syntax=[ <レート>, <期間の数>, <現在の値>, <将来の値 (optional)>, <型(optional)> ]
Percentile=Percentile
Percentile.Syntax=[ <数値のリスト>, <パーセント> ]
Perimeter=Perimeter
Perimeter.Syntax=[ <多角形> ]\n[ <２次曲線> ]\n[ <軌跡> ]
Periods=Periods
Periods.Syntax=[ <レート>, <支払>, <現在の値>, <将来の値 (optional)>, <型(optional)> ]
PieChart=PieChart
PieChart.Syntax=[ <度数のリスト> ]\n[ <度数のリスト>, <中心>, <半径> ]
Plane=Plane
Plane.Syntax=[ <多角形> ]\n[ <２次曲線> ]\n[ <点>, <平面> ]\n[ <点>, <直線> ]\n[ <直線>, <直線> ]\n[ <点>, <点>, <点> ]\n[ <点>, <ベクトル>, <ベクトル> ]
PlaneBisector=PlaneBisector
PlaneBisector.Syntax=[ <線分> ]\n[ <点>, <点> ]
PlaySound=PlaySound
PlaySound.Syntax=[ <ファイル> ]\n[ <Boolean Play> ]\n[ <関数>, <最小値>, <最大値> ]\n[ <関数>, <最小値>, <最大値>, <サンプルレート>, <サンプル深度> ]
PlotSolve=PlotSolve
PlotSolve.Syntax=[ <xの方程式> ]
Point=Point
Point.Syntax=[ <オブジェクト> ]\n[ <オブジェクト>, <引数> ]\n[ <点>, <ベクトル> ]\n[ <リスト> ]
PointIn=PointIn
PointIn.Syntax=[ <領域> ]
PointList=PointList
PointList.Syntax=[ <リスト> ]
Poisson=Poisson
Poisson.Syntax=[ <平均> ]\n[ <平均>, <ブール累積> ]\n[ <平均>, <変数値>, <ブール累積> ]
Poisson.SyntaxCAS=[ <平均>, <変数値>, <ブール累積> ]
Polar=Polar
Polar.Syntax=[ <点>, <２次曲線> ]\n[ <直線>, <２次曲線> ]
PolyLine=PolyLine
PolyLine.Syntax=[ <点のリスト> ]\n[ <点>, ..., <点> ]
Polygon=Polygon
Polygon.Syntax=[ <点のリスト> ]\n[ <点>, ..., <点> ]\n[ <点>, <点>, <頂点の数> ]
Polygon.Syntax3D=[ <点のリスト> ]\n[ <点>, ..., <点> ]\n[ <点>, <点>, <頂点の数> ]\n[ <点>, <点>, <頂点の数>, <向き> ]
Polyhedron.Syntax=[ <点>, <点>, ... ]
Polynomial=Polynomial
Polynomial.Syntax=[ <関数> ]\n[ <点のリスト> ]
Polynomial.SyntaxCAS=[ <関数> ]\n[ <関数>, <変数> ]
PresentValue=PresentValue
PresentValue.Syntax=[ <レート>, <期間の数>, <支払>, <将来の値 (optional)>, <型(optional)> ]
PreviousPrime=PreviousPrime
PreviousPrime.Syntax=[ <数値> ]
PrimeFactors=PrimeFactors
PrimeFactors.Syntax=[ <数値> ]
Prism=Prism
Prism.Syntax=[ <多角形>, <点> ]\n[ <多角形>, <高さ> ]\n[ <点>, <点>, ... ]
Product=Product
Product.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <要素の数> ]\n[ <数値のリスト>, <度数のリスト> ]\n[ <式>, <変数>, <開始値>, <終了値> ]
Product.SyntaxCAS=[ <式のリスト> ]\n[ <式>, <変数>, <Start Index>, <終了インデックス> ]
Prove=Prove
Prove.Syntax=[ <論理式> ]
ProveDetails=ProveDetails
ProveDetails.Syntax=[ <論理式> ]
Pyramid=Pyramid
Pyramid.Syntax=[ <多角形>, <点> ]\n[ <多角形>, <高さ> ]\n[ <点>, <点>, <点>, <点>, ... ]
Q1=Quartile1
Q1.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
Q3=Quartile3
Q3.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
QuadricSide=Side
QuadricSide.Syntax=[ <２次曲面> ]
RSquare=RSquare
RSquare.Syntax=[ <点のリスト>, <関数> ]
Radius=Radius
Radius.Syntax=[ <２次曲線> ]
Random=RandomBetween
Random.Syntax=[ <最小の整数>, <最大の整数> ]\n[ <最小の整数>, <最大の整数>, <Boolean Fixed> ]
Random.SyntaxCAS=[ <最小の整数>, <最大の整数> ]
RandomBinomial=RandomBinomial
RandomBinomial.Syntax=[ <試行回数>, <確率> ]
RandomDiscrete=RandomDiscrete
RandomDiscrete.Syntax=[ <リスト>, <リスト> ]
RandomElement=RandomElement
RandomElement.Syntax=[ <リスト> ]
RandomNormal=RandomNormal
RandomNormal.Syntax=[ <平均>, <標準偏差> ]
RandomPointIn=RandomPointIn
RandomPointIn.Syntax=[ <領域> ]\n[ <点のリスト> ]\n[ <x最小>, <x最大>, <y最小>, <y最大> ]
RandomPoisson=RandomPoisson
RandomPoisson.Syntax=[ <平均> ]
RandomPolynomial=RandomPolynomial
RandomPolynomial.Syntax=[ <次数>, <係数の最小値>, <係数の最大値> ]
RandomPolynomial.SyntaxCAS=[ <次数>, <係数の最小値>, <係数の最大値> ]\n[ <変数>, <次数>, <係数の最小値>, <係数の最大値> ]
RandomUniform=RandomUniform
RandomUniform.Syntax=[ <最小>, <最大> ]\n[ <最小>, <最大>, <標本数> ]
Rate=Rate
Rate.Syntax=[ <期間の数>, <支払>, <現在の値>, <将来の値 (optional)>, <型(optional)>, <Guess (optional)> ]
Rationalize=Rationalize
Rationalize.SyntaxCAS=[ <数値> ]
Ray=Ray
Ray.Syntax=[ <開始点>, <点> ]\n[ <開始点>, <方向ベクトル> ]
ReadText=ReadText
ReadText.Syntax=[ <テキスト> ]
RectangleSum=RectangleSum
RectangleSum.Syntax=[ <関数>, <x開始値>, <x終了値>, <長方形の数>, <長方形の開始位置t> ]
ReducedRowEchelonForm=ReducedRowEchelonForm
ReducedRowEchelonForm.Syntax=[ <行列> ]
Relation=Relation
Relation.Syntax=[ <リスト> ]\n[ <オブジェクト>, <オブジェクト> ]
RemovableDiscontinuity=RemovableDiscontinuity
RemovableDiscontinuity.Syntax=[ <関数> ]
Remove=Remove
Remove.Syntax=[ <リスト>, <リスト> ]
RemoveUndefined=RemoveUndefined
RemoveUndefined.Syntax=[ <リスト> ]
Rename=Rename
Rename.Syntax=[ <オブジェクト>, <名前> ]
Repeat=Repeat
Repeat.Syntax=[ <数値>, <命令>, <命令>, ... ]
ReplaceAll=ReplaceAll
ReplaceAll.Syntax=[ <テキスト>, <一致するテキスト>, <置換するテキスト> ]
ResidualPlot=ResidualPlot
ResidualPlot.Syntax=[ <点のリスト>, <関数> ]
Reverse=Reverse
Reverse.Syntax=[ <リスト> ]
RightSide=RightSide
RightSide.Syntax=[ <方程式> ]
RightSide.SyntaxCAS=[ <方程式> ]\n[ <方程式のリスト> ]\n[ <方程式のリスト>, <インデックス> ]
RigidPolygon=RigidPolygon
RigidPolygon.Syntax=[ <多角形> ]\n[ <多角形>, <xオフセット>, <yオフセット> ]\n[ <自由点>, ..., <自由点> ]
Root=Root
Root.Syntax=[ <多項式> ]\n[ <関数>, <xの初期値> ]\n[ <関数>, <x開始値>, <x終了値> ]
Root.SyntaxCAS=[ <多項式> ]
RootList=RootList
RootList.Syntax=[ <リスト> ]
RootMeanSquare=RootMeanSquare
RootMeanSquare.Syntax=[ <数値のリスト> ]
Roots=Roots
Roots.Syntax=[ <関数>, <x開始値>, <x終了値> ]
Rotate=Rotate
Rotate.Syntax=[ <オブジェクト>, <角度> ]\n[ <オブジェクト>, <角度>, <点> ]
Rotate.Syntax3D=[ <オブジェクト>, <角度> ]\n[ <オブジェクト>, <角度>, <点> ]\n[ <オブジェクト>, <角度>, <回転軸> ]\n[ <オブジェクト>, <角度>, <回転軸上の点>, <軸の方向または平面> ]
RotateText=RotateText
RotateText.Syntax=[ <テキスト>, <角度> ]
Row=Row
Row.Syntax=[ <表計算のセル> ]
RunClickScript=RunClickScript
RunClickScript.Syntax=[ <オブジェクト> ]
RunUpdateScript=RunUpdateScript
RunUpdateScript.Syntax=[ <オブジェクト> ]
SD=SD
SD.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
SDX=SDX
SDX.Syntax=[ <点のリスト> ]
SDY=SDY
SDY.Syntax=[ <点のリスト> ]
SVD=SVD
SVD.Syntax=[ <行列> ]
SXX=Sxx
SXX.Syntax=[ <数値のリスト> ]\n[ <点のリスト> ]
SXY=Sxy
SXY.Syntax=[ <点のリスト> ]\n[ <数値のリスト>, <数値のリスト> ]
SYY=Syy
SYY.Syntax=[ <点のリスト> ]
Sample=Sample
Sample.Syntax=[ <リスト>, <サイズ> ]\n[ <リスト>, <サイズ>, <重複を許す> ]
SampleSD=SampleSD
SampleSD.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
SampleSD.SyntaxCAS=[ <数値のリスト> ]
SampleSDX=SampleSDX
SampleSDX.Syntax=[ <点のリスト> ]
SampleSDY=SampleSDY
SampleSDY.Syntax=[ <点のリスト> ]
SampleVariance=SampleVariance
SampleVariance.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
SampleVariance.SyntaxCAS=[ <数値のリスト> ]
ScientificText=ScientificText
ScientificText.Syntax=[ <数値> ]\n[ <数値>, <精度> ]
SecondAxis=MinorAxis
SecondAxis.Syntax=[ <２次曲線> ]
SecondAxisLength=SemiMinorAxisLength
SecondAxisLength.Syntax=[ <２次曲線> ]
Sector=Sector
Sector.Syntax=[ <２次曲線>, <点>, <点> ]\n[ <２次曲線>, <媒介変数の値>, <媒介変数の値> ]
Segment=Segment
Segment.Syntax=[ <点>, <点> ]\n[ <点>, <数値> ]
SelectObjects=SelectObjects
SelectObjects.Syntax=[ ]\n[ <オブジェクト>, <オブジェクト>, ... ]
SelectedElement=SelectedElement
SelectedElement.Syntax=[ <リスト> ]
SelectedIndex=SelectedIndex
SelectedIndex.Syntax=[ <リスト> ]
Semicircle=Semicircle
Semicircle.Syntax=[ <点>, <点> ]
Sequence=Sequence
Sequence.Syntax=[ <終了値> ]\n[ <開始値>, <終了値> ]\n[ <開始値>, <終了値>, <増分> ]\n[ <式>, <変数>, <開始値>, <終了値> ]\n[ <式>, <変数>, <開始値>, <終了値>, <増分> ]
SetActiveView=SetActiveView
SetActiveView.Syntax=[ <ビュー> ]\n[ <平面> ]
SetAxesRatio=SetAxesRatio
SetAxesRatio.Syntax=[ <数値>, <数値> ]
SetAxesRatio.Syntax3D=[ <数値>, <数値> ]\n[ <数値>, <数値>, <数値> ]
SetBackgroundColor=SetBackgroundColor
SetBackgroundColor.Syntax=[ <色> ]\n[ <オブジェクト>, <色> ]\n[ <赤>, <緑>, <青> ]\n[ <オブジェクト>, <赤>, <緑>, <青> ]
SetCaption=SetCaption
SetCaption.Syntax=[ <オブジェクト>, <テキスト> ]
SetColor=SetColor
SetColor.Syntax=[ <オブジェクト>, <色> ]\n[ <オブジェクト>, <赤>, <緑>, <青> ]
SetConditionToShowObject=SetConditionToShowObject
SetConditionToShowObject.Syntax=[ <オブジェクト>, <条件> ]
SetConstructionStep=SetConstructionStep
SetConstructionStep.Syntax=[ <数値> ]
SetCoords=SetCoords
SetCoords.Syntax=[ <オブジェクト>, <x>, <y> ]\n[ <オブジェクト>, <x>, <y>, <z> ]
SetDecoration=SetDecoration
SetDecoration.Syntax=[ <オブジェクト>, <数値> ]
SetDynamicColor=SetDynamicColor
SetDynamicColor.Syntax=[ <オブジェクト>, <赤>, <緑>, <青> ]\n[ <オブジェクト>, <赤>, <緑>, <青>, <透過率> ]
SetFilling=SetFilling
SetFilling.Syntax=[ <オブジェクト>, <数値> ]
SetFixed=SetFixed
SetFixed.Syntax=[ <オブジェクト>, <true | false> ]\n[ <オブジェクト>, <true | false>, <true | false> ]
SetLabelMode=SetLabelMode
SetLabelMode.Syntax=[ <オブジェクト>, <数値> ]
SetLayer=SetLayer
SetLayer.Syntax=[ <オブジェクト>, <Layer> ]
SetLevelOfDetail=SetLevelOfDetail
SetLevelOfDetail.Syntax=[ <曲面>, <詳細度> ]
SetLineStyle=SetLineStyle
SetLineStyle.Syntax=[ <直線>, <数値> ]
SetLineThickness=SetLineThickness
SetLineThickness.Syntax=[ <直線>, <数値> ]
SetPerspective=SetPerspective
SetPerspective.Syntax=[ <テキスト> ]
SetPointSize=SetPointSize
SetPointSize.Syntax=[ <オブジェクト>, <数値> ]
SetPointStyle=SetPointStyle
SetPointStyle.Syntax=[ <点>, <数値> ]
SetSeed=SetSeed
SetSeed.Syntax=[ <整数> ]
SetSpinSpeed=SetSpinSpeed
SetSpinSpeed.Syntax=[ <数値> ]
SetTooltipMode=SetTooltipMode
SetTooltipMode.Syntax=[ <オブジェクト>, <数値> ]
SetTrace=SetTrace
SetTrace.Syntax=[ <オブジェクト>, <true | false> ]
SetValue=SetValue
SetValue.Syntax=[ <真偽値>, <0|1> ]\n[ <オブジェクト>, <オブジェクト> ]\n[ <リスト>, <数値>, <オブジェクト> ]
SetViewDirection=SetViewDirection
SetViewDirection.Syntax=[ ]\n[ <向き> ]\n[ <向き>, <Boolean animate> ]
SetVisibleInView=SetVisibleInView
SetVisibleInView.Syntax=[ <オブジェクト>, <View Number 1|2>, <真偽値> ]
Shear=Shear
Shear.Syntax=[ <オブジェクト>, <直線>, <比率> ]
ShortestDistance=ShortestDistance
ShortestDistance.Syntax=[ <線分のリスト>, <開始点>, <終了点>, <Boolean Weighted> ]
ShowAxes=ShowAxes
ShowAxes.Syntax=[]\n[ <真偽値> ]\n[ <ビュー>, <真偽値> ]
ShowGrid=ShowGrid
ShowGrid.Syntax=[]\n[ <真偽値> ]\n[ <ビュー>, <真偽値> ]
ShowLabel=ShowLabel
ShowLabel.Syntax=[ <オブジェクト>, <真偽値> ]
ShowLayer=ShowLayer
ShowLayer.Syntax=[ <数値> ]
Shuffle=Shuffle
Shuffle.Syntax=[ <リスト> ]
SigmaXX=SigmaXX
SigmaXX.Syntax=[ <点のリスト> ]\n[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
SigmaXY=SigmaXY
SigmaXY.Syntax=[ <点のリスト> ]\n[ <x座標のリスト>, <y座標のリスト> ]
SigmaYY=SigmaYY
SigmaYY.Syntax=[ <点のリスト> ]
Simplify=Simplify
Simplify.Syntax=[ <関数> ]\n[ <テキスト> ]
Simplify.SyntaxCAS=[ <関数> ]
Slider=Slider
Slider.Syntax=[ <最小>, <最大>, <増分>, <速度>, <幅>, <角度か>, <水平>, <アニメーション>, <ランダム> ]
Slope=Slope
Slope.Syntax=[ <直線> ]
SlopeField=SlopeField
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <数値> ]\n[ <f(x, y)>, <数値>, <Length Multiplier a> ]\n[ <f(x, y)>, <数値>, <Length Multiplier a>, <x最小>, <y最小>, <x最大>, <y最大> ]
SlowPlot=SlowPlot
SlowPlot.Syntax=[ <関数> ]\n[ <関数>, <論理 反復> ]
Solutions=Solutions
Solutions.Syntax=[ <方程式> ]
Solutions.SyntaxCAS=[ <方程式> ]\n[ <方程式>, <変数> ]\n[ <方程式のリスト>, <変数のリスト> ]
Solve=Solve
Solve.Syntax=[ <方程式> ]
Solve.SyntaxCAS=[ <xの方程式> ]\n[ <方程式>, <変数> ]\n[ <方程式のリスト>, <変数のリスト> ]\n[ <​媒介変数方程式のリスト>, <変数のリスト> ]\n[ <方程式>, <変数>, <仮定のリスト> ]
SolveCubic=SolveCubic
SolveCubic.SyntaxCAS=[ <３次多項式> ]
SolveODE=SolveODE
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <f上の点> ]\n[ <f'(x, y)>, <x開始値>, <y開始値>, <x終了値>, <間隔> ]\n[ <y'>, <x'>, <x開始値>, <y開始値>, <t終了値>, <間隔> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x開始値>, <y開始値>, <y'開始値>, <x終了値>, <間隔> ]
SolveODE.SyntaxCAS=[ <方程式> ]\n[ <方程式>, <f上の点（のリスト）> ]\n[ <方程式>, <f上の点（のリスト）>, <f'上の点（のリスト）> ]\n[ <方程式>, <従属変数>, <独立変数>, <f上の点（のリスト）> ] \n[ <方程式>, <従属変数>, <独立変数>, <f上の点（のリスト）>, <f'上の点（のリスト）> ]
SolveQuartic=SolveQuartic
SolveQuartic.SyntaxCAS=[ <４次多項式> ]
Sort=Sort
Sort.Syntax=[ <リスト> ]\n[ <値>, <キー> ]
Spearman=Spearman
Spearman.Syntax=[ <点のリスト> ]\n[ <数値のリスト>, <数値のリスト> ]
Sphere=Sphere
Sphere.Syntax=[ <点>, <半径> ]\n[ <点>, <点> ]
Spline=Spline
Spline.Syntax=[ <点のリスト> ]\n[ <点のリスト>, <次数 ≥ 3> ]\n[ <点のリスト>, <次数 ≥ 3>, <重み関数> ]
Split=Split
Split.Syntax=[ <テキスト>, <分割するテキストのリスト> ]
StartAnimation=StartAnimation
StartAnimation.Syntax=[ ]\n[ <真偽値> ]\n[ <スライダーまたは点>, <スライダーまたは点>, ... ]\n[ <スライダーまたは点>, <スライダーまたは点>, ..., <真偽値> ]
StartRecord=StartRecord
StartRecord.Syntax=[ ]\n[ <真偽値> ]
StemPlot=StemPlot
StemPlot.Syntax=[ <リスト> ]\n[ <リスト>, <Adjustment -1|0|1> ]
StepGraph=StepGraph
StepGraph.Syntax=[ <点のリスト> ]\n[ <点のリスト>, <論理結合> ]\n[ <x座標のリスト>, <y座標のリスト> ]\n[ <点のリスト>, <論理結合>, <Point style> ]\n[ <x座標のリスト>, <y座標のリスト>, <論理結合> ]\n[ <x座標のリスト>, <y座標のリスト>, <論理結合>, <Point style> ]
StickGraph=StickGraph
StickGraph.Syntax=[ <点のリスト> ]\n[ <点のリスト>, <Boolean Horizontal> ]\n[ <x座標のリスト>, <y座標のリスト> ]\n[ <x座標のリスト>, <y座標のリスト>, <Boolean Horizontal> ]
Stretch=Stretch
Stretch.Syntax=[ <オブジェクト>, <ベクトル> ]\n[ <オブジェクト>, <直線>, <比率> ]
Substitute=Substitute
Substitute.SyntaxCAS=[ <式>, <代入リスト> ]\n[ <式>, <変数>, <代入する値> ]
Sum=Sum
Sum.Syntax=[ <リスト> ]\n[ <リスト>, <要素の数> ]\n[ <リスト>, <度数のリスト> ]\n[ <式>, <変数>, <開始値>, <終了値> ]
Sum.SyntaxCAS=[ <リスト> ]\n[ <式>, <変数>, <開始値>, <終了値> ]
SumSquaredErrors=SumSquaredErrors
SumSquaredErrors.Syntax=[ <点のリスト>, <関数> ]
SurdText=SurdText
SurdText.Syntax=[ <点> ]\n[ <数値> ]\n[ <数値>, <リスト> ]
Surface=Surface
Surface.Syntax=[ <関数>, <角度> ]\n[ <曲線>, <角度>, <直線> ]\n[ <式>, <式>, <式>, <媒介変数1>, <開始値>, <終了値>, <媒介変数2>, <開始値>, <終了値> ]
TDistribution=TDistribution
TDistribution.Syntax=[ <自由度>, <変数値> ]\n[ <自由度>, <変数値>, <ブール累積> ]\n[ <自由度>, x, <ブール累積> ]
TDistribution.SyntaxCAS=[ <自由度>, <変数値> ]
TMean2Estimate=TMean2Estimate
TMean2Estimate.Syntax=[ <標本データ1のリスト>, <標本データ2のリスト>, <レベル>, <Boolean Pooled> ]\n[ <標本平均1>, <標本標準偏差1>, <標本の大きさ1>, <標本平均2>, <標本標準偏差2>, <標本の大きさ2>, <レベル>, <Boolean Pooled> ]
TMeanEstimate=TMeanEstimate
TMeanEstimate.Syntax=[ <標本データのリスト>, <レベル> ]\n[ <標本平均>, <標本標準偏差>, <標本の大きさ>, <レベル> ]
TTest=TTest
TTest.Syntax=[ <標本データのリスト>, <仮説平均>, <裾> ]\n[ <標本平均>, <標本標準偏差>, <標本の大きさ>, <仮説平均>, <裾> ]
TTest2=TTest2
TTest2.Syntax=[ <標本データ1のリスト>, <標本データ2のリスト>, <裾>, <Boolean Pooled> ]\n[ <標本平均1>, <標本標準偏差1>, <標本の大きさ1>, <標本平均2>, <標本標準偏差2>, <標本の大きさ2>, <裾>, <Boolean Pooled> ]
TTestPaired=TTestPaired
TTestPaired.Syntax=[ <標本データ1のリスト>, <標本データ2のリスト>, <裾> ]
TableText=TableText
TableText.Syntax=[ <リスト>, <リスト>, ... ]\n[ <リスト>, <リスト>, ..., <テキストの揃え> ]
Take=Take
Take.Syntax=[ <リスト>, <開始位置>, <終了位置> ]\n[ <リスト>, <開始位置> ]\n[ <テキスト>, <開始位置>, <終了位置> ]\n[ <テキスト>, <開始位置> ]
Take.SyntaxCAS=[ <リスト>, <開始位置> ]\n[ <リスト>, <開始位置>, <終了位置> ]
Tangent=Tangent
Tangent.Syntax=[ <点>, <２次曲線> ]\n[ <点>, <関数> ]\n[ <曲線上の点>, <曲線> ]\n[ <xの値>, <関数> ]\n[ <直線>, <２次曲線> ]\n[ <２次曲線>, <２次曲線> ]
Tangent.SyntaxCAS=[ <数値>, <関数> ]\n[ <点>, <オブジェクト> ]
TaylorSeries=TaylorPolynomial
TaylorSeries.Syntax=[ <関数>, <xの値>, <次数> ]
TaylorSeries.SyntaxCAS=[ <式>, <xの値>, <次数> ]\n[ <式>, <変数>, <変数値>, <次数> ]
Tetrahedron=Tetrahedron
Tetrahedron.Syntax=[ <正三角形> ]\n[ <点>, <点>, <点> ]\n[ <点>, <点>, <向き> ]
Text=Text
Text.Syntax=[ <オブジェクト> ]\n[ <オブジェクト>, <変数代入のための真偽値> ]\n[ <オブジェクト>, <点> ]\n[ <オブジェクト>, <点>, <変数代入のための真偽値> ]\n[ <オブジェクト>, <点>, <変数代入のための真偽値>, <LaTeX式の論理値> ]\n[<オブジェクト>, <点>, <変数代入のための真偽値>, <LaTeX式の論理値>, <Horizontal alignment [-1|0|1]>]\n[<オブジェクト>, <点>, <変数代入のための真偽値>, <LaTeX式の論理値>, <Horizontal alignment [-1|0|1]>, <Vertical alignment [-1|0|1]>]
TextToUnicode=TextToUnicode
TextToUnicode.Syntax=[ <テキスト> ]
Textfield=InputBox
Textfield.Syntax=[ <リンクされたオブジェクト> ]
TiedRank=TiedRank
TiedRank.Syntax=[ <リスト> ]
ToBase=ToBase
ToBase.Syntax=[ <数値>, <進法の底> ]
ToComplex=ToComplex
ToComplex.Syntax=[ <ベクトル> ]
ToExponential=ToExponential
ToExponential.SyntaxCAS=[ <複素数> ]
ToPoint=ToPoint
ToPoint.Syntax=[ <複素数> ]
ToPolar=ToPolar
ToPolar.Syntax=[ <複素数> ]\n[ <ベクトル> ]
ToolImage=ToolImage
ToolImage.Syntax=[ <数値> ]\n[ <数値>, <点> ]\n[ <数値>, <点>, <点> ]
Top=Top
Top.Syntax=[ <２次曲面> ]
Translate=Translate
Translate.Syntax=[ <オブジェクト>, <ベクトル> ]\n[ <ベクトル>, <開始点> ]
Transpose=Transpose
Transpose.Syntax=[ <行列> ]
TrapezoidalSum=TrapezoidalSum
TrapezoidalSum.Syntax=[ <関数>, <x開始値>, <x終了値>, <台形の数> ]
TravelingSalesman=TravelingSalesman
TravelingSalesman.Syntax=[ <点のリスト> ]
TriangleCenter=TriangleCenter
TriangleCenter.Syntax=[ <点>, <点>, <点>, <数値> ]
TriangleCurve=TriangleCurve
TriangleCurve.Syntax=[ <点>, <点>, <点>, <方程式> ]
Triangular=Triangular
Triangular.Syntax=[ <下限>, <上限>, <モード>, <変数値> ]\n[ <下限>, <上限>, <モード>, <変数値>, <ブール累積> ]\n[ <下限>, <上限>, <モード>, x, <ブール累積> ]
TrigCombine=TrigCombine
TrigCombine.Syntax=[ <式> ]\n[ <式>, <Target Function> ]
TrigExpand=TrigExpand
TrigExpand.Syntax=[ <式> ]\n[ <式>, <Target Function> ]
TrigExpand.SyntaxCAS=[ <式> ]\n[ <式>, <Target Function> ]\n[ <式>, <Target Function>, <Target Variable> ]\n[ <式>, <Target Function>, <Target Variable>, <Target Variable> ]
TrigSimplify=TrigSimplify
TrigSimplify.Syntax=[ <式> ]
Trilinear=Trilinear
Trilinear.Syntax=[ <点>, <点>, <点>, <数値>, <数値>, <数値> ]
TurningPoint=InflectionPoint
TurningPoint.Syntax=[ <多項式> ]
Turtle=Turtle
Turtle.Syntax=[]
TurtleBack=TurtleBack
TurtleBack.Syntax=[ <タートル>, <距離> ]
TurtleDown=TurtleDown
TurtleDown.Syntax=[ <タートル> ]
TurtleForward=TurtleForward
TurtleForward.Syntax=[ <タートル>, <距離> ]
TurtleLeft=TurtleLeft
TurtleLeft.Syntax=[ <タートル>, <角度> ]
TurtleRight=TurtleRight
TurtleRight.Syntax=[ <タートル>, <角度> ]
TurtleUp=TurtleUp
TurtleUp.Syntax=[ <タートル> ]
UnicodeToLetter=UnicodeToLetter
UnicodeToLetter.Syntax=[ <整数> ]
UnicodeToText=UnicodeToText
UnicodeToText.Syntax=[ <整数のリスト> ]
Uniform=Uniform
Uniform.Syntax=[ <下限>, <上限>, <変数値> ]\n[ <下限>, <上限>, <変数値>, <ブール累積> ]\n[ <下限>, <上限>, x, <ブール累積> ]
Union=Union
Union.Syntax=[ <リスト>, <リスト> ]\n[ <多角形>, <多角形> ]
Unique=Unique
Unique.Syntax=[ <リスト> ]
UnitOrthogonalVector=UnitPerpendicularVector
UnitOrthogonalVector.Syntax=[ <直線> ]\n[ <線分> ]\n[ <ベクトル> ]
UnitOrthogonalVector.Syntax3D=[ <直線> ]\n[ <線分> ]\n[ <ベクトル> ]\n[ <平面> ]
UnitOrthogonalVector.SyntaxCAS=[ <ベクトル> ]
UnitVector=UnitVector
UnitVector.Syntax=[ <オブジェクト> ]
UnitVector.SyntaxCAS=[ <ベクトル> ]
UpdateConstruction=UpdateConstruction
UpdateConstruction.Syntax=[ ]\n[ <回数> ]
UpperSum=UpperSum
UpperSum.Syntax=[ <関数>, <x開始値>, <x終了値>, <長方形の数> ]
Variance=Variance
Variance.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
Variance.SyntaxCAS=[ <数値のリスト> ]
Vector=Vector
Vector.Syntax=[ <点> ]\n[ <開始点>, <終了点> ]
Vertex=Vertex
Vertex.Syntax=[ <２次曲線> ]\n[ <不等式> ]\n[ <多角形> ]\n[ <多角形>, <インデックス> ]\n[ <線分>, <インデックス> ]
VerticalText=VerticalText
VerticalText.Syntax=[ <テキスト> ]\n[ <テキスト>, <点> ]
Volume=Volume
Volume.Syntax=[ <立体> ]
Voronoi=Voronoi
Voronoi.Syntax=[ <点のリスト> ]
Weibull=Weibull
Weibull.Syntax=[ <シェイプ>, <スケール>, <変数値> ]\n[ <シェイプ>, <スケール>, <変数値>, <ブール累積> ]\n[ <シェイプ>, <スケール>, x, <ブール累積> ]
Weibull.SyntaxCAS=[ <シェイプ>, <スケール>, <変数値> ]
ZMean2Estimate=ZMean2Estimate
ZMean2Estimate.Syntax=[ <標本データ1のリスト>, <標本データ2のリスト>, <σ1>, <σ2>, <レベル> ]\n[ <標本平均1>, <σ1>, <標本の大きさ1>, <標本平均2>, <σ2>, <標本の大きさ2>, <レベル> ]
ZMean2Test=ZMean2Test
ZMean2Test.Syntax=[ <標本データ1のリスト>, <σ1>, <標本データ2のリスト>, <σ2>, <裾> ]\n[ <標本平均1>, <σ1>, <標本の大きさ1>, <標本平均2>, <σ2>, <標本の大きさ2>, <裾> ]
ZMeanEstimate=ZMeanEstimate
ZMeanEstimate.Syntax=[ <標本データのリスト>, <σ>, <レベル> ]\n[ <標本平均>, <σ>, <標本の大きさ>, <レベル> ]
ZMeanTest=ZMeanTest
ZMeanTest.Syntax=[ <標本データのリスト>, <σ>, <仮説平均>, <裾> ]\n[ <標本平均>, <σ>, <標本の大きさ>, <仮説平均>, <裾> ]
ZProportion2Estimate=ZProportion2Estimate
ZProportion2Estimate.Syntax=[ <標本比率1>, <標本の大きさ1>, <標本比率2>, <標本の大きさ2>, <レベル> ]
ZProportion2Test=ZProportion2Test
ZProportion2Test.Syntax=[ <標本比率1>, <標本の大きさ1>, <標本比率2>, <標本の大きさ2>, <裾> ]
ZProportionEstimate=ZProportionEstimate
ZProportionEstimate.Syntax=[ <Sample Proportion>, <標本の大きさ>, <レベル> ]
ZProportionTest=ZProportionTest
ZProportionTest.Syntax=[ <Sample Proportion>, <標本の大きさ>, <仮説比率>, <裾> ]
Zip=Zip
Zip.Syntax=[ <式>, <Var1>, <List1>, <Var2>, <List2>, ... ]
Zipf=Zipf
Zipf.Syntax=[ <要素の数>, <指数> ]\n[ <要素の数>, <指数>, <ブール累積> ]\n[ <要素の数>, <指数>, <変数値>, <ブール累積> ]
Zipf.SyntaxCAS=[ <要素の数>, <指数>, <変数値>, <ブール累積> ]
ZoomIn=ZoomIn
ZoomIn.Syntax=[ ]\n[ <倍率> ]\n[ <倍率>, <中心点> ]\n[ <x最小>, <y最小>, <x最大>, <y最大> ]\n[ <x最小>, <y最小>, <最小 z>, <x最大>, <y最大>, <最大 z> ]
ZoomOut=ZoomOut
ZoomOut.Syntax=[ <倍率> ]\n[ <倍率>, <中心点> ]
mad=mad
mad.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
mean=mean
mean.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
mean.SyntaxCAS=[ <数値のリスト> ]
nCr=nCr
nCr.Syntax=[ <数値>, <数値> ]
nPr.Syntax=[ <数値>, <数値> ]
stdev=stdev
stdev.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
stdevp=stdevp
stdevp.Syntax=[ <生データのリスト> ]\n[ <数値のリスト>, <度数のリスト> ]
stdevp.SyntaxCAS=[ <数値のリスト> ]