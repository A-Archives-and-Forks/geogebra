# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <Lista>, <Lista>, ... ]
AffineRatio=Raz??nSimple
AffineRatio.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]
Angle=??ngulo
Angle.Syntax=[ <Obxecto> ]\n[ <Vector inicial>, <Vector inicial> ]\n[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]\n[ <Punto inicial>, <V??rtice>, <Punto inicial> ]\n[ <Punto inicial>, <V??rtice>, <??ngulo antihorario> ]
Angle.Syntax3D=[ <Obxecto> ]\n[ <Vector inicial>, <Vector inicial> ]\n[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]\n[ <Lado (recta | semirecta | segmento)>, <Plano> ]\n[ <Plano>, <Plano> ]\n[ <Punto inicial>, <V??rtice>, <Punto inicial> ]\n[ <Punto inicial>, <V??rtice>, <??ngulo antihorario> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <Direction> ]
AngularBisector=Bisectriz
AngularBisector.Syntax=[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]
Append=Engade
Append.Syntax=[ <Lista>, <Obxecto> ]\n[ <Obxecto>, <Lista> ]
ApplyMatrix=AplicaMatriz
ApplyMatrix.Syntax=[ <Matriz>, <Obxecto> ]
Arc=Arco
Arc.Syntax=[ <Circunferencia>, <Punto inicial>, <Punto inicial> ]\n[ <Elipse>, <Punto inicial>, <Punto inicial> ]\n[ <Circunferencia>, <Valor par??metro>, <Valor par??metro> ]\n[ <Elipse>, <Valor par??metro>, <Valor par??metro> ]
AreCollinear=SonColineais
AreCollinear.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]
AreConcurrent=SonConcorrentes
AreConcurrent.Syntax=[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]
AreConcyclic=SonConc??clicos
AreConcyclic.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <Punto inicial> ]
AreCongruent=SonCongruentes
AreCongruent.Syntax=[ <Obxecto>, <Obxecto> ]
AreEqual=SonIguais
AreEqual.Syntax=[ <Obxecto>, <Obxecto> ]
AreParallel=SonParalelas
AreParallel.Syntax=[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]
ArePerpendicular=SonPerpendiculares
ArePerpendicular.Syntax=[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]
Area=??rea
Area.Syntax=[ <C??nica> ]\n[ <Pol??gono> ]\n[ <Punto inicial>, ..., <Punto inicial> ]
Assume=Asume
Assume.SyntaxCAS=[ <Condici??n>, <Expresi??n> ]
Asymptote=As??ntota
Asymptote.Syntax=[ <Obxecto> ]
AttachCopyToView=EnganchaCopiaAVista
AttachCopyToView.Syntax=[ <Obxecto>, <Vista 0|1|2> ]\n[ <Obxecto>, <Vista 0|1|2>, <Punto 1>, <Punto 2>, <Punto Pantalla 1>, <Punto Pantalla 2> ]
Axes=Eixes
Axes.Syntax=[ <C??nica> ]
Axes.Syntax3D=[ <C??nica> ]\n[ <Cu??drica> ]
AxisStepX=PasoEixeX
AxisStepX.Syntax=[ ]
AxisStepY=PasoEixeY
AxisStepY.Syntax=[ ]
BarChart=Gr??ficoBarras
BarChart.Syntax=[ <Lista datos>, <Lista frecuencias> ]\n[ <Lista datos en bruto>, <Ancho barras>, <Factor de escala vertical (opcional)> ]\n[ <Lista datos>, <Lista frecuencias>, <Ancho barras> ]\n[ <Valor inicial>, <Valor final>, <Lista alturas> ]\n[ <Valor inicial>, <Valor final>, <Expresi??n>, <Variable>, <Dende n??mero>, <Ata n??mero> ]\n[ <Valor inicial>, <Valor final>, <Expresi??n>, <Variable>, <Dende n??mero>, <Ata n??mero>, <Incremento> ]
Barycenter=Baricentro
Barycenter.Syntax=[ <Lista de puntos>, <Lista de masas dos puntos> ]
Bernoulli=Distribuci??nBernouilli
Bernoulli.Syntax=[ <Probabilidade>, <Acumula (Booleana)> ]
BetaDist.Syntax=[ <Alfa>, <Beta>, <Valor da variable> ]\n[ <Alfa>, <Beta>, <Valor da variable>, <Acumula (Booleana)>  ]\n[ <Alfa>, <Beta>, x, <Acumula (Booleana)> ]
Binomial=N??meroCombinatorio
Binomial.Syntax=[ <N??mero n>, <N??mero k> ]
BinomialDist=Distribuci??nBinomial
BinomialDist.Syntax=[ <N??mero de ensaios>, <Probabilidade de ??xito> ]\n[ <N??mero de ensaios>, <Probabilidade de ??xito>, <Acumula (Booleana)> ]\n[ <N??mero de ensaios>, <Probabilidade de ??xito>, <Lista de valores> ]\n[ <N??mero de ensaios>, <Probabilidade de ??xito>, <Valor da variable>, <Acumula (Booleana)> ]
BinomialDist.SyntaxCAS=[ <N??mero de ensaios>, <Probabilidade de ??xito>, <Valor da variable>, <Acumula (Booleana)> ]
Bottom=Fondo
Bottom.Syntax=[ <Cu??drica> ]
BoxPlot=DiagramaCaixa
BoxPlot.Syntax=[ <Ordenada>, <Semialtura>, <Lista datos en bruto> ]\n[ <Ordenada>, <Semialtura>, <Lista datos en bruto>, <Booleana at??picos> ]\n[ <Ordenada>, <Semialtura>, <Lista datos>, <Lista frecuencias>, <Booleana at??picos> ]\n[ <Ordenada>, <Semialtura>, <Valor inicial>, <Q1>, <Mediana>, <Q3>, <Valor final> ]
Button=Bot??n
Button.Syntax=[ ]\n[ <T??tulo> ]
CASLoaded.Syntax=[]
CFactor=FactorizaC
CFactor.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Variable> ]
CIFactor=FactorC
CIFactor.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Variable> ]
CSolutions=Soluci??nsC
CSolutions.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de ecuaci??ns>, <Lista de variables> ]
CSolve=ResolveC
CSolve.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de ecuaci??ns>, <Lista de variables> ]
Cauchy=Distribuci??nCauchy
Cauchy.Syntax=[ <Mediana>, <Escala>, <Valor da variable> ]\n[ <Mediana>, <Escala>, <Valor da variable>, <Acumula (Booleana)>  ]\n[ <Mediana>, <Escala>, x, <Acumula (Booleana)> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor da variable> ]
Cell=Cela
Cell.Syntax=[ <Columna>, <Fila> ]
CellRange=RangoCela
CellRange.Syntax=[ <Cela Inicial>, <Cela Final> ]
Center=Centro
Center.Syntax=[ <C??nica> ]
Center.Syntax3D=[ <C??nica> ]\n[ <Cu??drica> ]
CenterView=CentrarVista
CenterView.Syntax=[ <Punto central> ]
Centroid=Centroide
Centroid.Syntax=[ <Pol??gono> ]
CharacteristicPolynomial=PolinomioCaracter??stico
CharacteristicPolynomial.Syntax=[ <Matriz> ]
Checkbox=CaixaControl
Checkbox.Syntax=[ ]\n[ <T??tulo> ]\n[ <Lista> ]\n[ <T??tulo>, <Lista> ]
ChiSquared=Distribuci??nChiCadrado
ChiSquared.Syntax=[ <Graos de liberdade>, <Valor da variable> ]\n[ <Graos de liberdade>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <Graos de liberdade>, x, <Acumula (Booleana)> ]
ChiSquared.SyntaxCAS=[ <Graos de liberdade>, <Variable> ]
ChiSquaredTest=TestChiCadrado
ChiSquaredTest.Syntax=[ <Matriz> ]\n[ <Lista>, <Lista> ]\n[ <Matriz>, <Matriz> ]
Circle=Circunferencia
Circle.Syntax=[ <Punto inicial>, <Raio (n??mero)> ]\n[ <Punto inicial>, <Raio (segmento)> ]\n[ <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]
Circle.Syntax3D=[ <Punto inicial>, <Raio (n??mero)> ]\n[ <Punto inicial>, <Raio (segmento)> ]\n[ <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <Lado (recta | semirecta | segmento)>, <Punto inicial> ]\n[ <Punto inicial>, <Raio>, <Direction> ]\n[ <Punto inicial>, <Punto inicial>, <Direction> ]
CircleArc=ArcoCircunferencia
CircleArc.Syntax=[ <Centro>, <Punto inicial>, <Punto inicial> ]
CircleSector=SectorCircular
CircleSector.Syntax=[ <Centro>, <Punto inicial>, <Punto inicial> ]
CircumcircleArc=ArcoCirc3P
CircumcircleArc.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]
CircumcircleSector=SectorCircular3P
CircumcircleSector.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]
Circumference=Per??metroC??nica
Circumference.Syntax=[ <C??nica> ]
Classes=Clases
Classes.Syntax=[ <Lista datos>, <N??mero de clases> ]\n[ <Lista datos>, <Inicio>, <Ancho das clases> ]
ClosestPoint=PuntoM??isPr??ximo
ClosestPoint.Syntax=[ <Percorrido>, <Punto inicial> ]\n[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]
ClosestPointRegion=PuntoM??isPr??ximoRexi??n
ClosestPointRegion.Syntax=[ <Rexi??n>, <Punto inicial> ]
Coefficients=Coeficientes
Coefficients.Syntax=[ <Polinomio> ]\n[ <C??nica> ]
Coefficients.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
Column=Columna
Column.Syntax=[ <Cela da Folla de C??lculo> ]
ColumnName=NomeColumna
ColumnName.Syntax=[ <Cela da Folla de C??lculo> ]
Command=Comando
CommonDenominator=Com??nDenominador
CommonDenominator.Syntax=[ <Expresi??n>, <Expresi??n> ]
CompleteSquare=CompletaCadrado
CompleteSquare.Syntax=[ <Funci??n cuadr??tica> ]
ComplexRoot=Ra??cesComplexas
ComplexRoot.Syntax=[ <Polinomio> ]
Cone=Cono
Cone.Syntax=[ <Circunferencia>, <Altura> ]\n[ <Punto inicial>, <Punto inicial>, <Raio> ]\n[ <Punto inicial>, <Vector inicial>, <??ngulo antihorario> ]
ConeInfinite=ConoInfinito
ConeInfinite.Syntax=[ <Punto inicial>, <Vector inicial>, <??ngulo antihorario> ]\n[ <Punto inicial>, <Punto inicial>, <??ngulo antihorario> ]\n[ <Punto inicial>, <Lado (recta | semirecta | segmento)>, <??ngulo antihorario> ]
Conic=C??nica
Conic.Syntax=[ <Lista> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <N??mero>, <N??mero>, <N??mero>, <N??mero>, <N??mero>, <N??mero> ]
ConstructionStep=PasoConstruci??n
ConstructionStep.Syntax=[ ]\n[ <Obxecto> ]
ContingencyTable=T??boaContinxencia
ContingencyTable.Syntax=[ <Lista de texto>, <Lista de texto> ]\n[ <Lista de texto>, <Lista de texto>, <Opci??ns> ]\n[ <Lista de valores de fila>, <Lista de valores de columna>, <T??boa de frecuencia> ]\n[ <Lista de valores de fila>, <Lista de valores de columna>, <T??boa de frecuencia> , <Opci??ns> ]
ContinuedFraction=Fracci??nContinua
ContinuedFraction.Syntax=[ <N??mero> ]\n[ <N??mero>, <Nivel> ]\n[ <N??mero>, <Nivel>, <Abreviado ou non (true/false)> ]
ConvexHull=PecheConvexo
ConvexHull.Syntax=[ <Lista de puntos> ]
CopyFreeObject=CopiaObxectoLibre
CopyFreeObject.Syntax=[ <Obxecto> ]
Corner=Esquina
Corner.Syntax=[ <N??mero de esquina> ]\n[ <Imaxe>, <N??mero de esquina> ]\n[ <Texto>, <N??mero de esquina> ]\n[ <Vista Gr??fica>, <N??mero de esquina> ]
CountIf=ContarSe
CountIf.Syntax=[ <Condici??n>, <Lista> ]\n[ <Condici??n>, <Variable>, <Lista> ]
Covariance=Covarianza
Covariance.Syntax=[ <Lista de puntos> ]\n[ <Lista de N??meros>, <Lista de N??meros> ]
Cross=ProdutoVectorial
Cross.Syntax=[ <Vector inicial>, <Vector inicial> ]
CrossRatio=Raz??nDobre
CrossRatio.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <Punto inicial> ]
Cube=Cubo
Cube.Syntax=[ <Cadrado> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Direction> ]
Cubic=C??bica
Cubic.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <N??mero> ]
Curvature=Curvatura
Curvature.Syntax=[ <Punto inicial>, <Obxecto> ]
CurvatureVector=VectorCurvatura
CurvatureVector.Syntax=[ <Punto inicial>, <Obxecto> ]
CurveCartesian=CurvaParam??trica
CurveCartesian.Syntax=[ <Expresi??n>, <Expresi??n>, <Par??metro>, <Valor inicial>, <Valor final> ]
CurveCartesian.Syntax3D=[ <Expresi??n>, <Expresi??n>, <Par??metro>, <Valor inicial>, <Valor final> ]\n[ <Expresi??n>, <Expresi??n>, <Expresi??n>, <Par??metro>, <Valor inicial>, <Valor final> ]
Cylinder=Cilindro
Cylinder.Syntax=[ <Circunferencia>, <Altura> ]\n[ <Punto inicial>, <Punto inicial>, <Raio> ]
CylinderInfinite=CilindroInfinito
CylinderInfinite.Syntax=[ <Lado (recta | semirecta | segmento)>, <Raio> ]\n[ <Punto inicial>, <Vector inicial>, <Raio> ]\n[ <Punto inicial>, <Punto inicial>, <Raio> ]
DataFunction=Funci??nEmp??rica
DataFunction.Syntax=[ <Lista de N??meros>, <Lista de N??meros> ]
Defined=Est??Definido
Defined.Syntax=[ <Obxecto> ]
Degree=Grao
Degree.Syntax=[ <Polinomio> ]
Degree.SyntaxCAS=[ <Polinomio> ]\n[ <Polinomio>, <Variable> ]
DelauneyTriangulation=Delaunay
DelauneyTriangulation.Syntax=[ <Lista de puntos> ]
Delete=Borra
Delete.Syntax=[ <Obxecto> ]
Denominator=Denominador
Denominator.Syntax=[ <N??mero> ]\n[ <Funci??n> ]
Denominator.SyntaxCAS=[ <Expresi??n> ]
DensityPlot=Gr??ficaDensidade
Derivative=Derivada
Derivative.Syntax=[ <Funci??n> ]\n[ <Curva> ]\n[ <Funci??n>, <N??mero> ]\n[ <Funci??n>, <Variable> ]\n[ <Curva>, <N??mero> ]\n[ <Funci??n>, <Variable>, <N??mero> ]
Derivative.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Variable> ]\n[ <Expresi??n>, <Variable>, <N??mero> ]
Determinant=Determinante
Determinant.Syntax=[ <Matriz> ]
Diameter=Di??metroConxugado
Diameter.Syntax=[ <Vector inicial>, <C??nica> ]\n[ <Lado (recta | semirecta | segmento)>, <C??nica> ]
Difference=Diferencia
Difference.Syntax=[ <Pol??gono>, <Pol??gono> ]
Dilate=Homotecia
Dilate.Syntax=[ <Obxecto>, <N??mero (factor de escala)> ]\n[ <Obxecto>, <N??mero (factor de escala)>, <Punto (centro)> ]
Dimension=Dimensi??n
Dimension.Syntax=[ <Obxecto> ]
Direction=Direcci??n
Direction.Syntax=[ <Lado (recta | semirecta | segmento)> ]
Directrix=Directriz
Directrix.Syntax=[ <C??nica> ]
Distance=Distancia
Distance.Syntax=[ <Punto inicial>, <Obxecto> ]\n[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]\n[ <Plano>, <Plano> ]
Distance.SyntaxCAS=[ <Punto inicial>, <Obxecto> ]
Div=Cociente
Div.Syntax=[ <Dividendo (n??mero ou valor num??rico)>, <Divisor (n??mero ou valor num??rico)> ]\n[ <Dividendo (polinomio)>, <Divisor (polinomio)> ]
Division=Divisi??n
Division.Syntax=[ <Dividendo (n??mero ou valor num??rico)>, <Divisor (n??mero ou valor num??rico)> ]\n[ <Dividendo (polinomio)>, <Divisor (polinomio)> ]
Divisors=N??meroDivisores
Divisors.Syntax=[ <N??mero> ]
DivisorsList=ListaDivisores
DivisorsList.Syntax=[ <N??mero> ]
DivisorsSum=SumaDivisores
DivisorsSum.Syntax=[ <N??mero> ]
Dodecahedron=Dodecaedro
Dodecahedron.Syntax=[ <Pent??gono regular> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Direction> ]
Dot=ProdutoEscalar
Dot.Syntax=[ <Vector inicial>, <Vector inicial> ]
DotPlot=Gr??ficoDePuntos
DotPlot.Syntax=[ <Lista datos en bruto>, <Amorear puntos adxacentes (opcional)>, <Factor de escala (opcional)>]
DynamicCoordinates=CoordenadasDin??micas
DynamicCoordinates.Syntax=[ <Punto inicial>, <Coordenada x>, <Coordenada y> ]\n[ <Punto inicial>, <Coordenada x>, <Coordenada y>, <Coordenada z> ]
Eccentricity=Excentricidade
Eccentricity.Syntax=[ <C??nica> ]
Eigenvalues=Autovalores
Eigenvalues.SyntaxCAS=[ <Matriz> ]
Eigenvectors=Autovectores
Eigenvectors.SyntaxCAS=[ <Matriz> ]
Element=Elemento
Element.Syntax=[ <Lista>, <Posici??n do elemento> ]\n[ <Matriz>, <Fila>, <Columna> ]\n[ <Lista>, <??ndice1>, <??ndice2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Posici??n do elemento> ]\n[ <Matriz>, <Fila>, <Columna> ]
Eliminate=Eliminar
Eliminate.Syntax=[ <Lista de polinomios>, <Lista de variables> ]
Ellipse=Elipse
Ellipse.Syntax=[ <Foco>, <Foco>, <Semieixe principal (n??mero)> ]\n[ <Foco>, <Foco>, <Raio (segmento)> ]\n[ <Foco>, <Foco>, <Punto inicial> ]
Ends=Extremos
Ends.Syntax=[ <Cu??drica> ]
Envelope=Envolvente
Envelope.Syntax=[ <Percorrido>, <Punto inicial> ]
Erlang=Distribuci??nErlang
Erlang.Syntax=[ <Forma>, <Taxa>, <Valor da variable> ]\n[ <Forma>, <Taxa>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <Forma>, <Taxa>, x, <Acumula (Booleana)> ]
Evaluate=Aval??a
Excentricity=SemidistanciaFocal
Excentricity.Syntax=[ <C??nica> ]
Execute=Executa
Execute.Syntax=[ <Lista de texto> ]\n[ <Lista de texto>, <Par??metro>, <Par??metro>, ... ]
Expand=Desenvolve
Expand.Syntax=[ <Expresi??n> ]
Exponential=Distribuci??nExponencial
Exponential.Syntax=[ <Par??metro Lambda>, <Valor da variable> ]\n[ <Par??metro Lambda>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <Par??metro Lambda>, x, <Acumula (Booleana)> ]
Exponential.SyntaxCAS=[ <Par??metro Lambda>, <Valor da variable> ]
ExportImage=ExportaImaxe
ExportImage.Syntax=[ <Propiedade>, <Valor>, <Propiedade>, <Valor>, ... ]
ExtendedGCD=MCDestendido
ExtendedGCD.Syntax=[ <N??mero positivo>, <N??mero positivo>]\n[ <Polinomio>, <Polinomio>]
Extremum=Extremo
Extremum.Syntax=[ <Polinomio> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]
Extremum.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]
FDistribution=Distribuci??nF
FDistribution.Syntax=[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>, <Valor da variable> ]\n[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>, x, <Acumula (Booleana)> ]
FDistribution.SyntaxCAS=[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>, <Valor da variable> ]
Factor=Factoriza
Factor.Syntax=[ <Polinomio> ]
Factor.SyntaxCAS=[ <N??mero> ]\n[ <Polinomio> ]\n[ <Expresi??n>, <Variable> ]
Factors=Factores
Factors.Syntax=[ <Polinomio> ]\n[ <N??mero> ]
FillCells=RecheaCelas
FillCells.Syntax=[ <Rango de celas>, <Obxecto> ]\n[ <Cela>, <Lista> ]\n[ <Cela>, <Matriz> ]
FillColumn=RecheaColumna
FillColumn.Syntax=[ <Columna>, <Lista> ]
FillRow=RecheaFila
FillRow.Syntax=[ <Fila>, <Lista> ]
First=Primeiros
First.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <N??mero de elementos> ]\n[ <Texto>, <N??mero de elementos> ]\n[ <Lugar>, <N??mero de elementos> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <N??mero de elementos> ]
FirstAxis=EixePrincipal
FirstAxis.Syntax=[ <C??nica> ]
FirstAxisLength=LonxitudeEixePrincipal
FirstAxisLength.Syntax=[ <C??nica> ]
Fit=Axusta
Fit.Syntax=[ <Lista de puntos>, <Lista de funci??ns> ]\n[ <Lista de puntos>, <Funci??n> ]
FitExp=AxusteExp
FitExp.Syntax=[ <Lista de puntos> ]
FitGrowth=AxusteCrecemento
FitGrowth.Syntax=[ <Lista de puntos> ]
FitImplicit=AxusteImpl??cita
FitImplicit.Syntax=[ <Lista de puntos>, <Orde> ]
FitLineX=AxusteLinealX
FitLineX.Syntax=[ <Lista de puntos> ]
FitLineY=AxusteLineal
FitLineY.Syntax=[ <Lista de puntos> ]
FitLog=AxusteLogar??tmico
FitLog.Syntax=[ <Lista de puntos> ]
FitLogistic=AxusteLox??stico
FitLogistic.Syntax=[ <Lista de puntos> ]
FitPoly=AxustePolin??mico
FitPoly.Syntax=[ <Lista de puntos>, <Grao do polinomio> ]\n[ <Funci??n mano alzada>, <Grao do polinomio> ]
FitPow=AxustePotencial
FitPow.Syntax=[ <Lista de puntos> ]
FitSin=AxusteSinusoidal
FitSin.Syntax=[ <Lista de puntos> ]
Flatten=Aplana
Flatten.Syntax=[ <Lista> ]
Focus=Foco
Focus.Syntax=[ <C??nica> ]
FractionText=TextoFracci??n
FractionText.Syntax=[ <N??mero> ]\n[ <Punto inicial> ]\n[ <N??mero>, <Fracci??n booleana ??nica> ]
Frequency=Frecuencia
Frequency.Syntax=[ <Lista datos en bruto> ]\n[ <Acumula (Booleana)>, <Lista datos en bruto> ]\n[ <Lista de l??mites de clase>, <Lista datos en bruto> ]\n[ <Lista de texto>, <Lista de texto> ]\n[ <Acumula (Booleana)>, <Lista de l??mites de clase>, <Lista datos en bruto> ]\n[ <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (Booleana)>, <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]
FrequencyPolygon=Pol??gonoFrecuencia
FrequencyPolygon.Syntax=[ <Lista de l??mites de clase>, <Lista alturas> ]\n[ <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (Booleana)>, <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]
FrequencyTable=T??boaFrecuencia
FrequencyTable.Syntax=[ <Lista datos en bruto>, <Factor de escala (opcional)> ]\n[ <Acumula (Booleana)>, <Lista datos en bruto> ]\n[ <Lista de l??mites de clase>, <Lista datos en bruto> ]\n[ <Acumula (Booleana)>, <Lista de l??mites de clase>, <Lista datos en bruto> ]\n[ <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (Booleana)>, <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]
FromBase=DesdeBase
FromBase.Syntax=[ <N??mero como texto>, <Base> ]
Function=Funci??n
Function.Syntax=[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Lista de N??meros> ]
Function.Syntax3D=[ <Lista de N??meros> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Expresi??n>, <Par??metro 1>, <Valor inicial>, <Valor final>, <Par??metro 2>, <Valor inicial>, <Valor final> ]
Function.SyntaxCAS=[ <Funci??n>, <Valor x inicial>, <Valor x final> ]
FutureValue=ValorFuturo
FutureValue.Syntax=[ <Taxa>, <N??mero de per??odos>, <Pagamento>, <Valor presente>, <Tipo (opcional)> ]
GCD=MCD
GCD.Syntax=[ <Lista de N??meros> ]\n[ <N??mero>, <N??mero> ]
GCD.SyntaxCAS=[ <Lista de N??meros> ]\n[ <Lista de polinomios> ]\n[ <N??mero>, <N??mero> ]\n[ <Polinomio>, <Polinomio> ]
Gamma=Distribuci??nGamma
Gamma.Syntax=[ <Alfa>, <Beta>, <Valor da variable> ]\n[ <Alfa>, <Beta>, <Valor da variable>, <Acumula (Booleana)>  ]\n[ <Alfa>, <Beta>, x, <Acumula (Booleana)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor da variable> ]
GeometricMean=MediaXeom??trica
GeometricMean.Syntax=[ <Lista de N??meros> ]
GetTime=TempoActual
GetTime.Syntax=[]\n[ <Formato> ]
GroebnerDegRevLex=GroebnerGraoRevLex
GroebnerDegRevLex.Syntax=[ <Lista de polinomios> ]\n[ <Lista de polinomios>, <Lista de variables> ]
GroebnerLex.Syntax=[ <Lista de polinomios> ]\n[ <Lista de polinomios>, <Lista de variables> ]
GroebnerLexDeg=GroebnerLexGrao
GroebnerLexDeg.Syntax=[ <Lista de polinomios> ]\n[ <Lista de polinomios>, <Lista de variables> ]
HarmonicMean=MediaHarm??nica
HarmonicMean.Syntax=[ <Lista de N??meros> ]
Height=Altura
Height.Syntax=[ <S??lido> ]
HideLayer=OcultaCapa
HideLayer.Syntax=[ <N??mero> ]
Histogram=Histograma
Histogram.Syntax=[ <Lista de l??mites de clase>, <Lista alturas> ]\n[ <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]\n[ <Acumula (Booleana)>, <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]
HistogramRight=HistogramaDereita
HistogramRight.Syntax=[ <Lista de l??mites de clase>, <Lista alturas> ]\n[ <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)>  ]\n[ <Acumula (Booleana)>, <Lista de l??mites de clase>, <Lista datos en bruto>, <Usa densidade (booleana)>, <Factor de escala de densidade (opcional)> ]
HyperGeometric=Distribuci??nHiperXeom??trica
HyperGeometric.Syntax=[ <Tama??o da poboaci??n>, <N??mero de ??xitos>, <Tama??o da mostra> ]\n[ <Tama??o da poboaci??n>, <N??mero de ??xitos>, <Tama??o da mostra>, <Acumula (Booleana)> ]\n[ <Tama??o da poboaci??n>, <N??mero de ??xitos>, <Tama??o da mostra>, <Valor da variable>, <Acumula (Booleana)> ]
HyperGeometric.SyntaxCAS=[ <Tama??o da poboaci??n>, <N??mero de ??xitos>, <Tama??o da mostra>, <Valor da variable>, <Acumula (Booleana)> ]
Hyperbola=Hip??rbole
Hyperbola.Syntax=[ <Foco>, <Foco>, <Semieixe principal (n??mero)> ]\n[ <Foco>, <Foco>, <Raio (segmento)> ]\n[ <Foco>, <Foco>, <Punto inicial> ]
IFactor=FactorR
IFactor.Syntax=[ <Polinomio> ]
IFactor.SyntaxCAS=[ <Expresi??n> ]
Icosahedron=Icosaedro
Icosahedron.Syntax=[ <Tri??ngulo equil??tero> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Direction> ]
Identity=Identidade
Identity.Syntax=[ <N??mero> ]
If=Se
If.Syntax=[ <Condici??n>, <Ent??n> ]\n[ <Condici??n>, <Ent??n>, <Sen??n> ]
ImplicitCurve=CurvaImpl??cita
ImplicitCurve.Syntax=[ <Lista de puntos> ]\n[ <f(x, y)> ]
ImplicitDerivative=DerivadaImpl??cita
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Expresi??n>, <Variable dependente>, <Variable independente> ]
Incircle=CircunferenciaInscrita
Incircle.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]
IndexOf=??ndiceDe
IndexOf.Syntax=[ <Obxecto>, <Lista> ]\n[ <Texto>, <Texto> ]\n[ <Obxecto>, <Lista>, <??ndice inicial> ]\n[ <Texto>, <Texto>, <??ndice inicial> ]
Insert=Inserir
Insert.Syntax=[ <Lista>, <Lista>, <Posici??n> ]\n[ <Obxecto>, <Lista>, <Posici??n> ]
Integral.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final>, <Aval??a (booleana)> ]
Integral.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Variable>, <Valor inicial>, <Valor final> ]
IntegralBetween=IntegralEntre
IntegralBetween.Syntax=[ <Funci??n>, <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Funci??n>, <Valor x inicial>, <Valor x final>, <Aval??a (booleana)> ]
IntegralBetween.SyntaxCAS=[ <Funci??n>, <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Funci??n>, <Variable>, <Valor inicial>, <Valor final> ]
IntegralSymbolic=IntegralSimb??lica
IntegralSymbolic.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]
InteriorAngles=??ngulosInteriores
InteriorAngles.Syntax=[ <Pol??gono> ]
Intersect=Interseca
Intersect.Syntax=[ <Obxecto>, <Obxecto> ]\n[ <Obxecto>, <Obxecto>, <N??mero do punto de intersecci??n> ]\n[ <Obxecto>, <Obxecto>, <Punto inicial> ]\n[ <Funci??n>, <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Curva 1>, <Curva 2>, <Par??metro 1>, <Par??metro 2> ]
Intersect.SyntaxCAS=[ <Funci??n>, <Funci??n> ]
IntersectConic=IntersecaC??nica
IntersectConic.Syntax=[ <Plano>, <Cu??drica> ]\n[ <Cu??drica>, <Cu??drica> ]
IntersectPath=IntersecaPercorridos
IntersectPath.Syntax=[ <Lado (recta | semirecta | segmento)>, <Pol??gono> ]\n[ <Pol??gono>, <Pol??gono> ]
IntersectPath.Syntax3D=[ <Lado (recta | semirecta | segmento)>, <Pol??gono> ]\n[ <Pol??gono>, <Pol??gono> ]\n[ <Plano>, <Pol??gono> ]\n[ <Plano>, <Cu??drica> ]
Intersection=Intersecci??n
Intersection.Syntax=[ <Lista>, <Lista> ]
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Probabilidade> ]
InverseBinomial=Distribuci??nBinomialInversa
InverseBinomial.Syntax=[ <N??mero de ensaios>, <Probabilidade de ??xito>, <Probabilidade acumulada> ]
InverseBinomialMinimumTrials=BinomialInversaEnsaiosM??nimos
InverseBinomialMinimumTrials.Syntax=[ <Probabilidade acumulada>, <Probabilidade de ??xito>, <N??mero de ??xitos> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Probabilidade acumulada>, <Probabilidade de ??xito>, <N??mero de ??xitos> ]
InverseCauchy=Distribuci??nCauchyInversa
InverseCauchy.Syntax=[ <Mediana>, <Escala>, <Probabilidade> ]
InverseChiSquared=Distribuci??nChiCuadradoInversa
InverseChiSquared.Syntax=[ <Graos de liberdade>, <Probabilidade> ]
InverseExponential=Distribuci??nExponencialInversa
InverseExponential.Syntax=[ <Par??metro Lambda>, <Probabilidade> ]
InverseFDistribution=Distribuci??nFInversa
InverseFDistribution.Syntax=[ <Graos de liberdade do numerador>, <Graos de liberdade do denominador>, <Probabilidade> ]
InverseGamma=GammaInversa
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Probabilidade> ]
InverseHyperGeometric=Distribuci??nHiperXeom??tricaInversa
InverseHyperGeometric.Syntax=[ <Tama??o da poboaci??n>, <N??mero de ??xitos>, <Tama??o da mostra>, <Probabilidade> ]
InverseLaplace=LaplaceInversa
InverseLaplace.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Variable>, <Variable> ]
InverseLogNormal=Distribuci??nLogNormalInversa
InverseLogNormal.Syntax=[ <Media>, <Desviaci??n t??pica>, <Probabilidade> ]
InverseLogistic=Distribuci??nLox??sticaInversa
InverseLogistic.Syntax=[ <Media>, <Escala>, <Probabilidade> ]
InverseNormal=Distribuci??nNormalInversa
InverseNormal.Syntax=[ <Media>, <Desviaci??n t??pica>, <Probabilidade acumulada> ]
InversePascal=Distribuci??nPascalInversa
InversePascal.Syntax=[ <n>, <p>, <Probabilidade> ]
InversePoisson=Distribuci??nPoissonInversa
InversePoisson.Syntax=[ <Media>, <Probabilidade> ]
InverseTDistribution=Distribuci??nTInversa
InverseTDistribution.Syntax=[ <Graos de liberdade>, <Probabilidade> ]
InverseWeibull=Distribuci??nWeibullInversa
InverseWeibull.Syntax=[ <Forma>, <Escala>, <Probabilidade> ]
InverseZipf=Distribuci??nZipfInversa
InverseZipf.Syntax=[ <N??mero de elementos>, <Expo??ente>, <Probabilidade> ]
Invert=Inverte
Invert.Syntax=[ <Matriz> ]\n[ <Funci??n> ]
IsFactored=Est??Factorizado
IsFactored.Syntax=[ <Polinomio> ]
IsInRegion=Est??EnRexi??n
IsInRegion.Syntax=[ <Punto inicial>, <Rexi??n> ]
IsInteger=??Enteiro
IsInteger.Syntax=[ <N??mero> ]
IsPrime=??Primo
IsPrime.Syntax=[ <N??mero> ]
IsTangent=??Tanxente
IsTangent.Syntax=[ <Lado (recta | semirecta | segmento)>, <C??nica> ]
IsVertexForm=??Cuadr??ticaCan??nica
IsVertexForm.Syntax=[ <Funci??n> ]
Iteration=Iteraci??n
Iteration.Syntax=[ <Funci??n>, <Valor inicial>, <N??mero de iteraci??ns> ]\n[ <Expresi??n>, <Variables>, <Valores iniciais>, <N??mero de iteraci??ns> ]
IterationList=ListaIteraci??n
IterationList.Syntax=[ <Funci??n>, <Valor inicial>, <N??mero de iteraci??ns> ]\n[ <Expresi??n>, <Variables>, <Valores iniciais>, <N??mero de iteraci??ns> ]
IterationList.SyntaxCAS=[ <Funci??n>, <Valor inicial>, <N??mero de iteraci??ns> ]
Join=Concatena
Join.Syntax=[ <Lista de listas> ]\n[ <Lista>, <Lista>, ... ]
JordanDiagonalization=Can??nicaJordan
JordanDiagonalization.SyntaxCAS=[ <Matriz> ]
KeepIf=ManterSe
KeepIf.Syntax=[ <Condici??n>, <Lista> ]\n[ <Condici??n>, <Variable>, <Lista> ]
LCM=MCM
LCM.Syntax=[ <Lista de N??meros> ]\n[ <N??mero>, <N??mero> ]
LCM.SyntaxCAS=[ <Lista de N??meros> ]\n[ <Lista de polinomios> ]\n[ <N??mero>, <N??mero> ]\n[ <Polinomio>, <Polinomio> ]
LUDecomposition=Descomposici??nLU
LUDecomposition.Syntax=[ <Matriz> ]
LaTeX=F??rmulaTexto
LaTeX.Syntax=[ <Obxecto> ]\n[ <Obxecto>, <Substit??e variables (booleana)> ]\n[ <Obxecto>, <Substit??e variables (booleana)>, <Mostra nome (booleana)> ]
Laplace.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]\n[ <Funci??n>, <Variable>, <Variable> ]
Last=??ltimo
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <N??mero de elementos> ]\n[ <Texto>, <N??mero de elementos> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <N??mero de elementos> ]
LeftSide=PrimeiroMembro
LeftSide.Syntax=[ <Ecuaci??n> ]
LeftSide.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Lista de ecuaci??ns> ]\n[ <Lista de ecuaci??ns>, <??ndice> ]
LeftSum=SumaEsquerda
LeftSum.Syntax=[ <Funci??n>, <Valor x inicial>, <Valor x final>, <N??mero de rect??ngulos> ]
Length=Lonxitude
Length.Syntax=[ <Obxecto> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Punto inicial>, <Punto final> ]\n[ <Curva>, <Valor inicial t>, <Valor final t> ]\n[ <Curva>, <Punto inicial>, <Punto final> ]
Length.SyntaxCAS=[ <Lista> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Variable>, <Valor x inicial>, <Valor x final> ]
LetterToUnicode=C??digoDeCar??cter
LetterToUnicode.Syntax=[ <Car??cter> ]
Limit=L??mite
Limit.Syntax=[ <Funci??n>, <Valor> ]
Limit.SyntaxCAS=[ <Expresi??n>, <Valor> ]\n[ <Expresi??n>, <Variable>, <Valor> ]
LimitAbove=L??miteLateralDereito
LimitAbove.Syntax=[ <Funci??n>, <Valor> ]
LimitAbove.SyntaxCAS=[ <Expresi??n>, <Valor> ]\n[ <Expresi??n>, <Variable>, <Valor> ]
LimitBelow=L??miteLateralEsquerdo
LimitBelow.Syntax=[ <Funci??n>, <Valor> ]
LimitBelow.SyntaxCAS=[ <Expresi??n>, <Valor> ]\n[ <Expresi??n>, <Variable>, <Valor> ]
Line=Recta
Line.Syntax=[ <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Recta paralela> ]\n[ <Punto inicial>, <Vector de direcci??n> ]
LineBisector=Mediatriz
LineBisector.Syntax=[ <Raio (segmento)> ]\n[ <Punto inicial>, <Punto inicial> ]
LineBisector.Syntax3D=[ <Raio (segmento)> ]\n[ <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Direction> ]
LineGraph=Gr??ficoPoligonal
LineGraph.Syntax=[ <Lista de  abscisas>, <Lista de ordenadas> ]
Locus=LugarXeom??trico
Locus.Syntax=[ <Punto que crea o lugar>, <Punto inicial> ]\n[ <Punto que crea o lugar>, <Esvarador> ]\n[ <Campo de direcci??ns>, <Punto inicial> ]\n[ <f(x, y)>, <Punto inicial> ]
LocusEquation=Ecuaci??nLugar
LocusEquation.Syntax=[ <Lugar> ]\n[ <Punto lugar>, <Punto m??vil> ]\n[ <Expresi??n Booleana>, <Punto m??vil> ]
LogNormal=Distribuci??nLogNormal
LogNormal.Syntax=[ <Media>, <Desviaci??n t??pica>, <Valor da variable> ]\n[ <Media>, <Desviaci??n t??pica>, <Valor da variable>, <Acumula (Booleana)>  ]\n[ <Media>, <Desviaci??n t??pica>, x, <Acumula (Booleana)> ]
Logistic=Distribuci??nLox??stica
Logistic.Syntax=[ <Media>, <Escala>, <Valor da variable> ]\n[ <Media>, <Escala>, <Valor da variable>, <Acumula (Booleana)>  ]\n[ <Media>, <Escala>, x, <Acumula (Booleana)> ]
LowerSum=SumaInferior
LowerSum.Syntax=[ <Funci??n>, <Valor x inicial>, <Valor x final>, <N??mero de rect??ngulos> ]
MAD=DM
MatrixPlot=Gr??ficoMatricial
MatrixRank=RangoMatriz
MatrixRank.Syntax=[ <Matriz> ]
Max=M??ximo
Max.Syntax=[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Lista> ]\n[ <Lista datos>, <Lista frecuencias> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Lista datos>, <Lista frecuencias> ]
Maximize=Maximiza
Maximize.Syntax=[ <N??mero dependente>, <N??mero libre (esvarador)> ]\n[ <N??mero dependente>, <Punto en percorrido> ]
Mean=Media
Mean.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
MeanX=MediaX
MeanX.Syntax=[ <Lista de puntos> ]
MeanY=MediaY
MeanY.Syntax=[ <Lista de puntos> ]
Median=Mediana
Median.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
Median.SyntaxCAS=[ <Lista de N??meros> ]
Midpoint=PuntoMedio
Midpoint.Syntax=[ <Raio (segmento)> ]\n[ <C??nica> ]\n[ <Intervalo> ]\n[ <Punto inicial>, <Punto inicial> ]
Min=M??nimo
Min.Syntax=[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Lista> ]\n[ <Lista datos>, <Lista frecuencias> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Intervalo> ]\n[ <N??mero>, <N??mero> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Lista datos>, <Lista frecuencias> ]
MinimalPolynomial=PolinomioM??nimo
MinimalPolynomial.Syntax=[ <Matriz> ]
Minimize=Minimiza
Minimize.Syntax=[ <N??mero dependente>, <N??mero libre (esvarador)> ]\n[ <N??mero dependente>, <Punto en percorrido> ]
MinimumSpanningTree=??rboreExpansi??nM??nima
MinimumSpanningTree.Syntax=[ <Lista de puntos> ]
Mirror=Reflexa
Mirror.Syntax=[ <Obxecto>, <Punto inicial> ]\n[ <Obxecto>, <Lado (recta | semirecta | segmento)> ]\n[ <Obxecto>, <Circunferencia> ]
Mirror.Syntax3D=[ <Obxecto>, <Punto inicial> ]\n[ <Obxecto>, <Lado (recta | semirecta | segmento)> ]\n[ <Obxecto>, <Plano> ]\n[ <Obxecto>, <Circunferencia> ]
MixedNumber=N??meroMixto
MixedNumber.SyntaxCAS=[ <N??mero> ]
Mod=Resto
Mod.Syntax=[ <Dividendo (n??mero ou valor num??rico)>, <Divisor (n??mero ou valor num??rico)> ]\n[ <Dividendo (polinomio)>, <Divisor (polinomio)> ]
Mode=Moda
Mode.Syntax=[ <Lista de N??meros> ]
ModularExponent=ExponenteModular
ModularExponent.Syntax=[ <N??mero>, <N??mero>, <N??mero> ]
NDerivative=DerivadaN
NDerivative.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Orde> ]
NIntegral=IntegralNum
NIntegral.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Valor x inicial>, <Start y-Value>, <Valor x final> ]
NIntegral.SyntaxCAS=[ <Funci??n>, <Valor x inicial>, <Valor x final> ]\n[ <Funci??n>, <Variable>, <Valor inicial>, <Valor final> ]
NInvert=InversaN
NInvert.Syntax=[ <Funci??n> ]
NSolutions=Soluci??nsNum
NSolutions.Syntax=[ <Ecuaci??n> ]
NSolutions.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Ecuaci??n>, <Variable = valor inicial> ]\n[ <Lista de ecuaci??ns>, <Lista de variables> ]
NSolve=ResolveNum
NSolve.Syntax=[ <Ecuaci??n> ]
NSolve.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Ecuaci??n>, <Variable = valor inicial> ]\n[ <Lista de ecuaci??ns>, <Lista de variables> ]
NSolveODE=ResolveNEDO
NSolveODE.Syntax=[ <Lista de Derivadas>, <coordenada-x Inicial>, <Lista de coordenadas-y Iniciais>, <coordenada-x Final> ]
Name=Nome
Name.Syntax=[ <Obxecto> ]
Net=Desenvolvemento
Net.Syntax=[ <Poliedro>, <N??mero> ]\n[ <Poliedro>, <N??mero>, <Cara>, <Aresta>, <Aresta>, ... ]
NextPrime=PrimoSeguinte
NextPrime.Syntax=[ <N??mero> ]
Normal=Distribuci??nNormal
Normal.Syntax=[ <Media>, <Desviaci??n t??pica>, <Valor da variable> ]\n[ <Media>, <Desviaci??n t??pica>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <Media>, <Desviaci??n t??pica>, x, <Acumula (Booleana)> ]
NormalQuantilePlot=Gr??ficoCuantilNormal
NormalQuantilePlot.Syntax=[ <Lista datos en bruto> ]
Normalize=Normalizar
Normalize.Syntax=[ <Lista de N??meros> ]\n[ <Lista de puntos> ]
Numerator=Numerador
Numerator.Syntax=[ <N??mero> ]\n[ <Funci??n> ]
Numerator.SyntaxCAS=[ <Expresi??n> ]
Numeric=ValorNum??rico
Numeric.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Num??ro de cifras significativas> ]
Object=Obxecto
Object.Syntax=[ <Nome do obxecto como texto> ]
Octahedron=Octaedro
Octahedron.Syntax=[ <Tri??ngulo equil??tero> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Direction> ]
Ordinal.Syntax=[ <N??mero positivo> ]
OrdinalRank=ListaOrdinal
OrdinalRank.Syntax=[ <Lista> ]
OrthogonalLine=Perpendicular
OrthogonalLine.Syntax=[ <Punto inicial>, <Lado (recta | semirecta | segmento)> ]\n[ <Punto inicial>, <Raio (segmento)> ]\n[ <Punto inicial>, <Vector inicial> ]
OrthogonalLine.Syntax3D=[ <Punto inicial>, <Lado (recta | semirecta | segmento)> ]\n[ <Punto inicial>, <Raio (segmento)> ]\n[ <Punto inicial>, <Vector inicial> ]\n[ <Punto inicial>, <Plano> ]\n[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]\n[ <Punto inicial>, <Direction>, <Direction> ]\n[ <Punto inicial>, <Lado (recta | semirecta | segmento)>, <Contexto: un plano (ex. planoXY) ou a palabra "espazo" (sen comi??as)> ]
OrthogonalPlane=PlanoPerpendicular
OrthogonalPlane.Syntax=[ <Punto inicial>, <Lado (recta | semirecta | segmento)> ]\n[ <Punto inicial>, <Vector inicial> ]
OrthogonalVector=VectorPerpendicular
OrthogonalVector.Syntax=[ <Lado (recta | semirecta | segmento)> ]\n[ <Raio (segmento)> ]\n[ <Vector inicial> ]
OrthogonalVector.Syntax3D=[ <Lado (recta | semirecta | segmento)> ]\n[ <Raio (segmento)> ]\n[ <Vector inicial> ]\n[ <Plano> ]
OrthogonalVector.SyntaxCAS=[ <Vector inicial> ]
OsculatingCircle=C??rculoOsculador
OsculatingCircle.Syntax=[ <Punto inicial>, <Obxecto> ]
PMCC=CoeficienteCorrelaci??n
PMCC.Syntax=[ <Lista de puntos> ]\n[ <Lista de  abscisas>, <Lista de ordenadas> ]
Pan=DesprazaVista
Pan.Syntax=[ <desp x>, < desp y> ]
Pan.Syntax3D=[ <desp x>, < desp y> ]\n[ <desp x>, < desp y>, <z> ]
Parabola=Par??bola
Parabola.Syntax=[ <Punto inicial>, <Lado (recta | semirecta | segmento)> ]
Parameter=Par??metro
Parameter.Syntax=[ <Par??bola> ]
ParametricDerivative=DerivadaParam??trica
ParametricDerivative.Syntax=[ <Curva> ]
ParseToFunction=AsignaFunci??n
ParseToFunction.Syntax=[ <Funci??n>, <Cadea texto> ]
ParseToNumber=AsignaN??mero
ParseToNumber.Syntax=[ <N??mero>, <Cadea texto> ]
PartialFractions=Fracci??nsSimples
PartialFractions.Syntax=[ <Funci??n> ]
PartialFractions.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]
Pascal=Distribuci??nPascal
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Acumula (Booleana)> ]\n[ <n>, <p>, <Valor da variable>, <Acumula (Booleana)> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Valor da variable>, <Acumula (Booleana)> ]
PathParameter=Par??metroNoPercorrido
PathParameter.Syntax=[ <Punto en percorrido> ]
Payment=Pagamento
Payment.Syntax=[ <Taxa>, <N??mero de per??odos>, <Valor presente>, <Valor futuro (octional)>, <Tipo (opcional)> ]
PenStroke.Syntax=[ <Punto inicial>, ..., <Punto inicial> ]
Percentile=Percentil
Percentile.Syntax=[ <Lista de N??meros>, <Tanto por un> ]
Perimeter=Per??metro
Perimeter.Syntax=[ <Pol??gono> ]\n[ <C??nica> ]\n[ <Lugar> ]
Periods=Per??odos
Periods.Syntax=[ <Taxa>, <Pagamento>, <Valor presente>, <Valor futuro (octional)>, <Tipo (opcional)> ]
PieChart=Gr??ficoCircular
PieChart.Syntax=[ <Lista frecuencias> ]\n[ <Lista frecuencias>, <Centro>, <Raio> ]
Plane=Plano
Plane.Syntax=[ <Pol??gono> ]\n[ <C??nica> ]\n[ <Punto inicial>, <Plano> ]\n[ <Punto inicial>, <Lado (recta | semirecta | segmento)> ]\n[ <Lado (recta | semirecta | segmento)>, <Lado (recta | semirecta | segmento)> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Vector inicial>, <Vector inicial> ]
PlaneBisector=PlanoMedio
PlaneBisector.Syntax=[ <Raio (segmento)> ]\n[ <Punto inicial>, <Punto inicial> ]
PlaySound=TocaSon
PlaySound.Syntax=[ <URL> ]\n[ <Toca (booleana)> ]\n[ <Funci??n>, <Valor m??nimo>, <Valor m??ximo> ]\n[ <Funci??n>, <Valor m??nimo>, <Valor m??ximo>, <Taxa de mostraxe>, <Profundidade de mostraxe> ]
PlotSolve=ResolveGr??fica
PlotSolve.Syntax=[ <Ecuaci??n en x> ]
Point=Punto
Point.Syntax=[ <Obxecto> ]\n[ <Obxecto>, <Par??metro> ]\n[ <Punto inicial>, <Vector inicial> ]\n[ <Lista> ]
PointIn=PuntoEn
PointIn.Syntax=[ <Rexi??n> ]
PointList=ListaPuntos
PointList.Syntax=[ <Lista> ]
Poisson=Distribuci??nPoisson
Poisson.Syntax=[ <Media> ]\n[ <Media>, <Acumula (Booleana)> ]\n[ <Media>, <Valor da variable>, <Acumula (Booleana)> ]
Poisson.SyntaxCAS=[ <Media>, <Valor da variable>, <Acumula (Booleana)> ]
Polar.Syntax=[ <Punto inicial>, <C??nica> ]\n[ <Lado (recta | semirecta | segmento)>, <C??nica> ]
PolyLine=Poligonal
PolyLine.Syntax=[ <Lista de puntos> ]\n[ <Punto inicial>, ..., <Punto inicial> ]
Polygon=Pol??gono
Polygon.Syntax=[ <Lista de puntos> ]\n[ <Punto inicial>, ..., <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <N??mero de V??rtices> ]
Polygon.Syntax3D=[ <Lista de puntos> ]\n[ <Punto inicial>, ..., <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <N??mero de V??rtices> ]\n[ <Punto inicial>, <Punto inicial>, <N??mero de V??rtices>, <Direction> ]
Polynomial=Polinomio
Polynomial.Syntax=[ <Funci??n> ]\n[ <Lista de puntos> ]
Polynomial.SyntaxCAS=[ <Funci??n> ]\n[ <Funci??n>, <Variable> ]
PresentValue=ValorActual
PresentValue.Syntax=[ <Taxa>, <N??mero de per??odos>, <Pagamento>, <Valor futuro (octional)>, <Tipo (opcional)> ]
PreviousPrime=PrimoAnterior
PreviousPrime.Syntax=[ <N??mero> ]
PrimeFactors=FactoresPrimos
PrimeFactors.Syntax=[ <N??mero> ]
Prism=Prisma
Prism.Syntax=[ <Pol??gono>, <Punto inicial> ]\n[ <Pol??gono>, <N??mero (altura)> ]\n[ <Punto inicial>, <Punto inicial>, ... ]
Product=Produto
Product.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <N??mero de elementos> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]
Product.SyntaxCAS=[ <Lista de expresi??ns> ]\n[ <Expresi??n>, <Variable>, <??ndice inicial>, <??ndice final> ]
Prove=Probar
Prove.Syntax=[ <Expresi??n Booleana> ]
ProveDetails=ProbaDetallada
ProveDetails.Syntax=[ <Expresi??n Booleana> ]
Pyramid=Pir??mide
Pyramid.Syntax=[ <Pol??gono>, <Punto inicial> ]\n[ <Pol??gono>, <Altura> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <Punto inicial>, ... ]
Q1=Q1
Q1.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
Q3=Quartil3
Q3.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
QRDecomposition=Descomposici??nQR
QRDecomposition.Syntax=[ <Matriz> ]
QuadricSide=Lado
QuadricSide.Syntax=[ <Cu??drica> ]
RSquare=RCadrado
RSquare.Syntax=[ <Lista de puntos>, <Funci??n> ]
Radius=Raio
Radius.Syntax=[ <C??nica> ]
Random=AleatorioEntre
Random.Syntax=[ <M??nimo enteiro>, <M??ximo enteiro> ]\n[ <M??nimo enteiro>, <M??ximo enteiro>, <N??mero de mostras> ]\n[ <M??nimo enteiro>, <M??ximo enteiro>, <Fixado true|false> ]
Random.SyntaxCAS=[ <M??nimo enteiro>, <M??ximo enteiro> ]\n[ <M??nimo enteiro>, <M??ximo enteiro>, <N??mero de mostras> ]
RandomBinomial=AleatorioBinomial
RandomBinomial.Syntax=[ <N??mero de ensaios>, <Probabilidade> ]
RandomDiscrete=DiscretaAleatoria
RandomDiscrete.Syntax=[ <Lista>, <Lista> ]
RandomElement=ElementoAleatorio
RandomElement.Syntax=[ <Lista> ]
RandomNormal=AleatorioNormal
RandomNormal.Syntax=[ <Media>, <Desviaci??n t??pica> ]
RandomPointIn=PuntoAleatorioEn
RandomPointIn.Syntax=[ <Rexi??n> ]\n[ <Lista de puntos> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=AleatorioPoisson
RandomPoisson.Syntax=[ <Media> ]
RandomPolynomial=PolinomioAleatorio
RandomPolynomial.Syntax=[ <Grao>, <Valor m??nimo coeficientes>, <Valor m??ximo coeficientes> ]
RandomPolynomial.SyntaxCAS=[ <Grao>, <Valor m??nimo coeficientes>, <Valor m??ximo coeficientes> ]\n[ <Variable>, <Grao>, <Valor m??nimo coeficientes>, <Valor m??ximo coeficientes> ]
RandomUniform=AleatorioUniforme
RandomUniform.Syntax=[ <M??nimo>, <M??ximo> ]\n[ <M??nimo>, <M??ximo>, <N??mero de mostras> ]
Rate=Taxa
Rate.Syntax=[ <N??mero de per??odos>, <Pagamento>, <Valor presente>, <Valor futuro (octional)>, <Tipo (opcional)>, <Estimaci??n (opcional)> ]
Rationalize=PasaAFracci??n
Rationalize.SyntaxCAS=[ <N??mero> ]
Ray=Semirrecta
Ray.Syntax=[ <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Vector de direcci??n> ]
ReadText=LeTexto
ReadText.Syntax=[ <Texto> ]
RectangleSum=SumaRectangular
RectangleSum.Syntax=[ <Funci??n>, <Valor x inicial>, <Valor x final>, <N??mero de rect??ngulos>, <Posici??n altura do rect??ngulo> ]
ReducedRowEchelonForm=GraduadaReducida
ReducedRowEchelonForm.Syntax=[ <Matriz> ]
Relation=Relaci??n
Relation.Syntax=[ <Lista> ]\n[ <Obxecto>, <Obxecto> ]
RemovableDiscontinuity=DescontinuidadeEvit??bel
RemovableDiscontinuity.Syntax=[ <Funci??n> ]
Remove=Borrar
Remove.Syntax=[ <Lista>, <Lista> ]
RemoveUndefined=EliminaIndefinidos
RemoveUndefined.Syntax=[ <Lista> ]
Rename=Renomea
Rename.Syntax=[ <Obxecto>, <Nome> ]
Repeat=Repetir
Repeat.Syntax=[ <N??mero>, <Comando script>, <Comando script>, ... ]
ReplaceAll=Substit??eTodo
ReplaceAll.Syntax=[ <Texto>, <Texto a buscar>, <Texto de substituci??n> ]
ResidualPlot=GraficoResidual
ResidualPlot.Syntax=[ <Lista de puntos>, <Funci??n> ]
Reverse=Reverte
Reverse.Syntax=[ <Lista> ]
RightSide=SegundoMembro
RightSide.Syntax=[ <Ecuaci??n> ]
RightSide.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Lista de ecuaci??ns> ]\n[ <Lista de ecuaci??ns>, <??ndice> ]
RigidPolygon=Pol??gonoR??xido
RigidPolygon.Syntax=[ <Pol??gono> ]\n[ <Pol??gono>, <Deprazamento x>, <Deprazamento y> ]\n[ <Punto libre>, ..., <Punto libre> ]
Root=Ra??z
Root.Syntax=[ <Polinomio> ]\n[ <Funci??n>, <Valor inicial x> ]\n[ <Funci??n>, <Valor x inicial>, <Valor x final> ]
Root.SyntaxCAS=[ <Polinomio> ]
RootList=ListaRa??ces
RootList.Syntax=[ <Lista> ]
RootMeanSquare=MediaCadr??tica
RootMeanSquare.Syntax=[ <Lista de N??meros> ]
Roots=Ra??ces
Roots.Syntax=[ <Funci??n>, <Valor x inicial>, <Valor x final> ]
Rotate=Rota
Rotate.Syntax=[ <Obxecto>, <??ngulo antihorario> ]\n[ <Obxecto>, <??ngulo antihorario>, <Punto inicial> ]
Rotate.Syntax3D=[ <Obxecto>, <??ngulo antihorario> ]\n[ <Obxecto>, <??ngulo antihorario>, <Punto inicial> ]\n[ <Obxecto>, <??ngulo antihorario>, <Eixe de Rotaci??n> ]\n[ <Obxecto>, <??ngulo antihorario>, <Punto sobre Eixe>, <Direcci??n do Eixe ou Plano> ]
RotateText=RotaTexto
RotateText.Syntax=[ <Texto>, <??ngulo antihorario> ]
Row=Fila
Row.Syntax=[ <Cela da Folla de C??lculo> ]
RunClickScript=ExecutaAoClic
RunClickScript.Syntax=[ <Obxecto> ]
RunUpdateScript=ExecutaAoActualizar
RunUpdateScript.Syntax=[ <Obxecto> ]
SD=DE
SDX=DTx
SDX.Syntax=[ <Lista de puntos> ]
SDY=DTy
SDY.Syntax=[ <Lista de puntos> ]
SVD=DVS
SVD.Syntax=[ <Matriz> ]
SXX.Syntax=[ <Lista de N??meros> ]\n[ <Lista de puntos> ]
SXY.Syntax=[ <Lista de puntos> ]\n[ <Lista de N??meros>, <Lista de N??meros> ]
SYY.Syntax=[ <Lista de puntos> ]
Sample=Mostra
Sample.Syntax=[ <Lista>, <Tama??o> ]\n[ <Lista>, <Tama??o>, <Con substituci??n> ]
SampleSD=DEmostral
SampleSD.SyntaxCAS=[ <Lista de N??meros> ]
SampleSDX=DTxMostra
SampleSDX.Syntax=[ <Lista de puntos> ]
SampleSDY=DTyMostra
SampleSDY.Syntax=[ <Lista de puntos> ]
SampleVariance=VarianzaMostra
SampleVariance.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
SampleVariance.SyntaxCAS=[ <Lista de N??meros> ]
ScientificText=Notaci??nCient??ficaTexto
ScientificText.Syntax=[ <N??mero> ]\n[ <N??mero>, <Precisi??n> ]
SecondAxis=EixeSecundario
SecondAxis.Syntax=[ <C??nica> ]
SecondAxisLength=LonxitudeSemieixeSecundario
SecondAxisLength.Syntax=[ <C??nica> ]
Sector.Syntax=[ <C??nica>, <Punto inicial>, <Punto inicial> ]\n[ <C??nica>, <Valor par??metro>, <Valor par??metro> ]
Segment=Segmento
Segment.Syntax=[ <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Lonxitude> ]
SelectObjects=SeleccionarObxectos
SelectObjects.Syntax=[ ]\n[ <Obxecto>, <Obxecto>, ... ]
SelectedElement=ElementoSeleccionado
SelectedElement.Syntax=[ <Lista> ]
SelectedIndex=??ndiceSeleccionado
SelectedIndex.Syntax=[ <Lista> ]
Semicircle=Semicircunferencia
Semicircle.Syntax=[ <Punto inicial>, <Punto inicial> ]
Sequence=Secuencia
Sequence.Syntax=[ <Valor final> ]\n[ <Valor inicial>, <Valor final> ]\n[ <Valor inicial>, <Valor final>, <Incremento> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final>, <Incremento> ]
SetActiveView=VistaActiva
SetActiveView.Syntax=[ <Vista> ]\n[ <Plano> ]
SetAxesRatio=Raz??nEixes
SetAxesRatio.Syntax=[ <N??mero>, <N??mero> ]
SetAxesRatio.Syntax3D=[ <N??mero>, <N??mero> ]\n[ <N??mero>, <N??mero>, <N??mero> ]
SetBackgroundColor=CorFondo
SetBackgroundColor.Syntax=[ <Cor> ]\n[ <Obxecto>, <Cor> ]\n[ <Vermello>, <Verde>, <Azul> ]\n[ <Obxecto>, <Vermello>, <Verde>, <Azul> ]
SetCaption=Subt??tulo
SetCaption.Syntax=[ <Obxecto>, <Texto> ]
SetColor=Cor
SetColor.Syntax=[ <Obxecto>, <Cor> ]\n[ <Obxecto>, <Vermello>, <Verde>, <Azul> ]
SetConditionToShowObject=Condici??nParaMostrar
SetConditionToShowObject.Syntax=[ <Obxecto>, <Condici??n> ]
SetConstructionStep=EstablecerpasoConstruci??n
SetConstructionStep.Syntax=[ <N??mero> ]
SetCoords=EstablecerCoordenadas
SetCoords.Syntax=[ <Obxecto>, <desp x>, < desp y> ]\n[ <Obxecto>, <desp x>, < desp y>, <z> ]
SetDecoration=Decoraci??n
SetDecoration.Syntax=[ <Obxecto>, <N??mero> ]\n[ <Raio (segmento)>, <N??mero>, <N??mero>]
SetDynamicColor=CorDin??mico
SetDynamicColor.Syntax=[ <Obxecto>, <Vermello>, <Verde>, <Azul> ]\n[ <Obxecto>, <Vermello>, <Verde>, <Azul>, <Opacidade> ]
SetFilling=Opacidade
SetFilling.Syntax=[ <Obxecto>, <N??mero> ]
SetFixed=Fixa
SetFixed.Syntax=[ <Obxecto>, <true | false> ]\n[ <Obxecto>, <true | false>, <true | false> ]
SetImage=Imaxe
SetImage.Syntax=[ <Obxecto>, <Imaxe> ]\n[ <Obxecto>, <Texto> ]
SetLabelMode=ModoR??tulo
SetLabelMode.Syntax=[ <Obxecto>, <N??mero> ]
SetLayer=Capa
SetLayer.Syntax=[ <Obxecto>, <Capa> ]
SetLevelOfDetail=NivelDeDetalle
SetLevelOfDetail.Syntax=[ <Superficie>, <Nivel de detalle> ]
SetLineStyle=EstiloLi??a
SetLineStyle.Syntax=[ <Obxecto>, <N??mero> ]
SetLineThickness=GrosorLi??a
SetLineThickness.Syntax=[ <Obxecto>, <N??mero> ]
SetPerspective=Disposici??n
SetPerspective.Syntax=[ <Texto> ]
SetPointSize=Tama??oPunto
SetPointSize.Syntax=[ <Obxecto>, <N??mero> ]
SetPointStyle=EstiloPunto
SetPointStyle.Syntax=[ <Punto inicial>, <N??mero> ]
SetSeed=Semente
SetSeed.Syntax=[ <N??mero positivo> ]
SetSpinSpeed=VelocidadeXiro
SetSpinSpeed.Syntax=[ <N??mero> ]
SetTooltipMode=ModoDescrici??n
SetTooltipMode.Syntax=[ <Obxecto>, <N??mero> ]
SetTrace=Rastro
SetTrace.Syntax=[ <Obxecto>, <true | false> ]
SetValue=Valor
SetValue.Syntax=[ <Booleano>, <0|1> ]\n[ <Obxecto>, <Obxecto> ]\n[ <Lista>, <N??mero>, <Obxecto> ]
SetViewDirection=FixaDirecci??nVista
SetViewDirection.Syntax=[ ]\n[ <Direction> ]\n[ <Direction>, <Booleana para animaci??n> ]
SetVisibleInView=VisibleNaVista
SetVisibleInView.Syntax=[ <Obxecto>, <N??mero de vista 1|2>, <Booleano> ]
Shear=Cisalla
Shear.Syntax=[ <Obxecto>, <Lado (recta | semirecta | segmento)>, <Raz??n> ]
ShortestDistance=Cami??oM??nimo
ShortestDistance.Syntax=[ <Lista de segmentos>, <Punto inicial>, <Punto final>, <Ponderaci??n (booleana)> ]
ShowAxes=MostraEixes
ShowAxes.Syntax=[]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowGrid=MostraCuadr??cula
ShowGrid.Syntax=[]\n[ <Booleano> ]\n[ <Vista>, <Booleano> ]
ShowLabel=AmosaR??tulo
ShowLabel.Syntax=[ <Obxecto>, <Booleano> ]
ShowLayer=AmosaCapa
ShowLayer.Syntax=[ <N??mero> ]
Shuffle=Baralla
Shuffle.Syntax=[ <Lista> ]
SigmaXX.Syntax=[ <Lista de puntos> ]\n[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
SigmaXY.Syntax=[ <Lista de puntos> ]\n[ <Lista de  abscisas>, <Lista de ordenadas> ]
SigmaYY.Syntax=[ <Lista de puntos> ]
Simplify=Simplifica
Simplify.Syntax=[ <Funci??n> ]\n[ <Texto> ]
Simplify.SyntaxCAS=[ <Funci??n> ]
Slider=Esvarador
Slider.Syntax=[ <M??nimo>, <M??ximo>, <Incremento>, <Velocidade>, <Ancho>, <?? ??ngulo>, <Horizontal>, <Animaci??n>, <Aleatorio> ]
Slope=Pendente
Slope.Syntax=[ <Lado (recta | semirecta | segmento)> ]
SlopeField=CampoDirecci??ns
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <N??mero n> ]\n[ <f(x, y)>, <N??mero n>, <Multiplicador lonxitude a> ]\n[ <f(x, y)>, <N??mero n>, <Multiplicador lonxitude a>, <M??n x>, <M??n y>, <M??x x>, <M??x y> ]
SlowPlot=Gr??ficaAnimada
SlowPlot.Syntax=[ <Funci??n> ]\n[ <Funci??n>, <Booleana repetir> ]
Solutions=Soluci??ns
Solutions.Syntax=[ <Ecuaci??n> ]
Solutions.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de ecuaci??ns>, <Lista de variables> ]
Solve=Resolve
Solve.Syntax=[ <Ecuaci??n> ]
Solve.SyntaxCAS=[ <Ecuaci??n en x> ]\n[ <Ecuaci??n>, <Variable> ]\n[ <Lista de ecuaci??ns>, <Lista de variables> ]\n[ <Lista de ecuaci??ns  param??tricas>, <Lista de variables> ]\n[ <Ecuaci??n>, <Variable>, <Lista de suposici??ns> ]
SolveCubic=ResolveCubic
SolveCubic.SyntaxCAS=[ <Polinomio c??bico> ]
SolveODE=ResolveODE
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Punto en f> ]\n[ <f'(x, y)>, <Valor x inicial>, <Valor y inicial>, <Valor x final>, <Paso> ]\n[ <y'>, <x'>, <Valor x inicial>, <Valor y inicial>, <Valor t final>, <Paso> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Valor x inicial>, <Valor y inicial>, <Valor y' inicial>, <Valor x final>, <Paso> ]
SolveODE.SyntaxCAS=[ <Ecuaci??n> ]\n[ <Ecuaci??n>, <Punto(s) de f> ]\n[ <Ecuaci??n>, <Punto(s) de f>, <Punto(s) de f'> ]\n[ <Ecuaci??n>, <Variable dependente>, <Variable independente>, <Punto(s) de f> ] \n[ <Ecuaci??n>, <Variable dependente>, <Variable independente>, <Punto(s) de f>, <Punto(s) de f'> ]
SolveQuartic=ResolveCu??rtica
SolveQuartic.SyntaxCAS=[ <Polinomio cu??rtico> ]
Sort=Ordena
Sort.Syntax=[ <Lista> ]\n[ <Valores>, <Claves> ]
Spearman=CoeficienteCorrelaci??nSpearman
Spearman.Syntax=[ <Lista de puntos> ]\n[ <Lista de N??meros>, <Lista de N??meros> ]
Sphere=Esfera
Sphere.Syntax=[ <Punto inicial>, <Raio> ]\n[ <Punto inicial>, <Punto inicial> ]
Spline.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Grado ??? 3> ]\n[ <Lista de puntos>, <Grado ??? 3>, <Funci??n peso> ]
Split=Separa
Split.Syntax=[ <Texto>, <Lista de textos para separar> ]
StartAnimation=IniciaAnimaci??n
StartAnimation.Syntax=[ ]\n[ <Booleano> ]\n[ <Control deslizante (esvarador) ou punto>, <Control deslizante (esvarador) ou punto>, ... ]\n[ <Control deslizante (esvarador) ou punto>, <Control deslizante (esvarador) ou punto>, ..., <Booleano> ]
StartRecord=IniciaGravaci??n
StartRecord.Syntax=[ ]\n[ <Booleano> ]
StemPlot=Gr??ficoTaloFollas
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Axuste -1|0|1> ]
StepGraph=Gr??ficoEscaleira
StepGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Unir (booleana)> ]\n[ <Lista de  abscisas>, <Lista de ordenadas> ]\n[ <Lista de puntos>, <Unir (booleana)>, <Estilo de punto> ]\n[ <Lista de  abscisas>, <Lista de ordenadas>, <Unir (booleana)> ]\n[ <Lista de  abscisas>, <Lista de ordenadas>, <Unir (booleana)>, <Estilo de punto> ]
StickGraph=Gr??ficoLi??as
StickGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Horizontal (booleana)> ]\n[ <Lista de  abscisas>, <Lista de ordenadas> ]\n[ <Lista de  abscisas>, <Lista de ordenadas>, <Horizontal (booleana)> ]
Stretch=Estira
Stretch.Syntax=[ <Obxecto>, <Vector inicial> ]\n[ <Obxecto>, <Lado (recta | semirecta | segmento)>, <Raz??n> ]
Substitute=Substit??e
Substitute.SyntaxCAS=[ <Expresi??n>, <Lista de substituci??ns> ]\n[ <Expresi??n>, <De>, <A> ]
Sum=Suma
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <N??mero de elementos> ]\n[ <Lista>, <Lista frecuencias> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expresi??n>, <Variable>, <Valor inicial>, <Valor final> ]
SumSquaredErrors=SumaCadradoDiferenzas
SumSquaredErrors.Syntax=[ <Lista de puntos>, <Funci??n> ]
SurdText=TextoFracci??nRadical
SurdText.Syntax=[ <Punto inicial> ]\n[ <N??mero> ]\n[ <N??mero>, <Lista> ]
Surface=Superficie
Surface.Syntax=[ <Funci??n>, <??ngulo antihorario> ]\n[ <Curva>, <??ngulo antihorario>, <Lado (recta | semirecta | segmento)> ]\n[ <Expresi??n>, <Expresi??n>, <Expresi??n>, <Par??metro 1>, <Valor inicial>, <Valor final>, <Par??metro 2>, <Valor inicial>, <Valor final> ]
TDistribution=Distribuci??nT
TDistribution.Syntax=[ <Graos de liberdade>, <Valor da variable> ]\n[ <Graos de liberdade>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <Graos de liberdade>, x, <Acumula (Booleana)> ]
TDistribution.SyntaxCAS=[ <Graos de liberdade>, <Valor da variable> ]
TMean2Estimate=IntervaloT2
TMean2Estimate.Syntax=[ <Lista 1 de datos mostrais>, <Lista 2 de datos mostrais>, <Nivel de confianza>, <Composici??n (booleana)> ]\n[ <Media mostral 1>, <Desviaci??n t??pica mostral 1>, <Tama??o mostral 1>, <Media mostral 2>, <Desviaci??n t??pica mostral 2>, <Tama??o mostral 2>, <Nivel de confianza>, <Composici??n (booleana)> ]
TMeanEstimate=IntervaloT
TMeanEstimate.Syntax=[ <Lista de datos mostra>, <Nivel de confianza> ]\n[ <Media da mostra>, <Desviaci??n t??pica da mostra>, <Tama??o da mostra>, <Nivel de confianza> ]
TTest=TestT
TTest.Syntax=[ <Lista de datos mostra>, <Media hipotetizada>, <Cola> ]\n[ <Media da mostra>, <Desviaci??n t??pica da mostra>, <Tama??o da mostra>, <Media hipotetizada>, <Cola> ]
TTest2=TestT2
TTest2.Syntax=[ <Lista 1 de datos mostrais>, <Lista 2 de datos mostrais>, <Cola>, <Composici??n (booleana)> ]\n[ <Media mostral 1>, <Desviaci??n t??pica mostral 1>, <Tama??o mostral 1>, <Media mostral 2>, <Desviaci??n t??pica mostral 2>, <Tama??o mostral 2>, <Cola>, <Composici??n (booleana)> ]
TTestPaired=TestTParellado
TTestPaired.Syntax=[ <Lista 1 de datos mostrais>, <Lista 2 de datos mostrais>, <Cola> ]
TableText=T??boaTexto
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Ali??amento do texto> ]\n[ <Lista>, <Lista>, ..., <Ali??amento do texto>, <Anchura m??nima de cela> ]\n[ <Lista>, <Lista>, ..., <Ali??amento do texto>, <Anchura m??nima de cela>, <Altura m??nima de cela> ]
Take=Colle
Take.Syntax=[ <Lista>, <Posici??n inicial>, <Posici??n final> ]\n[ <Lista>, <Posici??n inicial> ]\n[ <Texto>, <Posici??n inicial>, <Posici??n final> ]\n[ <Texto>, <Posici??n inicial> ]
Take.SyntaxCAS=[ <Lista>, <Posici??n inicial> ]\n[ <Lista>, <Posici??n inicial>, <Posici??n final> ]\n[ <Texto>, <Posici??n inicial>, <Posici??n final> ]\n[ <Texto>, <Posici??n inicial> ]
Tangent=Tanxente
Tangent.Syntax=[ <Punto inicial>, <C??nica> ]\n[ <Punto inicial>, <Funci??n> ]\n[ <Valor x>, <Curva> ]\n[ <Punto na gr??fica>, <Funci??n> ]\n[ <Lado (recta | semirecta | segmento)>, <C??nica> ]\n[ <C??nica>, <C??nica> ]
Tangent.SyntaxCAS=[ <N??mero>, <Funci??n> ]\n[ <Punto inicial>, <Obxecto> ]
TaylorSeries=PolinomioTaylor
TaylorSeries.Syntax=[ <Funci??n>, <Punto na gr??fica>, <Orde> ]
TaylorSeries.SyntaxCAS=[ <Expresi??n>, <Punto na gr??fica>, <Orde> ]\n[ <Expresi??n>, <Variable>, <Valor>, <Orde> ]
Tetrahedron=Tetraedro
Tetrahedron.Syntax=[ <Tri??ngulo equil??tero> ]\n[ <Punto inicial>, <Punto inicial>, <Punto inicial> ]\n[ <Punto inicial>, <Punto inicial>, <Direction> ]
Text=Texto
Text.Syntax=[ <Obxecto> ]\n[ <Obxecto>, <Substit??e variables (booleana)> ]\n[ <Obxecto>, <Punto inicial> ]\n[ <Obxecto>, <Punto inicial>, <Substit??e variables (booleana)> ]\n[ <Obxecto>, <Punto inicial>, <Substit??e variables (booleana)>, <Valor l??gico para f??rmula LaTeX> ]\n[ <Obxecto>, <Punto inicial>, <Substit??e variables (booleana)>, <Valor l??gico para f??rmula LaTeX>, <Ali??aci??n horizontal -1|0|1> ]\n[ <Obxecto>, <Punto inicial>, <Substit??e variables (booleana)>, <Valor l??gico para f??rmula LaTeX>, <Ali??aci??n horizontal -1|0|1>, <Ali??aci??n vertical -1|0|1> ]
TextToUnicode=TextoAC??digo
TextToUnicode.Syntax=[ <Texto> ]
Textfield=CampoEntrada
Textfield.Syntax=[ <Obxecto vinculado> ]
TiedRank=RangoAxustado
TiedRank.Syntax=[ <Lista> ]
ToBase=CambiarABase
ToBase.Syntax=[ <N??mero>, <Base> ]
ToComplex=EnComplexo
ToComplex.Syntax=[ <Vector inicial> ]
ToExponential=EnExponencial
ToExponential.SyntaxCAS=[ <N??mero complexo> ]
ToPoint=EnPunto
ToPoint.Syntax=[ <N??mero complexo> ]
ToPolar=EnPolar
ToPolar.Syntax=[ <N??mero complexo> ]\n[ <Vector inicial> ]
ToolImage=ImaxenFerramenta
ToolImage.Syntax=[ <N??mero> ]\n[ <N??mero>, <Punto inicial> ]\n[ <N??mero>, <Punto inicial>, <Punto inicial> ]
Top=Teito
Top.Syntax=[ <Cu??drica> ]
Translate=Translada
Translate.Syntax=[ <Obxecto>, <Vector inicial> ]\n[ <Vector inicial>, <Punto inicial> ]
Transpose=Trasp??n
Transpose.Syntax=[ <Matriz> ]
TrapezoidalSum=SumaTrapezoidal
TrapezoidalSum.Syntax=[ <Funci??n>, <Valor x inicial>, <Valor x final>, <N??mero de trapecios> ]
TravelingSalesman=Viaxante
TravelingSalesman.Syntax=[ <Lista de puntos> ]
TriangleCenter=CentroTri??ngulo
TriangleCenter.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <N??mero> ]
TriangleCurve=CurvaTri??ngular
TriangleCurve.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <Ecuaci??n> ]
Triangular=Distribuci??nTriangular
Triangular.Syntax=[ <L??mite inferior>, <L??mite superior>, <Modo>, <Valor da variable> ]\n[ <L??mite inferior>, <L??mite superior>, <Modo>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <L??mite inferior>, <L??mite superior>, <Modo>, x, <Acumula (Booleana)> ]
TrigCombine=TrigoProdutoASuma
TrigCombine.Syntax=[ <Expresi??n> ]\n[ <Expresi??n>, <Funci??n modelo> ]
TrigExpand=TrigoExpande
TrigExpand.Syntax=[ <Expresi??n> ]\n[ <Expresi??n>, <Funci??n modelo> ]
TrigExpand.SyntaxCAS=[ <Expresi??n> ]\n[ <Expresi??n>, <Funci??n modelo> ]\n[ <Expresi??n>, <Funci??n modelo>, <Variable preferida> ]\n[ <Expresi??n>, <Funci??n modelo>, <Variable preferida>, <Variable preferida> ]
TrigSimplify=TrigoSimplifica
TrigSimplify.Syntax=[ <Expresi??n> ]
Trilinear=Trilineal
Trilinear.Syntax=[ <Punto inicial>, <Punto inicial>, <Punto inicial>, <N??mero>, <N??mero>, <N??mero> ]
TurningPoint=PuntoInflexi??n
TurningPoint.Syntax=[ <Polinomio> ]
TurningPoint.SyntaxCAS=[ <Funci??n> ]
Turtle=Tartaruga
Turtle.Syntax=[]
TurtleBack=TartarugaRetrocede
TurtleBack.Syntax=[ <Tartaruga>, <Distancia> ]
TurtleDown=TartarugaDebuxa
TurtleDown.Syntax=[ <Tartaruga> ]
TurtleForward=TartarugaAvanza
TurtleForward.Syntax=[ <Tartaruga>, <Distancia> ]
TurtleLeft=TartarugaEsquerda
TurtleLeft.Syntax=[ <Tartaruga>, <??ngulo antihorario> ]
TurtleRight=TartarugaDereita
TurtleRight.Syntax=[ <Tartaruga>, <??ngulo antihorario> ]
TurtleUp=TartarugaEnriba
TurtleUp.Syntax=[ <Tartaruga> ]
Type=Tipo
Type.Syntax=[ <Obxecto> ]
UnicodeToLetter=C??digoALetra
UnicodeToLetter.Syntax=[ <N??mero positivo> ]
UnicodeToText=C??digoATexto
UnicodeToText.Syntax=[ <Lista de Enteiros> ]
Uniform=Distribuci??nUniforme
Uniform.Syntax=[ <L??mite inferior>, <L??mite superior>, <Valor da variable> ]\n[ <L??mite inferior>, <L??mite superior>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <L??mite inferior>, <L??mite superior>, x, <Acumula (Booleana)> ]
Union=Uni??n
Union.Syntax=[ <Lista>, <Lista> ]\n[ <Pol??gono>, <Pol??gono> ]
Unique=??nico
Unique.Syntax=[ <Lista> ]
UnitOrthogonalVector=VectorUnitarioPerpendicular
UnitOrthogonalVector.Syntax=[ <Lado (recta | semirecta | segmento)> ]\n[ <Raio (segmento)> ]\n[ <Vector inicial> ]
UnitOrthogonalVector.Syntax3D=[ <Lado (recta | semirecta | segmento)> ]\n[ <Raio (segmento)> ]\n[ <Vector inicial> ]\n[ <Plano> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vector inicial> ]
UnitVector=VectorUnitario
UnitVector.Syntax=[ <Obxecto> ]
UnitVector.SyntaxCAS=[ <Vector inicial> ]
UpdateConstruction=ActualizaConstruci??n
UpdateConstruction.Syntax=[ ]\n[ <NN??mero de veces> ]
UpperSum=SumaSuperior
UpperSum.Syntax=[ <Funci??n>, <Valor x inicial>, <Valor x final>, <N??mero de rect??ngulos> ]
Variance=Varianza
Variance.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
Vector.Syntax=[ <Punto inicial> ]\n[ <Punto inicial>, <Punto final> ]
Vertex=V??rtice
Vertex.Syntax=[ <C??nica> ]\n[ <Sistema de inecuaci??ns> ]\n[ <Pol??gono> ]\n[ <Pol??gono>, <??ndice> ]\n[ <Raio (segmento)>, <??ndice> ]
VerticalText=TextoVertical
VerticalText.Syntax=[ <Texto> ]\n[ <Texto>, <Punto inicial> ]
Volume.Syntax=[ <S??lido> ]
Voronoi.Syntax=[ <Lista de puntos> ]
Weibull=Distribuci??nWeibull
Weibull.Syntax=[ <Forma>, <Escala>, <Valor da variable> ]\n[ <Forma>, <Escala>, <Valor da variable>, <Acumula (Booleana)> ]\n[ <Forma>, <Escala>, x, <Acumula (Booleana)> ]
Weibull.SyntaxCAS=[ <Forma>, <Escala>, <Valor da variable> ]
ZMean2Estimate=IntervaloZ2
ZMean2Estimate.Syntax=[ <Lista 1 de datos mostrais>, <Lista 2 de datos mostrais>, <??1>, <??2>, <Nivel de confianza> ]\n[ <Media mostral 1>, <??1>, <Tama??o mostral 1>, <Media mostral 2>, <??2>, <Tama??o mostral 2>, <Nivel de confianza> ]
ZMean2Test=TestZMedia2
ZMean2Test.Syntax=[ <Lista 1 de datos mostrais>, <??1>, <Lista 2 de datos mostrais>, <??2>, <Cola> ]\n[ <Media mostral 1>, <??1>, <Tama??o mostral 1>, <Media mostral 2>, <??2>, <Tama??o mostral 2>, <Cola> ]
ZMeanEstimate=IntervaloZ
ZMeanEstimate.Syntax=[ <Lista de datos mostra>, <??>, <Nivel de confianza> ]\n[ <Media da mostra>, <??>, <Tama??o da mostra>, <Nivel de confianza> ]
ZMeanTest=TestZMedia
ZMeanTest.Syntax=[ <Lista de datos mostra>, <??>, <Media hipotetizada>, <Cola> ]\n[ <Media da mostra>, <??>, <Tama??o da mostra>, <Media hipotetizada>, <Cola> ]
ZProportion2Estimate=IntervaloZProporci??n2
ZProportion2Estimate.Syntax=[ <Proporci??n mostral 1>, <Tama??o mostral 1>, <Proporci??n mostral 2>, <Tama??o mostral 2>, <Nivel de confianza> ]
ZProportion2Test=TestZProporci??n2
ZProportion2Test.Syntax=[ <Proporci??n mostral 1>, <Tama??o mostral 1>, <Proporci??n mostral 2>, <Tama??o mostral 2>, <Cola> ]
ZProportionEstimate=IntervaloZProporci??n
ZProportionEstimate.Syntax=[ <Proporci??n mostral>, <Tama??o da mostra>, <Nivel de confianza> ]
ZProportionTest=TestZProporci??n
ZProportionTest.Syntax=[ <Proporci??n mostral>, <Tama??o da mostra>, <Proporci??n hipotetizada>, <Cola> ]
Zip=Substit??eLista
Zip.Syntax=[ <Expresi??n>, <Variable1>, <Lista1>, <Variable2>, <Lista2>, ... ]
Zipf=Distribuci??nZipf
Zipf.Syntax=[ <N??mero de elementos>, <Expo??ente> ]\n[ <N??mero de elementos>, <Expo??ente>, <Acumula (Booleana)> ]\n[ <N??mero de elementos>, <Expo??ente>, <Valor da variable>, <Acumula (Booleana)> ]
Zipf.SyntaxCAS=[ <N??mero de elementos>, <Expo??ente>, <Valor da variable>, <Acumula (Booleana)> ]
ZoomIn=ZoomAchega
ZoomIn.Syntax=[ ]\n[ <Factor de escala> ]\n[ <Factor de escala>, <Punto central> ]\n[ <M??n x>, <M??n y>, <M??x x>, <M??x y> ]\n[ <M??n x>, <M??n y>, <M??n z>, <M??x x>, <M??x y>, <M??x z> ]
ZoomOut=ZoomAfasta
ZoomOut.Syntax=[ <Factor de escala> ]\n[ <Factor de escala>, <Punto central> ]
mad=dm
mad.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
mean=media
mean.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
nCr.Syntax=[ <N??mero n>, <N??mero k> ]
stdev=dsvst
stdev.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]
stdevp=dsvstm
stdevp.Syntax=[ <Lista datos en bruto> ]\n[ <Lista de N??meros>, <Lista frecuencias> ]