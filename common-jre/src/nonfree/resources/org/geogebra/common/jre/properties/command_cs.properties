# Copyright (c) GeoGebra GmbH, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA=AnalyzaRozptylu
ANOVA.Syntax=[ <Seznam>, <Seznam>, ... ]
AffineRatio=DeliciPomer
AffineRatio.Syntax=[ <Bod>, <Bod>, <Bod> ]
Angle=Uhel
Angle.Syntax=[ <Objekt> ]\n[ <Vektor>, <Vektor> ]\n[ <P????mka>, <P????mka> ]\n[ <Bod>, <Vrchol>, <Bod> ]\n[ <Bod>, <Vrchol>, <??hel> ]
Angle.Syntax3D=[ <Objekt> ]\n[ <Vektor>, <Vektor> ]\n[ <P????mka>, <P????mka> ]\n[ <P????mka>, <Rovina> ]\n[ <Rovina>, <Rovina> ]\n[ <Bod>, <Vrchol>, <Bod> ]\n[ <Bod>, <Vrchol>, <??hel> ]\n[ <Bod>, <Bod>, <Bod>, <Sm??r> ]
AngularBisector=OsaUhlu
AngularBisector.Syntax=[ <P????mka>, <P????mka> ]\n[ <Bod>, <Bod>, <Bod> ]
Append=Pripojit
Append.Syntax=[ <Seznam>, <Objekt> ]\n[ <Objekt>, <Seznam> ]
ApplyMatrix=PouzitiMatice
ApplyMatrix.Syntax=[ <Matice>, <Objekt> ]
Arc=Oblouk
Arc.Syntax=[ <Kru??nice>, <Bod>, <Bod> ]\n[ <Elipsa>, <Bod>, <Bod> ]\n[ <Kru??nice>, <Hodnota parametru>, <Hodnota parametru> ]\n[ <Elipsa>, <Hodnota parametru>, <Hodnota parametru> ]
AreCollinear=JsouKolinearni
AreCollinear.Syntax=[ <Bod>, <Bod>, <Bod> ]
AreConcurrent=ProtinajiciSe
AreConcurrent.Syntax=[ <P????mka>, <P????mka>, <P????mka> ]
AreConcyclic=JsouNaKruznici
AreConcyclic.Syntax=[ <Bod>, <Bod>, <Bod>, <Bod> ]
AreCongruent=JsouShodne
AreCongruent.Syntax=[ <Objekt>, <Objekt> ]
AreEqual=JsouTotozne
AreEqual.Syntax=[ <Objekt>, <Objekt> ]
AreParallel=JsouRovnobezne
AreParallel.Syntax=[ <P????mka>, <P????mka> ]
ArePerpendicular=JsouKolme
ArePerpendicular.Syntax=[ <P????mka>, <P????mka> ]
Area=Obsah
Area.Syntax=[ <Ku??elose??ka> ]\n[ <Mnoho??heln??k> ]\n[ <Bod>, ..., <Bod> ]
Assume=Predpoklad
Assume.SyntaxCAS=[ <Podm??nka>, <V??raz> ]
Asymptote=Asymptota
Asymptote.Syntax=[ <Objekt> ]
AttachCopyToView=PripojitKopiiKPohledu
AttachCopyToView.Syntax=[ <Objekt>, <Pohled 0|1|2> ]\n[ <Objekt>, <Pohled 0|1|2>, <Bod 1>, <Bod 2>, <Bod obrazovky 1>, <Bod obrazovky 2> ]
Axes=Osy
Axes.Syntax=[ <Ku??elose??ka> ]
Axes.Syntax3D=[ <Ku??elose??ka> ]\n[ <Kvadrika> ]
AxisStepX=KrokNaOseX
AxisStepX.Syntax=[ ]
AxisStepY=KrokNaOseY
AxisStepY.Syntax=[ ]
BarChart=SloupcovyGraf
BarChart.Syntax=[ <Seznam dat>, <Seznam ??etnost??> ]\n[ <Seznam zdrojov??ch dat>, <??????ka sloupc??>, <Vertik??ln?? m??????tko (voliteln??)> ]\n[ <Seznam dat>, <Seznam ??etnost??>, <??????ka sloupc??> ]\n[ <Po????te??n?? hodnota>, <Koncov?? hodnota>, <Seznam v????ek> ]\n[ <Po????te??n?? hodnota>, <Koncov?? hodnota>, <V??raz>, <Prom??nn??>, <Od>, <Do> ]\n[ <Po????te??n?? hodnota>, <Koncov?? hodnota>, <V??raz>, <Prom??nn??>, <Od>, <Do>, <Krok> ]
Barycenter=Barycentrum
Barycenter.Syntax=[ <Seznam bod??>, <Seznam vah> ]
Bernoulli.Syntax=[ <Pravd??podobnost>, <Kumulativn?? (logick?? hodnota)> ]
BetaDist.Syntax=[ <Alfa>, <Beta>, <Hodnota n??hodn?? veli??iny> ]\n[ <Alfa>, <Beta>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)>  ]\n[ <Alfa>, <Beta>, x, <Kumulativn?? (logick?? hodnota)> ]
Binomial=KombinacniCislo
Binomial.Syntax=[ <????slo n>, <????slo r> ]
BinomialDist=Binomicke
BinomialDist.Syntax=[ <Po??et pokus??>, <Pravd??podobnost ??sp??chu> ]\n[ <Po??et pokus??>, <Pravd??podobnost ??sp??chu>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Po??et pokus??>, <Pravd??podobnost ??sp??chu>, <Seznam hodnot> ]\n[ <Po??et pokus??>, <Pravd??podobnost ??sp??chu>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
BinomialDist.SyntaxCAS=[ <Po??et pokus??>, <Pravd??podobnost ??sp??chu>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
Bottom=DolniPodstava
Bottom.Syntax=[ <Kvadrika> ]
BoxPlot=ObdelnikovyDiagram
BoxPlot.Syntax=[ <y-Posun>, <y-M??????tko>, <Seznam zdrojov??ch dat> ]\n[ <y-Posun>, <y-M??????tko>, <Seznam zdrojov??ch dat>, <Odlehl?? hodnoty (logick?? hodnota)> ]\n[ <y-Posun>, <y-M??????tko>, <Seznam dat>, <Seznam ??etnost??>, <Odlehl?? hodnoty (logick?? hodnota)> ]\n[ <y-Posun>, <y-M??????tko>, <Po????te??n?? hodnota>, <Q1>, <Median>, <Q3>, <Koncov?? hodnota> ]
Button=Tlacitko
Button.Syntax=[ ]\n[ <Titulek> ]
CASLoaded.Syntax=[]
CFactor=CFaktor
CFactor.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Prom??nn??> ]
CIFactor=CIFaktor
CIFactor.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Prom??nn??> ]
CSolutions=CReseni
CSolutions.SyntaxCAS=[ <Rovnice> ]\n[ <Rovnice>, <Prom??nn??> ]\n[ <Seznam rovnic>, <Seznam prom??nn??ch> ]
CSolve=CVyresit
CSolve.SyntaxCAS=[ <Rovnice> ]\n[ <Rovnice>, <Prom??nn??> ]\n[ <Seznam rovnic>, <Seznam prom??nn??ch> ]
Cauchy.Syntax=[ <Median>, <Stupnice>, <Hodnota n??hodn?? veli??iny> ]\n[ <Median>, <Stupnice>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)>  ]\n[ <Median>, <Stupnice>, x, <Kumulativn?? (logick?? hodnota)> ]
Cauchy.SyntaxCAS=[ <Median>, <Stupnice>, <Hodnota n??hodn?? veli??iny> ]
Cell=Bunka
Cell.Syntax=[ <Soupec>, <????dek> ]
CellRange=OblastBunek
CellRange.Syntax=[ <Adresa po????te??n?? bu??ky>, <Adresa koncov?? bu??ky> ]
Center=Stred
Center.Syntax=[ <Ku??elose??ka> ]
Center.Syntax3D=[ <Ku??elose??ka> ]\n[ <Kvadrika> ]
CenterView=VycentrovatNakresnu
CenterView.Syntax=[ <St??ed> ]
Centroid=Teziste
Centroid.Syntax=[ <Mnoho??heln??k> ]
CharacteristicPolynomial=CharakteristickyPolynom
CharacteristicPolynomial.Syntax=[ <Matice> ]
Checkbox=ZaskrtavaciPolicko
Checkbox.Syntax=[ ]\n[ <Titulek> ]\n[ <Seznam> ]\n[ <Titulek>, <Seznam> ]
ChiSquared=Chi2
ChiSquared.Syntax=[ <Stupn?? volnosti>, <Hodnota n??hodn?? veli??iny> ]\n[ <Stupn?? volnosti>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Stupn?? volnosti>, x, <Kumulativn?? (logick?? hodnota)> ]
ChiSquared.SyntaxCAS=[ <Stupn?? volnosti>, <Prom??nn??> ]
ChiSquaredTest=????Test
ChiSquaredTest.Syntax=[ <Matice> ]\n[ <Seznam>, <Seznam> ]\n[ <Matice>, <Matice> ]
Circle=Kruznice
Circle.Syntax=[ <Bod>, <Polom??r> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Bod> ]
Circle.Syntax3D=[ <Bod>, <Polom??r> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <P????mka>, <Bod> ]\n[ <Bod>, <Polom??r>, <Sm??r> ]\n[ <Bod>, <Bod>, <Sm??r> ]
CircleArc=KruhObloukUhlu
CircleArc.Syntax=[ <St??ed>, <Bod>, <Bod> ]
CircleSector=KruhovaVysecDanaUhlem
CircleSector.Syntax=[ <St??ed>, <Bod>, <Bod> ]
CircumcircleArc=KruhOblouk3Body
CircumcircleArc.Syntax=[ <Bod>, <Bod>, <Bod> ]
CircumcircleSector=KruhVysec3Body
CircumcircleSector.Syntax=[ <Bod>, <Bod>, <Bod> ]
Circumference=ObvodKuzelosecky
Circumference.Syntax=[ <Ku??elose??ka> ]
Classes=Tridy
Classes.Syntax=[ <Seznam dat>, <????slo t????dy> ]\n[ <Seznam dat>, <Start>, <Velikost t????dy> ]
ClosestPoint=NejblizsiBod
ClosestPoint.Syntax=[ <Dr??ha>, <Bod> ]\n[ <P????mka>, <P????mka> ]
ClosestPointRegion=NejblizsiBodOblasti
ClosestPointRegion.Syntax=[ <Oblast>, <Bod> ]
Coefficients=Koeficienty
Coefficients.Syntax=[ <Polynom> ]\n[ <Ku??elose??ka> ]
Coefficients.SyntaxCAS=[ <Polynom> ]\n[ <Polynom>, <Prom??nn??> ]
Column=Sloupec
Column.Syntax=[ <Bu??ky> ]
ColumnName=NazevSloupce
ColumnName.Syntax=[ <Bu??ky> ]
Command=P????kaz
CommonDenominator=SpolecnyJmenovatel
CommonDenominator.Syntax=[ <V??raz>, <V??raz> ]
CompleteSquare=UplnyCtverec
CompleteSquare.Syntax=[ <Kvadratick?? funkce> ]
ComplexRoot=KomplexniKoren
ComplexRoot.Syntax=[ <Polynom> ]
Cone=Kuzel
Cone.Syntax=[ <Kru??nice>, <V????ka> ]\n[ <Bod>, <Bod>, <Polom??r> ]\n[ <Bod>, <Vektor>, <??hel> ]
ConeInfinite=NekonecnyKuzel
ConeInfinite.Syntax=[ <Bod>, <Vektor>, <??hel> ]\n[ <Bod>, <Bod>, <??hel> ]\n[ <Bod>, <P????mka>, <??hel> ]
Conic=Kuzelosecka
Conic.Syntax=[ <Seznam> ]\n[ <Bod>, <Bod>, <Bod>, <Bod>, <Bod> ]\n[ <????slo>, <????slo>, <????slo>, <????slo>, <????slo>, <????slo> ]
ConstructionStep=KonstrukcniKrok
ConstructionStep.Syntax=[ ]\n[ <Objekt> ]
ContingencyTable=KontingencniTabulka
ContingencyTable.Syntax=[ <Seznam>, <Seznam> ]\n[ <Seznam>, <Seznam>, <Parametry> ]\n[ <Seznam hodnot z ????dku>, <Seznam hodnot ze sloupce>, <Frekven??n?? tabulka> ]\n[ <Seznam hodnot z ????dku>, <Seznam hodnot ze sloupce>, <Frekven??n?? tabulka> , <Parametry> ]
ContinuedFraction=RetezovyZlomek
ContinuedFraction.Syntax=[ <????slo> ]\n[ <????slo>, <????d> ]\n[ <????slo>, <????d>, <Zkr??cen?? z??pis - true/false> ]
ConvexHull=KonvexniObal
ConvexHull.Syntax=[ <Seznam bod??> ]
CopyFreeObject=KopirovatVolnyObjekt
CopyFreeObject.Syntax=[ <Objekt> ]
Corner=RohovyBod
Corner.Syntax=[ <????slo> ]\n[ <Obr??zek>, <????slo> ]\n[ <Text>, <????slo> ]\n[ <Grafick?? n??hled>, <????slo> ]
CountIf.Syntax=[ <Podm??nka>, <Seznam> ]\n[ <Podm??nka>, <Prom??nn??>, <Seznam> ]
Covariance=Kovariance
Covariance.Syntax=[ <Seznam bod??> ]\n[ <Seznam ????sel>, <Seznam ????sel> ]
Cross=VektorovySoucin
Cross.Syntax=[ <Vektor>, <Vektor> ]
CrossRatio=Dvojpomer
CrossRatio.Syntax=[ <Bod>, <Bod>, <Bod>, <Bod> ]
Cube=Krychle
Cube.Syntax=[ <??tverec> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Sm??r> ]
Cubic=Kubika
Cubic.Syntax=[ <Bod>, <Bod>, <Bod>, <????slo> ]
Curvature=Krivost
Curvature.Syntax=[ <Bod>, <Objekt> ]
CurvatureVector=VektorKrivosti
CurvatureVector.Syntax=[ <Bod>, <Objekt> ]
CurveCartesian=Krivka
CurveCartesian.Syntax=[ <V??raz>, <V??raz>, <Parametr prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
CurveCartesian.Syntax3D=[ <V??raz>, <V??raz>, <Parametr prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]\n[ <V??raz>, <V??raz>, <V??raz>, <Parametr prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
Cylinder=Valec
Cylinder.Syntax=[ <Kru??nice>, <V????ka> ]\n[ <Bod>, <Bod>, <Polom??r> ]
CylinderInfinite=NekonecnyValec
CylinderInfinite.Syntax=[ <P????mka>, <Polom??r> ]\n[ <Bod>, <Vektor>, <Polom??r> ]\n[ <Bod>, <Bod>, <Polom??r> ]
DataFunction=DatovaFunkce
DataFunction.Syntax=[ <Seznam ????sel>, <Seznam ????sel> ]
Defined=JeDefinovan
Defined.Syntax=[ <Objekt> ]
Degree=Stupen
Degree.Syntax=[ <Polynom> ]
Degree.SyntaxCAS=[ <Polynom> ]\n[ <Polynom>, <Prom??nn??> ]
DelauneyTriangulation=DelaunayTriangulace
DelauneyTriangulation.Syntax=[ <Seznam bod??> ]
Delete=Smazat
Delete.Syntax=[ <Objekt> ]
Denominator=Jmenovatel
Denominator.Syntax=[ <????slo> ]\n[ <Funkce> ]
Denominator.SyntaxCAS=[ <V??raz> ]
DensityPlot=GrafHustoty
Derivative=Derivace
Derivative.Syntax=[ <Funkce> ]\n[ <K??ivka> ]\n[ <Funkce>, <????slo> ]\n[ <Funkce>, <Prom??nn??> ]\n[ <K??ivka>, <????slo> ]\n[ <Funkce>, <Prom??nn??>, <????slo> ]
Derivative.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Prom??nn??> ]\n[ <V??raz>, <Prom??nn??>, <????slo> ]
Determinant.Syntax=[ <Matice> ]
Diameter=SdruzenyPrumer
Diameter.Syntax=[ <Vektor>, <Ku??elose??ka> ]\n[ <P????mka>, <Ku??elose??ka> ]
Difference=Rozdil
Difference.Syntax=[ <Mnoho??heln??k>, <Mnoho??heln??k> ]
Dilate=Stejnolehlost
Dilate.Syntax=[ <Objekt>, <Koeficient stejnolehlosti> ]\n[ <Objekt>, <Koeficient stejnolehlosti>, <St??ed stejnolehlosti> ]
Dimension=Rozmer
Dimension.Syntax=[ <Objekt> ]
Direction=SmerovyVektor
Direction.Syntax=[ <P????mka> ]
Directrix=RidiciPrimka
Directrix.Syntax=[ <Ku??elose??ka> ]
Distance=Vzdalenost
Distance.Syntax=[ <Bod>, <Objekt> ]\n[ <P????mka>, <P????mka> ]\n[ <Rovina>, <Rovina> ]
Distance.SyntaxCAS=[ <Bod>, <Objekt> ]
Div=CelociselnyPodil
Div.Syntax=[ <D??lenec>, <D??litel> ]\n[ <D??lenec-polynom>, <D??litel-polynom> ]
Division=Deleni
Division.Syntax=[ <D??lenec>, <D??litel> ]\n[ <D??lenec-polynom>, <D??litel-polynom> ]
Divisors=Delitele
Divisors.Syntax=[ <????slo> ]
DivisorsList=SeznamDelitelu
DivisorsList.Syntax=[ <????slo> ]
DivisorsSum=SoucetDelitelu
DivisorsSum.Syntax=[ <????slo> ]
Dodecahedron=Dvanactisten
Dodecahedron.Syntax=[ <Pravideln?? p??ti??heln??k> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Sm??r> ]
Dot=SkalarniSoucin
Dot.Syntax=[ <Vektor>, <Vektor> ]
DotPlot=BodovyGraf
DotPlot.Syntax=[ <Seznam zdrojov??ch dat>, <Seskupit bl??zk?? body (voliteln??)>, <M??????tko (voliteln??)>]
DynamicCoordinates=DynamickeSouradnice
DynamicCoordinates.Syntax=[ <Bod>, <Sou??adnice x>, <Sou??adnice y> ]\n[ <Bod>, <Sou??adnice x>, <Sou??adnice y>, <Sou??adnice z> ]
Eccentricity=Excentricita
Eccentricity.Syntax=[ <Ku??elose??ka> ]
Eigenvalues=VlastniCisla
Eigenvalues.SyntaxCAS=[ <Matice> ]
Eigenvectors=VlastniVektory
Eigenvectors.SyntaxCAS=[ <Matice> ]
Element=Prvek
Element.Syntax=[ <Seznam>, <Pozice prvku> ]\n[ <Matice>, <????dek>, <Soupec> ]\n[ <Seznam>, <Index 1>, <Index 2>, ... ]
Element.SyntaxCAS=[ <Seznam>, <Pozice prvku> ]\n[ <Matice>, <????dek>, <Soupec> ]
Eliminate=Eliminovat
Eliminate.Syntax=[ <Seznam polynom??>, <Seznam prom??nn??ch> ]
Ellipse=Elipsa
Ellipse.Syntax=[ <Ohnisko>, <Ohnisko>, <D??lka hlavn?? poloosy> ]\n[ <Ohnisko>, <Ohnisko>, <??se??ka> ]\n[ <Ohnisko>, <Ohnisko>, <Bod> ]
Ends=Podstavy
Ends.Syntax=[ <Kvadrika> ]
Envelope=Obalka
Envelope.Syntax=[ <Dr??ha>, <Bod> ]
Erlang.Syntax=[ <Tvar>, <Pom??r>, <Hodnota n??hodn?? veli??iny> ]\n[ <Tvar>, <Pom??r>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Tvar>, <Pom??r>, x, <Kumulativn?? (logick?? hodnota)> ]
Evaluate=Vyhodnotit
Excentricity=LinearniExcentricita
Excentricity.Syntax=[ <Ku??elose??ka> ]
Execute=Vykonat
Execute.Syntax=[ <Seznam> ]\n[ <Seznam>, <Parametr>, <Parametr>, ... ]
Expand=Rozsirit
Expand.Syntax=[ <V??raz> ]
Exponential=Exponencialni
Exponential.Syntax=[ <Lambda>, <Hodnota n??hodn?? veli??iny> ]\n[ <Lambda>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Lambda>, x, <Kumulativn?? (logick?? hodnota)> ]
Exponential.SyntaxCAS=[ <Lambda>, <Hodnota n??hodn?? veli??iny> ]
ExportImage=ExportovatObrazek
ExportImage.Syntax=[ <Vlastnost>, <Hodnota>, <Vlastnost>, <Hodnota>, ... ]
ExtendedGCD=RozsirenyNSD
ExtendedGCD.Syntax=[ <Cel?? ????slo>, <Cel?? ????slo>]\n[ <Polynom>, <Polynom>]
Extremum=Extrem
Extremum.Syntax=[ <Polynom> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
Extremum.SyntaxCAS=[ <Funkce> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
FDistribution=FRozdeleni
FDistribution.Syntax=[ <??itatel>, <Jmenovatel>, <Hodnota n??hodn?? veli??iny> ]\n[ <??itatel>, <Jmenovatel>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <??itatel>, <Jmenovatel>, x, <Kumulativn?? (logick?? hodnota)> ]
FDistribution.SyntaxCAS=[ <??itatel>, <Jmenovatel>, <Hodnota n??hodn?? veli??iny> ]
Factor=Rozklad
Factor.Syntax=[ <Polynom> ]
Factor.SyntaxCAS=[ <????slo> ]\n[ <Polynom> ]\n[ <V??raz>, <Prom??nn??> ]
Factors=Cinitele
Factors.Syntax=[ <Polynom> ]\n[ <????slo> ]
FillCells=NaplnitBunky
FillCells.Syntax=[ <Rozsah bu??ky>, <Objekt> ]\n[ <Bu??ka>, <Seznam> ]\n[ <Bu??ka>, <Matice> ]
FillColumn=NaplnitSloupec
FillColumn.Syntax=[ <Soupec>, <Seznam> ]
FillRow=NaplnitRadek
FillRow.Syntax=[ <????dek>, <Seznam> ]
First=Prvni
First.Syntax=[ <Seznam> ]\n[ <Text> ]\n[ <Seznam>, <Po??et prvk??> ]\n[ <Text>, <Po??et prvk??> ]\n[ <M??sto>, <Po??et prvk??> ]
First.SyntaxCAS=[ <Seznam> ]\n[ <Seznam>, <Po??et prvk??> ]
FirstAxis=HlavniOsa
FirstAxis.Syntax=[ <Ku??elose??ka> ]
FirstAxisLength=DelkaHlavniPoloosy
FirstAxisLength.Syntax=[ <Ku??elose??ka> ]
Fit=RegreseFunkce
Fit.Syntax=[ <Seznam bod??>, <Seznam funkc??> ]\n[ <Seznam bod??>, <Funkce> ]
FitExp=RegreseExponencialni
FitExp.Syntax=[ <Seznam bod??> ]
FitGrowth=RegreseRustu
FitGrowth.Syntax=[ <Seznam bod??> ]
FitImplicit=ProlozImplicitni
FitImplicit.Syntax=[ <Seznam bod??>, <????d> ]
FitLineX=RegreseX
FitLineX.Syntax=[ <Seznam bod??> ]
FitLineY=Regrese
FitLineY.Syntax=[ <Seznam bod??> ]
FitLog=RegreseLogaritmicka
FitLog.Syntax=[ <Seznam bod??> ]
FitLogistic=RegreseLogisticka
FitLogistic.Syntax=[ <Seznam bod??> ]
FitPoly=RegresePolynomialni
FitPoly.Syntax=[ <Seznam bod??>, <Stupe?? polynomu> ]\n[ <Funkce od ruky>, <Stupe?? polynomu> ]
FitPow=RegreseMocninna
FitPow.Syntax=[ <Seznam bod??> ]
FitSin=RegreseSin
FitSin.Syntax=[ <Seznam bod??> ]
Flatten=PlochySeznam
Flatten.Syntax=[ <Seznam> ]
Focus=Ohnisko
Focus.Syntax=[ <Ku??elose??ka> ]
FractionText=ZlomekText
FractionText.Syntax=[ <????slo> ]\n[ <Bod> ]\n[ <????slo>, <Logick?? hodnota Jeden zlomek> ]
Frequency=Cetnost
Frequency.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam zdrojov??ch dat> ]\n[ <Seznam hranic t????d>, <Seznam zdrojov??ch dat> ]\n[ <Seznam>, <Seznam> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam hranic t????d>, <Seznam zdrojov??ch dat> ]\n[ <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)> ]
FrequencyPolygon=FrekvencniPolygon
FrequencyPolygon.Syntax=[ <Seznam hranic t????d>, <Seznam v????ek> ]\n[ <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <U??it?? hustoty>, <Koeficient (voliteln??)> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <U??it?? hustoty>, <Koeficient (voliteln??)> ]
FrequencyTable=FrekvencniTabulka
FrequencyTable.Syntax=[ <Seznam zdrojov??ch dat>, <M??????tko (voliteln??)> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam zdrojov??ch dat> ]\n[ <Seznam hranic t????d>, <Seznam zdrojov??ch dat> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam hranic t????d>, <Seznam zdrojov??ch dat> ]\n[ <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)> ]
FromBase=ZeSoustavy
FromBase.Syntax=[ <????slo>, <Soustava> ]
Function=Funkce
Function.Syntax=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Seznam ????sel> ]
Function.Syntax3D=[ <Seznam ????sel> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <V??raz>, <Parametr prom??nn?? 1>, <Po????te??n?? hodnota>, <Koncov?? hodnota>, <Parametr prom??nn?? 2>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
Function.SyntaxCAS=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
FutureValue=BudouciHodnota
FutureValue.Syntax=[ <??rokov?? sazba>, <Po??et obdob??>, <Spl??tka>, <Sou??asn?? hodnota (voliteln??)>, <Typ (voliteln??)> ]
GCD=NSD
GCD.Syntax=[ <Seznam ????sel> ]\n[ <????slo>, <????slo> ]
GCD.SyntaxCAS=[ <Seznam ????sel> ]\n[ <Seznam polynom??> ]\n[ <????slo>, <????slo> ]\n[ <Polynom>, <Polynom> ]
Gamma=Gama
Gamma.Syntax=[ <Alfa>, <Beta>, <Hodnota n??hodn?? veli??iny> ]\n[ <Alfa>, <Beta>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)>  ]\n[ <Alfa>, <Beta>, x, <Kumulativn?? (logick?? hodnota)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Hodnota n??hodn?? veli??iny> ]
GeometricMean=GeometrickyPrumer
GeometricMean.Syntax=[ <Seznam ????sel> ]
GetTime=ZiskatCas
GetTime.Syntax=[]\n[ <Form??t> ]
GroebnerDegRevLex.Syntax=[ <Seznam polynom??> ]\n[ <Seznam polynom??>, <Seznam prom??nn??ch> ]
GroebnerLex.Syntax=[ <Seznam polynom??> ]\n[ <Seznam polynom??>, <Seznam prom??nn??ch> ]
GroebnerLexDeg.Syntax=[ <Seznam polynom??> ]\n[ <Seznam polynom??>, <Seznam prom??nn??ch> ]
HarmonicMean=HarmonickyPrumer
HarmonicMean.Syntax=[ <Seznam ????sel> ]
Height=Vyska
Height.Syntax=[ <T??leso> ]
HideLayer=SkrytVrstvu
HideLayer.Syntax=[ <????slo> ]
Histogram.Syntax=[ <Seznam hranic t????d>, <Seznam v????ek> ]\n[ <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)> ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)> ]
HistogramRight=HistogramVpravo
HistogramRight.Syntax=[ <Seznam hranic t????d>, <Seznam v????ek> ]\n[ <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)>  ]\n[ <Kumulativn?? (logick?? hodnota)>, <Seznam hranic t????d>, <Seznam zdrojov??ch dat>, <Pou????t hustotu>, <Koeficient (voliteln??)> ]
HyperGeometric=HyperGeometricke
HyperGeometric.Syntax=[ <Velikost populace>, <Po??et ??sp??ch??>, <Velikost vzorku> ]\n[ <Velikost populace>, <Po??et ??sp??ch??>, <Velikost vzorku>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Velikost populace>, <Po??et ??sp??ch??>, <Velikost vzorku>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
HyperGeometric.SyntaxCAS=[ <Velikost populace>, <Po??et ??sp??ch??>, <Velikost vzorku>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
Hyperbola.Syntax=[ <Ohnisko>, <Ohnisko>, <D??lka hlavn?? poloosy> ]\n[ <Ohnisko>, <Ohnisko>, <??se??ka> ]\n[ <Ohnisko>, <Ohnisko>, <Bod> ]
IFactor=IFaktor
IFactor.Syntax=[ <Polynom> ]
IFactor.SyntaxCAS=[ <V??raz> ]
Icosahedron=Dvacetisten
Icosahedron.Syntax=[ <Rovnostrann?? troj??heln??k> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Sm??r> ]
Identity=Jednotkova
Identity.Syntax=[ <????slo> ]
If=Kdyz
If.Syntax=[ <Podm??nka>, <Pak> ]\n[ <Podm??nka>, <Pak>, <Jinak> ]
ImplicitCurve=ImplicitniKrivka
ImplicitCurve.Syntax=[ <Seznam bod??> ]\n[ <f(x, y)> ]
ImplicitDerivative=ImplicitniDerivace
ImplicitDerivative.Syntax=[ <f(x, y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <V??raz>, <Z??visl?? prom??nn??>, <Nez??visl?? prom??nn??> ]
Incircle=KruzniceVepsana
Incircle.Syntax=[ <Bod>, <Bod>, <Bod> ]
IndexOf=IndexPrvku
IndexOf.Syntax=[ <Objekt>, <Seznam> ]\n[ <Text>, <Text> ]\n[ <Objekt>, <Seznam>, <Po????te??n?? index> ]\n[ <Text>, <Text>, <Po????te??n?? index> ]
Insert=Vlozit
Insert.Syntax=[ <Seznam>, <Seznam>, <Pozice> ]\n[ <Objekt>, <Seznam>, <Pozice> ]
Integral.Syntax=[ <Funkce> ]\n[ <Funkce>, <Prom??nn??> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x>, <Vyhodnotit (logick?? hodnota)> ]
Integral.SyntaxCAS=[ <Funkce> ]\n[ <Funkce>, <Prom??nn??> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
IntegralBetween=IntegralMezi
IntegralBetween.Syntax=[ <Funkce>, <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x>, <Vyhodnotit (logick?? hodnota)> ]
IntegralBetween.SyntaxCAS=[ <Funkce>, <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Funkce>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
IntegralSymbolic=IntegralSymbolicky
IntegralSymbolic.Syntax=[ <Funkce> ]\n[ <Funkce>, <Prom??nn??> ]
InteriorAngles=VnitrniUhly
InteriorAngles.Syntax=[ <Mnoho??heln??k> ]
Intersect=Prusecik
Intersect.Syntax=[ <Objekt>, <Objekt> ]\n[ <Objekt>, <Objekt>, <Po??ad?? pr??se????ku> ]\n[ <Objekt>, <Objekt>, <Po????te??n?? bod> ]\n[ <Funkce>, <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <K??ivka 1>, <K??ivka 2>, <Parametr 1>, <Parametr 2> ]
Intersect.SyntaxCAS=[ <Funkce>, <Funkce> ]
IntersectConic=PrunikovaKuzelosecka
IntersectConic.Syntax=[ <Rovina>, <Kvadrika> ]\n[ <Kvadrika>, <Kvadrika> ]
IntersectPath=PrunikovaCara
IntersectPath.Syntax=[ <P????mka>, <Mnoho??heln??k> ]\n[ <Mnoho??heln??k>, <Mnoho??heln??k> ]
IntersectPath.Syntax3D=[ <P????mka>, <Mnoho??heln??k> ]\n[ <Mnoho??heln??k>, <Mnoho??heln??k> ]\n[ <Rovina>, <Mnoho??heln??k> ]\n[ <Rovina>, <Kvadrika> ]
Intersection=Prunik
Intersection.Syntax=[ <Seznam>, <Seznam> ]
InverseBeta.Syntax=[ <Alfa>, <Beta>, <Pravd??podobnost> ]
InverseBinomial=InverzniBinomicke
InverseBinomial.Syntax=[ <Po??et pokus??>, <Pravd??podobnost ??sp??chu>, <Kumulativn?? pravd??podobnost> ]
InverseBinomialMinimumTrials=InverzniBinomickeMinimumPokusu
InverseBinomialMinimumTrials.Syntax=[ <Kumulativn?? pravd??podobnost>, <Pravd??podobnost ??sp??chu>, <Po??et ??sp??ch??> ]
InverseBinomialMinimumTrials.SyntaxCAS=[ <Kumulativn?? pravd??podobnost>, <Pravd??podobnost ??sp??chu>, <Po??et ??sp??ch??> ]
InverseCauchy=InverzniCauchy
InverseCauchy.Syntax=[ <Median>, <Stupnice>, <Pravd??podobnost> ]
InverseChiSquared=InverzniChi2
InverseChiSquared.Syntax=[ <Stupn?? volnosti>, <Pravd??podobnost> ]
InverseExponential=InverzniExponecialni
InverseExponential.Syntax=[ <Lambda>, <Pravd??podobnost> ]
InverseFDistribution=InverzniFRozdeleni
InverseFDistribution.Syntax=[ <??itatel>, <Jmenovatel>, <Pravd??podobnost> ]
InverseGamma=InverzniGama
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Pravd??podobnost> ]
InverseHyperGeometric=InverzniHyperGeometricke
InverseHyperGeometric.Syntax=[ <Velikost populace>, <Po??et ??sp??ch??>, <Velikost vzorku>, <Pravd??podobnost> ]
InverseLaplace=InverzniLaplace
InverseLaplace.Syntax=[ <Funkce> ]\n[ <Funkce>, <Prom??nn??> ]\n[ <Funkce>, <Prom??nn??>, <Prom??nn??> ]
InverseLogNormal=InverzniFunkceLogaritmickoNormalnihoRozdeleni
InverseLogNormal.Syntax=[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, <Pravd??podobnost> ]
InverseLogistic=InverzniFunkceLogaritmick??hoRozd??leni
InverseLogistic.Syntax=[ <St??edn?? hodnota>, <Stupnice>, <Pravd??podobnost> ]
InverseNormal=InverzniNormalni
InverseNormal.Syntax=[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, <Kumulativn?? pravd??podobnost> ]
InversePascal=InverzniPascal
InversePascal.Syntax=[ <n>, <p>, <Pravd??podobnost> ]
InversePoisson=InverzniPoisson
InversePoisson.Syntax=[ <St??edn?? hodnota>, <Pravd??podobnost> ]
InverseTDistribution=InverzniTRozdeleni
InverseTDistribution.Syntax=[ <Stupn?? volnosti>, <Pravd??podobnost> ]
InverseWeibull=InverzniWeibull
InverseWeibull.Syntax=[ <Tvar>, <Stupnice>, <Pravd??podobnost> ]
InverseZipf=InverzniZipf
InverseZipf.Syntax=[ <Po??et prvk??>, <Exponent>, <Pravd??podobnost> ]
Invert=Invertovat
Invert.Syntax=[ <Matice> ]\n[ <Funkce> ]
IsFactored=JeRozlozen
IsFactored.Syntax=[ <Polynom> ]
IsInRegion=JeVOblasti
IsInRegion.Syntax=[ <Bod>, <Oblast> ]
IsInteger=JeCele
IsInteger.Syntax=[ <????slo> ]
IsPrime=JePrvocislo
IsPrime.Syntax=[ <????slo> ]
IsTangent=JeTecna
IsTangent.Syntax=[ <P????mka>, <Ku??elose??ka> ]
IsVertexForm=JeVrcholovyTvar
IsVertexForm.Syntax=[ <Funkce> ]
Iteration=Iterace
Iteration.Syntax=[ <Funkce>, <Po????te??n?? hodnota>, <????slo n> ]\n[ <V??raz>, <Prom??nn??>, <Seznam po????te??n??ch hodnot>, <????slo n> ]
IterationList=SeznamIterace
IterationList.Syntax=[ <Funkce>, <Po????te??n?? hodnota>, <????slo n> ]\n[ <V??raz>, <Prom??nn??>, <Seznam po????te??n??ch hodnot>, <????slo n> ]
IterationList.SyntaxCAS=[ <Funkce>, <Po????te??n?? hodnota>, <????slo n> ]
Join=Spoj
Join.Syntax=[ <Senam seznam??> ]\n[ <Seznam>, <Seznam>, ... ]
JordanDiagonalization=JordanovaDiagonalizace
JordanDiagonalization.SyntaxCAS=[ <Matice> ]
KeepIf=NechejJestli
KeepIf.Syntax=[ <Podm??nka>, <Seznam> ]\n[ <Podm??nka>, <Prom??nn??>, <Seznam> ]
LCM=NSN
LCM.Syntax=[ <Seznam ????sel> ]\n[ <????slo>, <????slo> ]
LCM.SyntaxCAS=[ <Seznam ????sel> ]\n[ <Seznam polynom??> ]\n[ <????slo>, <????slo> ]\n[ <Polynom>, <Polynom> ]
LUDecomposition=LURozklad
LUDecomposition.Syntax=[ <Matice> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Objekt> ]\n[ <Objekt>, <Pravdivostn?? hodnota pro substituci prom??nn??ch> ]\n[ <Objekt>, <Pravdivostn?? hodnota pro substituci prom??nn??ch>, <Pravdivostn?? hodnota pro zobrazen?? n??zvu objektu> ]
Laplace.Syntax=[ <Funkce> ]\n[ <Funkce>, <Prom??nn??> ]\n[ <Funkce>, <Prom??nn??>, <Prom??nn??> ]
Last=Posledni
Last.Syntax=[ <Seznam> ]\n[ <Text> ]\n[ <Seznam>, <Po??et prvk??> ]\n[ <Text>, <Po??et prvk??> ]
Last.SyntaxCAS=[ <Seznam> ]\n[ <Seznam>, <Po??et prvk??> ]
LeftSide=LevaStrana
LeftSide.Syntax=[ <Rovnice> ]
LeftSide.SyntaxCAS=[ <Rovnice> ]\n[ <Seznam rovnic> ]\n[ <Seznam rovnic>, <Index> ]
LeftSum=LevySoucet
LeftSum.Syntax=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x>, <Po??et obd??ln??k??> ]
Length=Delka
Length.Syntax=[ <Objekt> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Po????te??n?? Bod>, <Koncov?? Bod> ]\n[ <K??ivka>, <Po????te??n?? hodnota parametru>, <Koncov?? hodnota parametru> ]\n[ <K??ivka>, <Po????te??n?? Bod>, <Koncov?? Bod> ]
Length.SyntaxCAS=[ <Seznam> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Prom??nn??>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
LetterToUnicode=ZnakNaUnicode
LetterToUnicode.Syntax=[ <Znak> ]
Limit=Limita
Limit.Syntax=[ <Funkce>, <Hodnota> ]
Limit.SyntaxCAS=[ <V??raz>, <Hodnota> ]\n[ <V??raz>, <Prom??nn??>, <Hodnota> ]
LimitAbove=LimitaZprava
LimitAbove.Syntax=[ <Funkce>, <Hodnota> ]
LimitAbove.SyntaxCAS=[ <V??raz>, <Hodnota> ]\n[ <V??raz>, <Prom??nn??>, <Hodnota> ]
LimitBelow=LimitaZleva
LimitBelow.Syntax=[ <Funkce>, <Hodnota> ]
LimitBelow.SyntaxCAS=[ <V??raz>, <Hodnota> ]\n[ <V??raz>, <Prom??nn??>, <Hodnota> ]
Line=Primka
Line.Syntax=[ <Bod>, <Bod> ]\n[ <Bod>, <P????mka> ]\n[ <Bod>, <Vektor> ]
LineBisector=OsaUsecky
LineBisector.Syntax=[ <??se??ka> ]\n[ <Bod>, <Bod> ]
LineBisector.Syntax3D=[ <??se??ka> ]\n[ <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Sm??r> ]
LineGraph=SpojnicovyGraf
LineGraph.Syntax=[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic> ]
Locus=MnozinaBodu
Locus.Syntax=[ <Bod tvo????c?? mno??inu>, <Bod> ]\n[ <Bod tvo????c?? mno??inu>, <Posuvn??k> ]\n[ <Sm??rov?? pole>, <Bod> ]\n[ <f(x, y)>, <Bod> ]
LocusEquation=RovniceMnozinyBodu
LocusEquation.Syntax=[ <M??sto> ]\n[ <Bod mno??iny bod??>, <Pohybliv?? bod> ]\n[ <Pravdivostn?? hodnota>, <Pohybliv?? bod> ]
LogNormal=LogNormalni
LogNormal.Syntax=[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, <Hodnota n??hodn?? veli??iny> ]\n[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)>  ]\n[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, x, <Kumulativn?? (logick?? hodnota)> ]
Logistic=Logisticke
Logistic.Syntax=[ <St??edn?? hodnota>, <Stupnice>, <Hodnota n??hodn?? veli??iny> ]\n[ <St??edn?? hodnota>, <Stupnice>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)>  ]\n[ <St??edn?? hodnota>, <Stupnice>, x, <Kumulativn?? (logick?? hodnota)> ]
LowerSum=DolniSoucet
LowerSum.Syntax=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x>, <Po??et obd??ln??k??> ]
MatrixPlot=MaticovyGraf
MatrixRank=Hodnost
MatrixRank.Syntax=[ <Matice> ]
Max=Maximum
Max.Syntax=[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Seznam> ]\n[ <Seznam dat>, <Seznam ??etnost??> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
Max.SyntaxCAS=[ <Seznam> ]\n[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Seznam dat>, <Seznam ??etnost??> ]
Maximize=Maximalizovat
Maximize.Syntax=[ <Z??visl?? ????slo>, <Voln?? ????slo> ]\n[ <Z??visl?? ????slo>, <Bod na cest??> ]
Mean=Prumer
Mean.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
MeanX=PrumerX
MeanX.Syntax=[ <Seznam bod??> ]
MeanY=PrumerY
MeanY.Syntax=[ <Seznam bod??> ]
Median.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
Median.SyntaxCAS=[ <Seznam ????sel> ]
Midpoint=StredSoumernosti
Midpoint.Syntax=[ <??se??ka> ]\n[ <Ku??elose??ka> ]\n[ <Interval> ]\n[ <Bod>, <Bod> ]
Min=Minimum
Min.Syntax=[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Seznam> ]\n[ <Seznam dat>, <Seznam ??etnost??> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
Min.SyntaxCAS=[ <Seznam> ]\n[ <Interval> ]\n[ <????slo>, <????slo> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Seznam dat>, <Seznam ??etnost??> ]
MinimalPolynomial=MinimalniPolynom
MinimalPolynomial.Syntax=[ <Matice> ]
Minimize=Minimalizovat
Minimize.Syntax=[ <Z??visl?? ????slo>, <Voln?? ????slo> ]\n[ <Z??visl?? ????slo>, <Bod na cest??> ]
MinimumSpanningTree=MinimalniKostra
MinimumSpanningTree.Syntax=[ <Seznam bod??> ]
Mirror=Soumernost
Mirror.Syntax=[ <Objekt>, <Bod> ]\n[ <Objekt>, <P????mka> ]\n[ <Objekt>, <Kru??nice> ]
Mirror.Syntax3D=[ <Objekt>, <Bod> ]\n[ <Objekt>, <P????mka> ]\n[ <Objekt>, <Rovina> ]\n[ <Objekt>, <Kru??nice> ]
MixedNumber=SmiseneCislo
MixedNumber.SyntaxCAS=[ <????slo> ]
Mod.Syntax=[ <D??lenec>, <D??litel> ]\n[ <D??lenec-polynom>, <D??litel-polynom> ]
Mode=Modus
Mode.Syntax=[ <Seznam ????sel> ]
ModularExponent=MudularniMocnina
ModularExponent.Syntax=[ <????slo>, <????slo>, <????slo> ]
NDerivative=NDerivace
NDerivative.Syntax=[ <Funkce> ]\n[ <Funkce>, <????d> ]
NIntegral.Syntax=[ <Funkce> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Start y-Value>, <Koncov?? hodnota x> ]
NIntegral.SyntaxCAS=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]\n[ <Funkce>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
NInvert=NInvertovat
NInvert.Syntax=[ <Funkce> ]
NSolutions=NReseni
NSolutions.Syntax=[ <Rovnice> ]
NSolutions.SyntaxCAS=[ <Rovnice> ]\n[ <Rovnice>, <Prom??nn??> ]\n[ <Rovnice>, <Prom??nn?? = po????te??n?? hodnota> ]\n[ <Seznam rovnic>, <Seznam prom??nn??ch> ]
NSolve=NVyresit
NSolve.Syntax=[ <Rovnice> ]
NSolve.SyntaxCAS=[ <Rovnice> ]\n[ <Rovnice>, <Prom??nn??> ]\n[ <Rovnice>, <Prom??nn?? = po????te??n?? hodnota> ]\n[ <Seznam rovnic>, <Seznam prom??nn??ch> ]
NSolveODE=NVyresitODE
NSolveODE.Syntax=[ <Seznam derivac??>, <Po????te??n?? sou??adnice x>, <Seznam po????te??n??ch sou??adnic y>, <Koncov?? sou??adnice x> ]
Name=Nazev
Name.Syntax=[ <Objekt> ]
Net=Sit
Net.Syntax=[ <Mnohost??n>, <????slo> ]\n[ <Mnohost??n>, <????slo>, <St??na>, <Hrana>, <Hrana>, ... ]
NextPrime=NasledujiciPrvocislo
NextPrime.Syntax=[ <????slo> ]
Normal=NormalniRozdeleni
Normal.Syntax=[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, <Hodnota n??hodn?? veli??iny> ]\n[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka>, x, <Kumulativn?? (logick?? hodnota)> ]
NormalQuantilePlot=NormalniKvantilovyDiagram
NormalQuantilePlot.Syntax=[ <Seznam zdrojov??ch dat> ]
Normalize=Normalizovat
Normalize.Syntax=[ <Seznam ????sel> ]\n[ <Seznam bod??> ]
Numerator=Citatel
Numerator.Syntax=[ <????slo> ]\n[ <Funkce> ]
Numerator.SyntaxCAS=[ <V??raz> ]
Numeric=Vycislit
Numeric.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <Platn?? ????slice> ]
Object=Objekt
Object.Syntax=[ <N??zev objektu ve form?? textu> ]
Octahedron=Osmisten
Octahedron.Syntax=[ <Rovnostrann?? troj??heln??k> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Sm??r> ]
Ordinal=Poradovy
Ordinal.Syntax=[ <Cel?? ????slo> ]
OrdinalRank=Poradi
OrdinalRank.Syntax=[ <Seznam> ]
OrthogonalLine=Kolmice
OrthogonalLine.Syntax=[ <Bod>, <P????mka> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Vektor> ]
OrthogonalLine.Syntax3D=[ <Bod>, <P????mka> ]\n[ <Bod>, <??se??ka> ]\n[ <Bod>, <Vektor> ]\n[ <Bod>, <Rovina> ]\n[ <P????mka>, <P????mka> ]\n[ <Bod>, <Sm??r>, <Sm??r> ]\n[ <Bod>, <P????mka>, <Kontext> ]
OrthogonalPlane=KolmaRovina
OrthogonalPlane.Syntax=[ <Bod>, <P????mka> ]\n[ <Bod>, <Vektor> ]
OrthogonalVector=NormalovyVektor
OrthogonalVector.Syntax=[ <P????mka> ]\n[ <??se??ka> ]\n[ <Vektor> ]
OrthogonalVector.Syntax3D=[ <P????mka> ]\n[ <??se??ka> ]\n[ <Vektor> ]\n[ <Rovina> ]
OrthogonalVector.SyntaxCAS=[ <Vektor> ]
OsculatingCircle=OskulacniKruznice
OsculatingCircle.Syntax=[ <Bod>, <Objekt> ]
PMCC=KorelacniKoeficient
PMCC.Syntax=[ <Seznam bod??> ]\n[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic> ]
Pan=PosunoutNahled
Pan.Syntax=[ <x>, <y> ]
Pan.Syntax3D=[ <x>, <y> ]\n[ <x>, <y>, <z> ]
Parabola.Syntax=[ <Bod>, <P????mka> ]
Parameter=Parametr
Parameter.Syntax=[ <Parabola> ]
ParametricDerivative=ParametrickaDerivace
ParametricDerivative.Syntax=[ <K??ivka> ]
ParseToFunction=PrelozitNaFunkci
ParseToFunction.Syntax=[ <Funkce>, <??et??zec> ]
ParseToNumber=PrelozitNaCislo
ParseToNumber.Syntax=[ <????slo>, <??et??zec> ]
PartialFractions=ParcialniZlomky
PartialFractions.Syntax=[ <Funkce> ]
PartialFractions.SyntaxCAS=[ <Funkce> ]\n[ <Funkce>, <Prom??nn??> ]
Pascal.Syntax=[ <n>, <p> ]\n[ <n>, <p>, <Kumulativn?? (logick?? hodnota)> ]\n[ <n>, <p>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
Pascal.SyntaxCAS=[ <n>, <p>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
PathParameter=ParametrCesty
PathParameter.Syntax=[ <Bod na cest??> ]
Payment=Platba
Payment.Syntax=[ <??rokov?? sazba>, <Po??et obdob??>, <Sou??asn?? hodnota>, <Budouc?? hodnota (voliteln??)>, <Typ (voliteln??)> ]
PenStroke.Syntax=[ <Bod>, ..., <Bod> ]
Percentile=Percentil
Percentile.Syntax=[ <Seznam ????sel>, <Procento> ]
Perimeter=Obvod
Perimeter.Syntax=[ <Mnoho??heln??k> ]\n[ <Ku??elose??ka> ]\n[ <M??sto> ]
Periods=PocetObdobi
Periods.Syntax=[ <??rokov?? sazba>, <Spl??tka>, <Sou??asn?? hodnota>, <Budouc?? hodnota (voliteln??)>, <Typ (voliteln??)> ]
PieChart=VysecovyGraf
PieChart.Syntax=[ <Seznam ??etnost??> ]\n[ <Seznam ??etnost??>, <St??ed>, <Polom??r> ]
Plane=Rovina
Plane.Syntax=[ <Mnoho??heln??k> ]\n[ <Ku??elose??ka> ]\n[ <Bod>, <Rovina> ]\n[ <Bod>, <P????mka> ]\n[ <P????mka>, <P????mka> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Vektor>, <Vektor> ]
PlaneBisector=RovinaSoumernosti
PlaneBisector.Syntax=[ <??se??ka> ]\n[ <Bod>, <Bod> ]
PlaySound=PrehratZvuk
PlaySound.Syntax=[ <Soubor (URL)> ]\n[ <P??ehr??t (Pravdivostn?? hodnota)> ]\n[ <Funkce>, <Minim??ln?? hodnota>, <Maxim??ln?? hodnota> ]\n[ <Funkce>, <Minim??ln?? hodnota>, <Maxim??ln?? hodnota>, <Rychlost vzorkov??n??>, <Hloubka> ]
PlotSolve=VykreslitReseni
PlotSolve.Syntax=[ <Rovnice pro x> ]
Point=Bod
Point.Syntax=[ <Objekt> ]\n[ <Objekt>, <Parametr> ]\n[ <Bod>, <Vektor> ]\n[ <Seznam> ]
PointIn=BodV
PointIn.Syntax=[ <Oblast> ]
PointList=SeznamBodu
PointList.Syntax=[ <Seznam> ]
Poisson.Syntax=[ <St??edn?? hodnota> ]\n[ <St??edn?? hodnota>, <Kumulativn?? (logick?? hodnota)> ]\n[ <St??edn?? hodnota>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
Poisson.SyntaxCAS=[ <St??edn?? hodnota>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
Polar=Polara
Polar.Syntax=[ <Bod>, <Ku??elose??ka> ]\n[ <P????mka>, <Ku??elose??ka> ]
PolyLine=LomenaCara
PolyLine.Syntax=[ <Seznam bod??> ]\n[ <Bod>, ..., <Bod> ]
Polygon=Mnohouhelnik
Polygon.Syntax=[ <Seznam bod??> ]\n[ <Bod>, ..., <Bod> ]\n[ <Bod>, <Bod>, <Po??et vrchol??> ]
Polygon.Syntax3D=[ <Seznam bod??> ]\n[ <Bod>, ..., <Bod> ]\n[ <Bod>, <Bod>, <Po??et vrchol??> ]\n[ <Bod>, <Bod>, <Po??et vrchol??>, <Sm??r> ]
Polynomial=Mnohoclen
Polynomial.Syntax=[ <Funkce> ]\n[ <Seznam bod??> ]
Polynomial.SyntaxCAS=[ <Funkce> ]\n[ <Funkce>, <Prom??nn??> ]
PresentValue=SoucasnaHodnota
PresentValue.Syntax=[ <??rokov?? sazba>, <Po??et obdob??>, <Spl??tka>, <Budouc?? hodnota (voliteln??)>, <Typ (voliteln??)> ]
PreviousPrime=PredchoziPrvocislo
PreviousPrime.Syntax=[ <????slo> ]
PrimeFactors=PrvociselnyRozklad
PrimeFactors.Syntax=[ <????slo> ]
Prism=Hranol
Prism.Syntax=[ <Mnoho??heln??k>, <Bod> ]\n[ <Mnoho??heln??k>, <Hodnota v????ky> ]\n[ <Bod>, <Bod>, ... ]
Product=Soucin
Product.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Po??et prvk??> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]\n[ <V??raz>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
Product.SyntaxCAS=[ <Seznam v??raz??> ]\n[ <V??raz>, <Prom??nn??>, <Po????te??n?? index>, <Koncov?? index> ]
Prove=Dokazat
Prove.Syntax=[ <Pravdivostn?? hodnota> ]
ProveDetails=PodrobnostiDukazu
ProveDetails.Syntax=[ <Pravdivostn?? hodnota> ]
Pyramid=Jehlan
Pyramid.Syntax=[ <Mnoho??heln??k>, <Bod> ]\n[ <Mnoho??heln??k>, <V????ka> ]\n[ <Bod>, <Bod>, <Bod>, <Bod>, ... ]
Q1=Kvartil1
Q1.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
Q3=Kvartil3
Q3.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
QRDecomposition=QRRozklad
QRDecomposition.Syntax=[ <Matice> ]
QuadricSide=Strana
QuadricSide.Syntax=[ <Kvadrika> ]
RSquare=R2
RSquare.Syntax=[ <Seznam bod??>, <Funkce> ]
Radius=Polomer
Radius.Syntax=[ <Ku??elose??ka> ]
Random=NahodneMezi
Random.Syntax=[ <Minimum (cel?? ????slo)>, <Maximum (cel?? ????slo)> ]\n[ <Minimum (cel?? ????slo)>, <Maximum (cel?? ????slo)>, <Po??et vzork??> ]\n[ <Minimum (cel?? ????slo)>, <Maximum (cel?? ????slo)>, <Upevnit (pravdivostn?? hodnota)> ]
Random.SyntaxCAS=[ <Minimum (cel?? ????slo)>, <Maximum (cel?? ????slo)> ]\n[ <Minimum (cel?? ????slo)>, <Maximum (cel?? ????slo)>, <Po??et vzork??> ]
RandomBinomial=NahodneBinomicke
RandomBinomial.Syntax=[ <Po??et pokus??>, <Pravd??podobnost> ]
RandomDiscrete=NahodneDiskretni
RandomDiscrete.Syntax=[ <Seznam>, <Seznam> ]
RandomElement=NahodnyPrvek
RandomElement.Syntax=[ <Seznam> ]
RandomNormal=NahodneNormalni
RandomNormal.Syntax=[ <St??edn?? hodnota>, <Sm??rodatn?? odchylka> ]
RandomPointIn=NahodnyBodV
RandomPointIn.Syntax=[ <Oblast> ]\n[ <Seznam bod??> ]\n[ <xMin>, <xMax>, <yMin>, <yMax> ]
RandomPoisson=NahodnePoissonovo
RandomPoisson.Syntax=[ <St??edn?? hodnota> ]
RandomPolynomial=NahodnyPolynom
RandomPolynomial.Syntax=[ <Stupe??>, <Minimum pro koeficienty>, <Maximum pro koeficienty> ]
RandomPolynomial.SyntaxCAS=[ <Stupe??>, <Minimum pro koeficienty>, <Maximum pro koeficienty> ]\n[ <Prom??nn??>, <Stupe??>, <Minimum pro koeficienty>, <Maximum pro koeficienty> ]
RandomUniform=NahodneUniformni
RandomUniform.Syntax=[ <Minimum>, <Maximum> ]\n[ <Minimum>, <Maximum>, <Po??et vzork??> ]
Rate=UrokovaMira
Rate.Syntax=[ <Po??et obdob??>, <Spl??tka>, <Sou??asn?? hodnota>, <Budouc?? hodnota (voliteln??)>, <Typ (voliteln??)>, <Odhad (voliteln??)> ]
Rationalize=Zlomek
Rationalize.SyntaxCAS=[ <????slo> ]
Ray=Poloprimka
Ray.Syntax=[ <Po????te??n?? Bod>, <Bod> ]\n[ <Po????te??n?? Bod>, <Vektor> ]
ReadText=PrecistText
ReadText.Syntax=[ <Text> ]
RectangleSum=SoucetObdelniku
RectangleSum.Syntax=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x>, <Po??et obd??ln??k??>, <Startovn?? pozice> ]
ReducedRowEchelonForm=SchodovityTvar
ReducedRowEchelonForm.Syntax=[ <Matice> ]
Relation=Vztah
Relation.Syntax=[ <Seznam> ]\n[ <Objekt>, <Objekt> ]
RemovableDiscontinuity=OdstranitelnaNespojitost
RemovableDiscontinuity.Syntax=[ <Funkce> ]
Remove=Odstranit
Remove.Syntax=[ <Seznam>, <Seznam> ]
RemoveUndefined=OdstranitNedefinovane
RemoveUndefined.Syntax=[ <Seznam> ]
Rename=P??ejmenovat
Rename.Syntax=[ <Objekt>, <N??zev> ]
Repeat=Opakovat
Repeat.Syntax=[ <????slo>, <P????kaz skriptu>, <P????kaz skriptu>, ... ]
ReplaceAll=NahraditVse
ReplaceAll.Syntax=[ <Text>, <Hledan?? Text>, <N??hrada> ]
ResidualPlot=ZbytkovyDiagram
ResidualPlot.Syntax=[ <Seznam bod??>, <Funkce> ]
Reverse=Obratit
Reverse.Syntax=[ <Seznam> ]
RightSide=PravaStrana
RightSide.Syntax=[ <Rovnice> ]
RightSide.SyntaxCAS=[ <Rovnice> ]\n[ <Seznam rovnic> ]\n[ <Seznam rovnic>, <Index> ]
RigidPolygon=PevnyMnohouhelnik
RigidPolygon.Syntax=[ <Mnoho??heln??k> ]\n[ <Mnoho??heln??k>, <Posun x>, <Posun y> ]\n[ <Voln?? bod>, ..., <Voln?? bod> ]
Root=NuloveBody
Root.Syntax=[ <Polynom> ]\n[ <Funkce>, <P??vodn?? hodnota x> ]\n[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
Root.SyntaxCAS=[ <Polynom> ]
RootList=SeznamNulovychBodu
RootList.Syntax=[ <Seznam> ]
RootMeanSquare=EfektivniHodnota
RootMeanSquare.Syntax=[ <Seznam ????sel> ]
Roots=Koreny
Roots.Syntax=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x> ]
Rotate=Rotace
Rotate.Syntax=[ <Objekt>, <??hel> ]\n[ <Objekt>, <??hel>, <Bod> ]
Rotate.Syntax3D=[ <Objekt>, <??hel> ]\n[ <Objekt>, <??hel>, <Bod> ]\n[ <Objekt>, <??hel>, <Osa rotace> ]\n[ <Objekt>, <??hel>, <Bod na ose>, <Sm??r osy nebo Rovina> ]
RotateText=OtocitText
RotateText.Syntax=[ <Text>, <??hel> ]
Row=Radek
Row.Syntax=[ <Bu??ky> ]
RunClickScript.Syntax=[ <Objekt> ]
RunUpdateScript.Syntax=[ <Objekt> ]
SD=SmOdch
SDX=SOX
SDX.Syntax=[ <Seznam bod??> ]
SDY=SOY
SDY.Syntax=[ <Seznam bod??> ]
SVD.Syntax=[ <Matice> ]
SXX.Syntax=[ <Seznam ????sel> ]\n[ <Seznam bod??> ]
SXY.Syntax=[ <Seznam bod??> ]\n[ <Seznam ????sel>, <Seznam ????sel> ]
SYY.Syntax=[ <Seznam bod??> ]
Sample=NahodnyVyber
Sample.Syntax=[ <Seznam>, <Velikost> ]\n[ <Seznam>, <Velikost>, <S nahrazen??m> ]
SampleSD=SmOdchVyber
SampleSD.SyntaxCAS=[ <Seznam ????sel> ]
SampleSDX=VyberovaSOX
SampleSDX.Syntax=[ <Seznam bod??> ]
SampleSDY=VyberovaSOY
SampleSDY.Syntax=[ <Seznam bod??> ]
SampleVariance=VyberovyRozptyl
SampleVariance.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
SampleVariance.SyntaxCAS=[ <Seznam ????sel> ]
ScientificText=StandardniTvar
ScientificText.Syntax=[ <????slo> ]\n[ <????slo>, <P??esnost> ]
SecondAxis=VedlejsiOsa
SecondAxis.Syntax=[ <Ku??elose??ka> ]
SecondAxisLength=DelkaVedlejsiPoloosy
SecondAxisLength.Syntax=[ <Ku??elose??ka> ]
Sector=Vysec
Sector.Syntax=[ <Ku??elose??ka>, <Bod>, <Bod> ]\n[ <Ku??elose??ka>, <Hodnota parametru>, <Hodnota parametru> ]
Segment=Usecka
Segment.Syntax=[ <Bod>, <Bod> ]\n[ <Bod>, <D??lka> ]
SelectObjects=VybratObjekty
SelectObjects.Syntax=[ ]\n[ <Objekt>, <Objekt>, ... ]
SelectedElement=VybranyPrvek
SelectedElement.Syntax=[ <Seznam> ]
SelectedIndex=VybranyIndex
SelectedIndex.Syntax=[ <Seznam> ]
Semicircle=Polokruznice
Semicircle.Syntax=[ <Bod>, <Bod> ]
Sequence=Posloupnost
Sequence.Syntax=[ <Koncov?? hodnota> ]\n[ <Po????te??n?? hodnota>, <Koncov?? hodnota> ]\n[ <Po????te??n?? hodnota>, <Koncov?? hodnota>, <Krok> ]\n[ <V??raz>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]\n[ <V??raz>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota>, <Krok> ]
SetActiveView=NastavitAktivniNahled
SetActiveView.Syntax=[ <N??hled> ]\n[ <Rovina> ]
SetAxesRatio=NastavitPomerOs
SetAxesRatio.Syntax=[ <????slo>, <????slo> ]
SetAxesRatio.Syntax3D=[ <????slo>, <????slo> ]\n[ <????slo>, <????slo>, <????slo> ]
SetBackgroundColor=NastavitBarvuPozadi
SetBackgroundColor.Syntax=[ <Barva> ]\n[ <Objekt>, <Barva> ]\n[ <??erven??>, <Zelen??>, <Modr??> ]\n[ <Objekt>, <??erven??>, <Zelen??>, <Modr??> ]
SetCaption=NastavitPopisek
SetCaption.Syntax=[ <Objekt>, <Text> ]
SetColor=NastavitBarvu
SetColor.Syntax=[ <Objekt>, <Barva> ]\n[ <Objekt>, <??erven??>, <Zelen??>, <Modr??> ]
SetConditionToShowObject=NastavitPodminkuZobrazeni
SetConditionToShowObject.Syntax=[ <Objekt>, <Podm??nka> ]
SetConstructionStep=NastavitKonstrukcniKrok
SetConstructionStep.Syntax=[ <????slo> ]
SetCoords=NastavitSouradnice
SetCoords.Syntax=[ <Objekt>, <x>, <y> ]\n[ <Objekt>, <x>, <y>, <z> ]
SetDecoration=NastavitDekoraci
SetDecoration.Syntax=[ <Objekt>, <????slo> ]\n[ <??se??ka>, <????slo>, <????slo>]
SetDynamicColor=NastavitDynamickeBarvy
SetDynamicColor.Syntax=[ <Objekt>, <??erven??>, <Zelen??>, <Modr??> ]\n[ <Objekt>, <??erven??>, <Zelen??>, <Modr??>, <Nepr??hlednost> ]
SetFilling=NastavitVypln
SetFilling.Syntax=[ <Objekt>, <????slo> ]
SetFixed=Upevnit
SetFixed.Syntax=[ <Objekt>, <true | false> ]\n[ <Objekt>, <true | false>, <true | false> ]
SetImage=NastavitObrazek
SetImage.Syntax=[ <Objekt>, <Obr??zek> ]\n[ <Objekt>, <Text> ]
SetLabelMode=NastavitRezimPopisku
SetLabelMode.Syntax=[ <Objekt>, <????slo> ]
SetLayer=NastavitVrstvu
SetLayer.Syntax=[ <Objekt>, <Vrstva> ]
SetLevelOfDetail=NastavitUrovenDetailu
SetLevelOfDetail.Syntax=[ <Povrch>, <??rove?? detailu> ]
SetLineStyle=NastavitStylCary
SetLineStyle.Syntax=[ <Objekt>, <????slo> ]
SetLineThickness=NastavitTloustkuCary
SetLineThickness.Syntax=[ <Objekt>, <????slo> ]
SetPerspective=NastavitPerspektivu
SetPerspective.Syntax=[ <Text> ]
SetPointSize=NastavitVelikostBodu
SetPointSize.Syntax=[ <Objekt>, <????slo> ]
SetPointStyle=NastavitStylBodu
SetPointStyle.Syntax=[ <Bod>, <????slo> ]
SetSeed=NastavitSeminko
SetSeed.Syntax=[ <Cel?? ????slo> ]
SetSpinSpeed=NastavitRychlostOtaceni
SetSpinSpeed.Syntax=[ <????slo> ]
SetTooltipMode=NastavitRezimTooltip
SetTooltipMode.Syntax=[ <Objekt>, <????slo> ]
SetTrace=NastavitStopu
SetTrace.Syntax=[ <Objekt>, <true | false> ]
SetValue=NastavitHodnotu
SetValue.Syntax=[ <Boolean>, <0|1> ]\n[ <Objekt>, <Objekt> ]\n[ <Seznam>, <????slo>, <Objekt> ]
SetViewDirection=NastavitSmerPohledu
SetViewDirection.Syntax=[ ]\n[ <Sm??r> ]\n[ <Sm??r>, <Animace> ]
SetVisibleInView=NastavitViditelnostVOkne
SetVisibleInView.Syntax=[ <Objekt>, <????slo n??hledu 1|2>, <Boolean> ]
Shear=Zkoseni
Shear.Syntax=[ <Objekt>, <P????mka>, <Koeficient> ]
ShortestDistance=NejkratsiVzdalenost
ShortestDistance.Syntax=[ <Seznam ??se??ek>, <Po????te??n?? Bod>, <Koncov?? Bod>, <Booleovska hodnota> ]
ShowAxes=ZobrazitOsy
ShowAxes.Syntax=[]\n[ <Boolean> ]\n[ <N??hled>, <Boolean> ]
ShowGrid=ZobrazitMrizku
ShowGrid.Syntax=[]\n[ <Boolean> ]\n[ <N??hled>, <Boolean> ]
ShowLabel=ZobrazitPopis
ShowLabel.Syntax=[ <Objekt>, <Boolean> ]
ShowLayer=ZobrazitVrstvu
ShowLayer.Syntax=[ <????slo> ]
Shuffle=Promichat
Shuffle.Syntax=[ <Seznam> ]
SigmaXX.Syntax=[ <Seznam bod??> ]\n[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
SigmaXY.Syntax=[ <Seznam bod??> ]\n[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic> ]
SigmaYY.Syntax=[ <Seznam bod??> ]
Simplify=Zjednodusit
Simplify.Syntax=[ <Funkce> ]\n[ <Text> ]
Simplify.SyntaxCAS=[ <Funkce> ]
Slider=Posuvnik
Slider.Syntax=[ <Minimum>, <Maximum>, <Krok>, <Rychlost>, <??????ka>, <Je ??hel>, <Horizont??ln??>, <O??ivit>, <N??hodn??> ]
Slope=Smernice
Slope.Syntax=[ <P????mka> ]
SlopeField=SmerovePole
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <????slo n> ]\n[ <f(x, y)>, <????slo n>, <N??sobek d??lky a> ]\n[ <f(x, y)>, <????slo n>, <N??sobek d??lky a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=AnimovanyGraf
SlowPlot.Syntax=[ <Funkce> ]\n[ <Funkce>, <Opakovat (pravdivostn?? hodnota)> ]
Solutions=Reseni
Solutions.Syntax=[ <Rovnice> ]
Solutions.SyntaxCAS=[ <Rovnice> ]\n[ <Rovnice>, <Prom??nn??> ]\n[ <Seznam rovnic>, <Seznam prom??nn??ch> ]
Solve=Vyresit
Solve.Syntax=[ <Rovnice> ]
Solve.SyntaxCAS=[ <Rovnice pro x> ]\n[ <Rovnice>, <Prom??nn??> ]\n[ <Seznam rovnic>, <Seznam prom??nn??ch> ]\n[ <Seznam parametrick??ch rovnic>, <Seznam prom??nn??ch> ]\n[ <Rovnice>, <Prom??nn??>, <Seznam p??edpoklad??> ]
SolveCubic=VyresitKubicky
SolveCubic.SyntaxCAS=[ <Kubick?? polynom> ]
SolveODE=VyresitODE
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Bod na f> ]\n[ <f'(x, y)>, <Po????te??n?? x>, <Po????te??n?? y>, <Koncov?? x>, <Krok> ]\n[ <y'>, <x'>, <Po????te??n?? x>, <Po????te??n?? y>, <Koncov?? t>, <Krok> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Po????te??n?? x>, <Po????te??n?? y>, <Po????te??n?? y'>, <Koncov?? x>, <Krok> ]
SolveODE.SyntaxCAS=[ <Rovnice> ]\n[ <Rovnice>, <Bod(y) na f> ]\n[ <Rovnice>, <Bod(y) na f>, <Bod(y) na f'> ]\n[ <Rovnice>, <Z??visl?? prom??nn??>, <Nez??visl?? prom??nn??>, <Bod(y) na f> ] \n[ <Rovnice>, <Z??visl?? prom??nn??>, <Nez??visl?? prom??nn??>, <Bod(y) na f>, <Bod(y) na f'> ]
SolveQuartic=VyresitKvarticky
SolveQuartic.SyntaxCAS=[ <Polynom ??tvrt??ho stupn??> ]
Sort=Tridit
Sort.Syntax=[ <Seznam> ]\n[ <Hodnoty>, <Kl????e> ]
Spearman.Syntax=[ <Seznam bod??> ]\n[ <Seznam ????sel>, <Seznam ????sel> ]
Sphere=Koule
Sphere.Syntax=[ <Bod>, <Polom??r> ]\n[ <Bod>, <Bod> ]
Spline.Syntax=[ <Seznam bod??> ]\n[ <Seznam bod??>, <????d ??? 3> ]\n[ <Seznam bod??>, <????d ??? 3>, <V??hov?? funkce> ]
Split=Rozdelit
Split.Syntax=[ <Text>, <Seznam rozd??lova????> ]
StartAnimation=StartAnimace
StartAnimation.Syntax=[ ]\n[ <Boolean> ]\n[ <Posuvn??k nebo bod>, <Posuvn??k nebo bod>, ... ]\n[ <Posuvn??k nebo bod>, <Posuvn??k nebo bod>, ..., <Boolean> ]
StartRecord=ZacitNahravat
StartRecord.Syntax=[ ]\n[ <Boolean> ]
StemPlot=SGraf
StemPlot.Syntax=[ <Seznam> ]\n[ <Seznam>, <Nastaven?? -1|0|1> ]
StepGraph=SchodovyGraf
StepGraph.Syntax=[ <Seznam bod??> ]\n[ <Seznam bod??>, <Spojit (logick?? hodnota)> ]\n[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic> ]\n[ <Seznam bod??>, <Spojit (logick?? hodnota)>, <Styl> ]\n[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic>, <Spojit (logick?? hodnota)> ]\n[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic>, <Spojit (logick?? hodnota)>, <Styl> ]
StickGraph=HulkovyGraf
StickGraph.Syntax=[ <Seznam bod??> ]\n[ <Seznam bod??>, <Horizont??ln?? (logick?? hodnota)> ]\n[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic> ]\n[ <Seznam x-ov??ch sou??adnic>, <Seznam y-ov??ch sou??adnic>, <Horizont??ln?? (logick?? hodnota)> ]
Stretch=Roztazeni
Stretch.Syntax=[ <Objekt>, <Vektor> ]\n[ <Objekt>, <P????mka>, <Koeficient> ]
Substitute=Substituce
Substitute.SyntaxCAS=[ <V??raz>, <Seznam substituc??> ]\n[ <V??raz>, <Star??>, <Nov??> ]
Sum=Suma
Sum.Syntax=[ <Seznam> ]\n[ <Seznam>, <Po??et prvk??> ]\n[ <Seznam>, <Seznam ??etnost??> ]\n[ <V??raz>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
Sum.SyntaxCAS=[ <Seznam> ]\n[ <V??raz>, <Prom??nn??>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
SumSquaredErrors=SoucetKvadratickeChyby
SumSquaredErrors.Syntax=[ <Seznam bod??>, <Funkce> ]
SurdText=IracionalniText
SurdText.Syntax=[ <Bod> ]\n[ <????slo> ]\n[ <????slo>, <Seznam> ]
Surface=Plocha
Surface.Syntax=[ <Funkce>, <??hel> ]\n[ <K??ivka>, <??hel>, <P????mka> ]\n[ <V??raz>, <V??raz>, <V??raz>, <Parametr prom??nn?? 1>, <Po????te??n?? hodnota>, <Koncov?? hodnota>, <Parametr prom??nn?? 2>, <Po????te??n?? hodnota>, <Koncov?? hodnota> ]
TDistribution=TRozdeleni
TDistribution.Syntax=[ <Stupn?? volnosti>, <Hodnota n??hodn?? veli??iny> ]\n[ <Stupn?? volnosti>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Stupn?? volnosti>, x, <Kumulativn?? (logick?? hodnota)> ]
TDistribution.SyntaxCAS=[ <Stupn?? volnosti>, <Hodnota n??hodn?? veli??iny> ]
TMean2Estimate=T2StredniOdhad
TMean2Estimate.Syntax=[ <Seznam dat 1>, <Seznam dat 2>, <Hladina spolehlivosti>, <Boolean zdu??en??ch> ]\n[ <Pr??m??r vzorku 1>, <Standardn?? odchylka vzorku 1>, <Velikost vzorku 1>, <Pr??m??r vzorku 2>, <Standardn?? odchylka vzorku 2>, <Velikost vzorku 2>, <Hladina spolehlivosti>, <Boolean zdu??en??ch> ]
TMeanEstimate=TStredniOdhad
TMeanEstimate.Syntax=[ <Seznam dat>, <Hladina spolehlivosti> ]\n[ <Pr??m??r vzorku>, <Standardn?? odchylka vzorku>, <Velikost vzorku>, <Hladina spolehlivosti> ]
TTest.Syntax=[ <Seznam dat>, <P??edpokl??dan?? pr??m??r>, <Konec> ]\n[ <Pr??m??r vzorku>, <Standardn?? odchylka vzorku>, <Velikost vzorku>, <P??edpokl??dan?? pr??m??r>, <Konec> ]
TTest2.Syntax=[ <Seznam dat 1>, <Seznam dat 2>, <Konec>, <Boolean zdu??en??ch> ]\n[ <Pr??m??r vzorku 1>, <Standardn?? odchylka vzorku 1>, <Velikost vzorku 1>, <Pr??m??r vzorku 2>, <Standardn?? odchylka vzorku 2>, <Velikost vzorku 2>, <Konec>, <Boolean zdu??en??ch> ]
TTestPaired=TTestParovat
TTestPaired.Syntax=[ <Seznam dat 1>, <Seznam dat 2>, <Konec> ]
TableText=TextovaTabulka
TableText.Syntax=[ <Seznam>, <Seznam>, ... ]\n[ <Seznam>, <Seznam>, ..., <Zarovn??n?? textu> ]\n[ <Seznam>, <Seznam>, ..., <Zarovn??n?? textu>, <Minim??ln?? ??????ka sloupce> ]\n[ <Seznam>, <Seznam>, ..., <Zarovn??n?? textu>, <Minim??ln?? ??????ka sloupce>, <Minim??ln?? v????ka ????dku> ]
Take=Vyber
Take.Syntax=[ <Seznam>, <Po????te??n?? pozice>, <Koncov?? pozice> ]\n[ <Seznam>, <Po????te??n?? pozice> ]\n[ <Text>, <Po????te??n?? pozice>, <Koncov?? pozice> ]\n[ <Text>, <Po????te??n?? pozice> ]
Take.SyntaxCAS=[ <Seznam>, <Po????te??n?? pozice> ]\n[ <Seznam>, <Po????te??n?? pozice>, <Koncov?? pozice> ]\n[ <Text>, <Po????te??n?? pozice>, <Koncov?? pozice> ]\n[ <Text>, <Po????te??n?? pozice> ]
Tangent=Tecna
Tangent.Syntax=[ <Bod>, <Ku??elose??ka> ]\n[ <Bod>, <Funkce> ]\n[ <Bod na k??ivce>, <K??ivka> ]\n[ <Hodnota x>, <Funkce> ]\n[ <P????mka>, <Ku??elose??ka> ]\n[ <Ku??elose??ka>, <Ku??elose??ka> ]
Tangent.SyntaxCAS=[ <????slo>, <Funkce> ]\n[ <Bod>, <Objekt> ]
TaylorSeries=TaylorovaRada
TaylorSeries.Syntax=[ <Funkce>, <Hodnota x>, <????slo> ]
TaylorSeries.SyntaxCAS=[ <V??raz>, <Hodnota x>, <????slo> ]\n[ <V??raz>, <Prom??nn??>, <Hodnota prom??nn??>, <????slo> ]
Tetrahedron=Ctyrsten
Tetrahedron.Syntax=[ <Rovnostrann?? troj??heln??k> ]\n[ <Bod>, <Bod>, <Bod> ]\n[ <Bod>, <Bod>, <Sm??r> ]
Text.Syntax=[ <Objekt> ]\n[ <Objekt>, <Pravdivostn?? hodnota pro substituci prom??nn??ch> ]\n[ <Objekt>, <Bod> ]\n[ <Objekt>, <Bod>, <Pravdivostn?? hodnota pro substituci prom??nn??ch> ]\n[ <Objekt>, <Bod>, <Pravdivostn?? hodnota pro substituci prom??nn??ch>, <Pravdivostn?? hodnota pro zobrazen?? jako LaTeX vzorec> ]\n[ <Objekt>, <Bod>, <Pravdivostn?? hodnota pro substituci prom??nn??ch>, <Pravdivostn?? hodnota pro zobrazen?? jako LaTeX vzorec>, <Vodorovn?? zarovn??n?? -1|0|1> ]\n[ <Objekt>, <Bod>, <Pravdivostn?? hodnota pro substituci prom??nn??ch>, <Pravdivostn?? hodnota pro zobrazen?? jako LaTeX vzorec>, <Vodorovn?? zarovn??n?? -1|0|1>, <Svisl?? zarovn??n?? -1|0|1> ]
TextToUnicode=TextNaUnicode
TextToUnicode.Syntax=[ <Text> ]
Textfield=TextovePole
Textfield.Syntax=[ <Propojen?? objekt> ]
TiedRank=PrumerovanePoradi
TiedRank.Syntax=[ <Seznam> ]
ToBase=DoSoustavy
ToBase.Syntax=[ <????slo>, <Soustava> ]
ToComplex=Komplexni
ToComplex.Syntax=[ <Vektor> ]
ToExponential=ExponencialniTvar
ToExponential.SyntaxCAS=[ <Komplexn?? ????slo> ]
ToPoint=NaBod
ToPoint.Syntax=[ <Komplexn?? ????slo> ]
ToPolar=GoniometrickyTvar
ToPolar.Syntax=[ <Komplexn?? ????slo> ]\n[ <Vektor> ]
ToolImage=IkonaNastroje
ToolImage.Syntax=[ <????slo> ]\n[ <????slo>, <Bod> ]\n[ <????slo>, <Bod>, <Bod> ]
Top=HorniPodstava
Top.Syntax=[ <Kvadrika> ]
Translate=Posun
Translate.Syntax=[ <Objekt>, <Vektor> ]\n[ <Vektor>, <Po????te??n?? Bod> ]
Transpose=Transponovat
Transpose.Syntax=[ <Matice> ]
TrapezoidalSum=LichobeznikovySoucet
TrapezoidalSum.Syntax=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x>, <Po??et lichobe??n??k??> ]
TravelingSalesman=ObchodniCestujici
TravelingSalesman.Syntax=[ <Seznam bod??> ]
TriangleCenter=StredTrojuhelniku
TriangleCenter.Syntax=[ <Bod>, <Bod>, <Bod>, <????slo> ]
TriangleCurve=TrojuhelnikovaKrivka
TriangleCurve.Syntax=[ <Bod>, <Bod>, <Bod>, <Rovnice> ]
Triangular=Trojuhelnikove
Triangular.Syntax=[ <Doln?? mez>, <Horn?? mez>, <Modus>, <Hodnota n??hodn?? veli??iny> ]\n[ <Doln?? mez>, <Horn?? mez>, <Modus>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Doln?? mez>, <Horn?? mez>, <Modus>, x, <Kumulativn?? (logick?? hodnota)> ]
TrigCombine=TrigonometrickyUpravit
TrigCombine.Syntax=[ <V??raz> ]\n[ <V??raz>, <C??lov?? funkce> ]
TrigExpand=TrigonometrickyRozsirit
TrigExpand.Syntax=[ <V??raz> ]\n[ <V??raz>, <C??lov?? funkce> ]
TrigExpand.SyntaxCAS=[ <V??raz> ]\n[ <V??raz>, <C??lov?? funkce> ]\n[ <V??raz>, <C??lov?? funkce>, <C??lov?? prom??nn??> ]\n[ <V??raz>, <C??lov?? funkce>, <C??lov?? prom??nn??>, <C??lov?? prom??nn??> ]
TrigSimplify=TrigonometrickyZjednodusit
TrigSimplify.Syntax=[ <V??raz> ]
Trilinear=Trilinearni
Trilinear.Syntax=[ <Bod>, <Bod>, <Bod>, <????slo>, <????slo>, <????slo> ]
TurningPoint=InflexniBod
TurningPoint.Syntax=[ <Polynom> ]
TurningPoint.SyntaxCAS=[ <Funkce> ]
Turtle=Zelva
Turtle.Syntax=[]
TurtleBack=ZelvaZpet
TurtleBack.Syntax=[ <??elva>, <Vzd??lenost> ]
TurtleDown=ZelvaPeroDolu
TurtleDown.Syntax=[ <??elva> ]
TurtleForward=ZelvaVpred
TurtleForward.Syntax=[ <??elva>, <Vzd??lenost> ]
TurtleLeft=ZelvaDoleva
TurtleLeft.Syntax=[ <??elva>, <??hel> ]
TurtleRight=ZelvaDoprava
TurtleRight.Syntax=[ <??elva>, <??hel> ]
TurtleUp=ZelvaPeroNahoru
TurtleUp.Syntax=[ <??elva> ]
Type=Typ
Type.Syntax=[ <Objekt> ]
UnicodeToLetter=UnicodeNaZnak
UnicodeToLetter.Syntax=[ <Cel?? ????slo> ]
UnicodeToText=UnicodeNaText
UnicodeToText.Syntax=[ <Seznam cel??ch ????sel> ]
Uniform=Uniformni
Uniform.Syntax=[ <Doln?? mez>, <Horn?? mez>, <Hodnota n??hodn?? veli??iny> ]\n[ <Doln?? mez>, <Horn?? mez>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Doln?? mez>, <Horn?? mez>, x, <Kumulativn?? (logick?? hodnota)> ]
Union=Sjednoceni
Union.Syntax=[ <Seznam>, <Seznam> ]\n[ <Mnoho??heln??k>, <Mnoho??heln??k> ]
Unique=Unikatni
Unique.Syntax=[ <Seznam> ]
UnitOrthogonalVector=JednotkovyNormVektor
UnitOrthogonalVector.Syntax=[ <P????mka> ]\n[ <??se??ka> ]\n[ <Vektor> ]
UnitOrthogonalVector.Syntax3D=[ <P????mka> ]\n[ <??se??ka> ]\n[ <Vektor> ]\n[ <Rovina> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektor> ]
UnitVector=JednotkovyVektor
UnitVector.Syntax=[ <Objekt> ]
UnitVector.SyntaxCAS=[ <Vektor> ]
UpdateConstruction=AktualizaceKonstrukce
UpdateConstruction.Syntax=[ ]\n[ <Po??et opakov??n??> ]
UpperSum=HorniSoucet
UpperSum.Syntax=[ <Funkce>, <Po????te??n?? hodnota x>, <Koncov?? hodnota x>, <Po??et obd??ln??k??> ]
Variance=Rozptyl
Variance.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
Vector=Vektor
Vector.Syntax=[ <Bod> ]\n[ <Po????te??n?? Bod>, <Koncov?? Bod> ]
Vertex=Vrchol
Vertex.Syntax=[ <Ku??elose??ka> ]\n[ <Nerovnost> ]\n[ <Mnoho??heln??k> ]\n[ <Mnoho??heln??k>, <Index> ]\n[ <??se??ka>, <Index> ]
VerticalText=SvislyText
VerticalText.Syntax=[ <Text> ]\n[ <Text>, <Bod> ]
Volume=Objem
Volume.Syntax=[ <T??leso> ]
Voronoi.Syntax=[ <Seznam bod??> ]
Weibull.Syntax=[ <Tvar>, <Stupnice>, <Hodnota n??hodn?? veli??iny> ]\n[ <Tvar>, <Stupnice>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Tvar>, <Stupnice>, x, <Kumulativn?? (logick?? hodnota)> ]
Weibull.SyntaxCAS=[ <Tvar>, <Stupnice>, <Hodnota n??hodn?? veli??iny> ]
ZMean2Estimate=Z2StredniOdhad
ZMean2Estimate.Syntax=[ <Seznam dat 1>, <Seznam dat 2>, <??1>, <??2>, <Hladina spolehlivosti> ]\n[ <Pr??m??r vzorku 1>, <??1>, <Velikost vzorku 1>, <Pr??m??r vzorku 2>, <??2>, <Velikost vzorku 2>, <Hladina spolehlivosti> ]
ZMean2Test=ZTest2Prumeru
ZMean2Test.Syntax=[ <Seznam dat 1>, <??1>, <Seznam dat 2>, <??2>, <Konec> ]\n[ <Pr??m??r vzorku 1>, <??1>, <Velikost vzorku 1>, <Pr??m??r vzorku 2>, <??2>, <Velikost vzorku 2>, <Konec> ]
ZMeanEstimate=ZStredniOdhad
ZMeanEstimate.Syntax=[ <Seznam dat>, <??>, <Hladina spolehlivosti> ]\n[ <Pr??m??r vzorku>, <??>, <Velikost vzorku>, <Hladina spolehlivosti> ]
ZMeanTest=ZTestPrumeru
ZMeanTest.Syntax=[ <Seznam dat>, <??>, <P??edpokl??dan?? pr??m??r>, <Konec> ]\n[ <Pr??m??r vzorku>, <??>, <Velikost vzorku>, <P??edpokl??dan?? pr??m??r>, <Konec> ]
ZProportion2Estimate=ZOdhad2Proporce
ZProportion2Estimate.Syntax=[ <Proporce vzorku 1>, <Velikost vzorku 1>, <Proporce vzorku 2>, <Velikost vzorku 2>, <Hladina spolehlivosti> ]
ZProportion2Test=Z??Test2Proporce
ZProportion2Test.Syntax=[ <Proporce vzorku 1>, <Velikost vzorku 1>, <Proporce vzorku 2>, <Velikost vzorku 2>, <Konec> ]
ZProportionEstimate=ZOdhadProporce
ZProportionEstimate.Syntax=[ <Proporce vzorku>, <Velikost vzorku>, <Hladina spolehlivosti> ]
ZProportionTest=ZTestProporce
ZProportionTest.Syntax=[ <Proporce vzorku>, <Velikost vzorku>, <P??edpokl??dan?? proporce>, <Konec> ]
Zip.Syntax=[ <V??raz>, <Prom??nn??1>, <Seznam1>, <Prom??nn??2>, <Seznam2>, ... ]
Zipf.Syntax=[ <Po??et prvk??>, <Exponent> ]\n[ <Po??et prvk??>, <Exponent>, <Kumulativn?? (logick?? hodnota)> ]\n[ <Po??et prvk??>, <Exponent>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
Zipf.SyntaxCAS=[ <Po??et prvk??>, <Exponent>, <Hodnota n??hodn?? veli??iny>, <Kumulativn?? (logick?? hodnota)> ]
ZoomIn=Zvetsit
ZoomIn.Syntax=[ ]\n[ <M??????tko> ]\n[ <M??????tko>, <St??ed> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]\n[ <Min x>, <Min y>, <Min z>, <Max x>, <Max y>, <Max z> ]
ZoomOut=Zmensit
ZoomOut.Syntax=[ <M??????tko> ]\n[ <M??????tko>, <St??ed> ]
mad.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
mean=prumer
mean.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
nCr.Syntax=[ <????slo n>, <????slo r> ]
stdev.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]
stdevp.Syntax=[ <Seznam zdrojov??ch dat> ]\n[ <Seznam ????sel>, <Seznam ??etnost??> ]