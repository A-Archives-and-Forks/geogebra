@use 'colors';
$emptyHeight: 212px;
$deleteTime: 120ms;

.GeoGebraFrame {
	.tableViewParent {
		height: 100%;
		min-height: $emptyHeight + 56px;
	}

	.main >* {
		position: absolute !important;
		display: inline-block;
	}

	.tableViewMain {
		margin-top: 8px;
		margin-left: 0px;
		margin-right: 0px;
	}

	// we want upper border when we are in portrait mode, but the table of
	// values view is not in fullscreen (.withShadow is set on the header
	// in fullscreen mode, we need the neighbouring .main component)
	&.portrait .toolPanelHeading:not(.withShadow) ~ .main .tvTable {
		td, th {
			border-width: 1px 1px 0 0;
		}
	}

	.tableEditor {
		box-sizing: border-box;
		background-color: colors.$white;
		border: 1px colors.$purple-default solid;
		overflow: hidden;
		text-align: right;
		min-height: 51px;
		padding-left: 16px;

		canvas {
			transform: translateY(-50%);
			position: relative;
			top: 50%;
		}
	}

	.editableCell {
		cursor: text;
	}

	.tvTable {
		@mixin textSelect($type) {
			user-select: $type;
			-moz-user-select: $type;
			-webkit-user-select: $type;
		}

		td, th {
			border-width: 0 1px 1px 0;
			border-color: colors.$black-12;
			border-style: solid;
			box-sizing: border-box;
			min-width: 120px;
			max-width: 180px;
			transition: min-width $deleteTime;
			.content {
				transition: width $deleteTime, opacity $deleteTime, margin $deleteTime ease-in;
			}
			&.deleteCol {
				min-width: 0;

				.content {
					overflow: hidden !important;
					width: 0px !important;
					margin-left: -81px !important;
					text-align: right;
					opacity: 0;
				}
			}

			&.errorCell {
				cursor: pointer;
              	border-width: 1px;
                border-color: colors.$tableview-error;
            }
		}

		.values {
			@include textSelect(text);
			position: relative;

			&:after {
				content: '';
				display: block;
				position: absolute;
				top: 0;
				bottom: 0;
				right: 0;
				width: 100%;
				pointer-events: none;
				background: linear-gradient(to left, #fff 70px, colors.$transparent-white 120px, colors.$transparent-white),
					linear-gradient(to top, #fff 20px, colors.$transparent-white 52px, colors.$transparent-white);
			}

			thead {

				@include textSelect(none);

				th {
					height: 56px;
					padding: 0;
					position: sticky;
					top: 0;
					background: colors.$tableview-header;

					.content {
						text-align: center;
						padding: 12px 0 12px 16px;
						display: inline-flex;
						margin: auto;
						float: right;
						color: colors.$text-primary;

						.gwt-Label {
							font-size: 100%;
							font-weight: bold;
							line-height: 32px;
						}

						.MyToggleButton {
							margin: auto 0 auto 0;
							padding: 4px 4px 4px 0;
							border: 0;
							background-color: transparent;

							img {
								opacity: 0.54;
							}

							&:hover img {
								opacity: 1;
							}
						}
					}
				}


			}

			td {
				height: 52px;
				text-align: right;

				.content {
					font-size: 100%;
					font-family: 'mathsans';
					color: colors.$text-primary;
					text-align: right;
					float: left;
					padding: 16px 12px 16px 16px;
					text-overflow: ellipsis;
					overflow: hidden;
					width: calc(100% - 16px);
					box-sizing: border-box;
				}

				.errorStyle {
					border-top: 16px solid colors.$tableview-error;
                    border-left: 16px solid transparent;
                    display: inline-block;
				}

				&.deleteCol .content {
					margin-left: 16px;
					margin-right: 32px;
				}
			}
		}

		.mainScrollPanel {
			width: 100%;
		}

		.mainScrollPanel .valueScroller {
			flex-grow: 1;
			overflow-y: auto !important;
		}
	
		.outerScrollPanel{
			overflow: hidden !important;
		}
	
		.outerScrollPanel > div{
			height: 100%;
		}
	
		/*needed for vertical scrolling*/
		.valueScroller div, .mainScrollPanel{
			height: 100%;
		}
		
		.headerScroller{
			width: 100%;
			overflow: hidden !important;
		}		
	}
}